Expression qualitative de politiques d’adaptation pour les
composants Fractal
Franck Chauvel∗,∗∗, Olivier Barais∗, Noël Plouzeau∗, Isabelle Borne∗∗, Jean-Marc Jézéquel∗
∗ IRISA (INRIA & Université de Rennes 1)
Campus de Beaulieu
F-35042 RENNES (FRANCE)
prénom.nom@irisa.fr
∗∗ Laboratoire VALORIA (Université de Bretagne Sud)
Centre de Recherche Yves Coppens
Campus de Tohannic
56017 VANNES CEDEX
prénom.nom@univ-ubs.fr
Résumé. Les plates-formes d’exécution récentes telles que Fractal ou Open-
COM offrent de nombreuses facilités pour assurer la prise en compte de pro-
priétés extra-fonctionnelles (introspection, sondes, chargement dynamique, etc).
Cependant, l’intégration de politiques d’adaptation reste délicate car elle néces-
site de corréler la configuration du système avec l’évolution de son environ-
nement. Le travail présenté dans cet article propose une description qualitative
des évolutions de l’environnement et une interprétation possible basée sur de
la logique floue. L’article présente également une extension de la plate-forme
Fractal implémentant les mécanismes nécessaires à l’exécution de ces politiques
d’adaptation de haut niveau. L’approche est illustrée à l’aide d’un serveur HTTP
qui modifie sa configuration (architecturale et locale) en fonction de plusieurs
paramètres extra-fonctionnels tels que la charge du serveur et la dispersion des
requêtes.
Summary
Most of runtime platforms such as Fractal or OpenCOM provide various facilities to man-
age extra-functional properties (reflexivity, ressources sensors, dynamic loading, etc). How-
ever, besides these facilities it is still not possible to describe and interpret directly some high
level adaptation policies which correlate the interal configuration of the system with the envi-
ronment’s state. Teh contribution of this paper is provides a extension of the Fractal platform
which enable the direct execution of high-level adaptation policies. Our approach is illustrated
thanks to a web server where two adaptation policies are deployed: one for handling the use of
a cache, and other for handling the number of deployed data servers.
