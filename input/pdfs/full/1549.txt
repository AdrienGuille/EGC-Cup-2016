Transformation des concepts du  
diagramme de classe UML en OWL full 
 
Macaire Ahlonsou, Emmanuel Blanchard 
Henri Briand, Fabrice Guillet 
2bis boulevard Léon Bureau BP96228 de l’Université de Nantes 
http://www.sciences.univ-nantes.fr/lina/fr/ 
LINA – Université de Nantes 
Ecole polytechnique de l’université de Nantes 
La Chantrerie, rue Christian Pauc 44306 Nantes CEDEX 3 
 
{Prenom.Nom}@polytech.univ-nantes.fr 
 
Résumé. Le web peut être considéré comme une grande base de 
connaissances. La recherche des informations pertinentes sur la toile est rendue 
de plus en plus difficile, voire impossible avec l’accroissement de la 
volumétrie des pages disponibles. Le problème réside dans le fait que les outils 
existants ne peuvent pas s’appuyer actuellement sur une description du 
contenu des documents. Le web sémantique utilise différents langages pour 
mieux exploiter et traiter les contenus des ressources web. Dans le but de 
passer de UML vers OWL, il est intéressant d’étudier la possibilité de 
transformer chacun des concepts du diagramme de classe UML  en OWL.  
 
1 Introduction 
 
UML (Unified Modeling Language) (Gaertner et al. 2002) est un langage de modélisation 
orienté objet clairement adopté dans le monde industriel. Le web sémantique est une vision 
du futur web dans lequel l'information serait explicitée de manière à permettre son traitement 
automatique par des machines. Nombreuses sont les applications qui sont déjà modélisées en 
UML. Il n’existe pas de langage de modélisation spécifique pour modéliser une base de 
connaissance. On peut étendre l’utilisation de UML, notamment les diagrammes de classe à 
cette fin (Walter 1998). 
L’objectif de cet article est d’étudier la possibilité de transformer les concepts du 
diagramme de classe UML (langage semi formel) en OWL (langage formel). Cette 
transformation est effectuée dans un seul sens (UML vers OWL) et reste dans un monde 
clos. Nous proposons de transformer trois concepts du diagramme de classe après avoir situé 
les divers langages du web sémantique les uns par rapport aux autres, en mettant en avant 
leurs limites.  
 
2 Langages et définitions 
 
2.1 UML 
 
UML est un langage de modélisation plébiscité dans le domaine de la conception. Il 
permet de représenter les composants statiques et dynamiques des systèmes dépendant des 
logiciels à travers des modèles représentés par des vues. Ces vues sont manipulées à travers 
des diagrammes. Cet article ne traitera que le cas des diagrammes de classe. 
- 13 - RNTI-E-5
Transformation des concepts du diagramme de classe UML  en OWL full 
 
2.2 Web sémantique 
 
Le web est une notion qui a beaucoup évolué dans le temps. Aujourd’hui, on tend vers le 
web sémantique qui permet de donner du sens aux ressources utilisées sur le web et d’aider 
plus efficacement les utilisateurs dans leur recherche (Berners-Lee et al. 2001). Il est basé sur 
le concept d’Ontologie. «An Ontology is a formal, explicit specification of a shared 
conceptualizations» (Gruber 1993). Les  ontologies sont considérées comme des 
spécifications partielles et formelles d’une conceptualisation (Guarino et al. 1995). 
Quatre langages sont issus du web sémantique pour la formalisation des ontologies : 
 
RDF: La spécification RDF utilise le terme de déclaration (statement) afin de décrire un 
triplet. Formellement, elle s’exprime de la façon suivante : le sujet possède un prédicat 
d’objet. En effet, un sujet est une ressource (représentée par un ovale) et est identifié de 
façon unique par une URI (unique resource identifier). Une URI est un espace de nommage 
et peut être une URL (unique resource location) ou un identifiant (ID).  
 
RDFS ajoute à RDF la possibilité de définir des hiérarchies de classes et de propriétés 
dont l’applicabilité et le domaine de valeurs peuvent être contraintes à l’aide des attributs  
rdfs :domain et rdfs :range. A chaque domaine applicatif peut être ainsi associé un schéma 
identifié par un préfixe particulier et correspondant à une URI. 
 
DAML+OIL : RDFS  ne décrit pas  avec précision la sémantique, ne possède pas de 
modèle d’inférence ; la cardinalité est limitée à 0 ou 1. DAML+OIL permet de corriger ces 
lacunes. 
 
OWL (Bechhofer et al. 2004) : DAML+OIL est incapable de vérifier la consistance des 
ontologies et n’utilise pas une sémantique formelle. OWL corrige les faiblesses de 
DAML+OIL. Il est décomposé en OWL lite, OWL DL, et OWL full (Hart et all. 2004).  
OWL Lite est un sous langage de OWL DL et définit les concepts simples de OWL. 
La cardinalité est limitée à 0 ou 1.  
OWL DL est un sous langage de OWL Full et se base sur la logique descriptive. Il 
défini les concepts plus complexes comme le complément, l’intersection, l’union, etc.  
OWL Full autorise le mélange arbitraire avec le schéma RDF. Il est plus complet 
que OWL Lite et OWL DL et sera utilisé  pour la transformation des concepts du diagramme 
de classe UML.  
 
 
3 UML vers OWL 
 
Seuls trois concepts du diagramme de classe UML seront traités dans cet article. Les 
autres concepts et diagrammes sont traités dans un autre document (Macaire et al. 2005). 
 
3.1   Le Concept de classe 
 
 Exemple : Donnons le code OWL et le graphe correspondant à la représentation 
d'une classe de type Personne. 
 
 
- 14 -RNTI-E-5
Macaire Ahlonsou et al. 
 
UML Graphe OWL  Code OWL 
 
Personne
 
 
  
 
<owl:Class rdf:ID= "Personne"/>    
 
 
TAB 1 – tableau récapitulatif de la représentation d’une classe en UML et OWL. 
 
Ce tableau exprime la notion de classe en UML, le graphe et le code correspondant à 
cette classe en OWL. Il est important de noter que les propriétés des relations (transitivité, 
inverse…) exprimées sur les classes en UML sont aussi exprimables sur les classes OWL.  
 
3.2 Le Concept de propriété 
 
En OWL on a deux types de propriétés : les propriétés d’objet (owl :ObjectProperty) ou 
les associations entre classes et les propriétés d’attribut (owl :DatatypeProperty) ou les 
attributs d’une classe. On peut exprimer la réciproque d’une propriété. La propriété d’objet et 
sa réciproque sont équivalentes aux rôles en UML ; de même, on peut exprimer des 
cardinalités sous forme de contraintes de cardinalité sur les propriétés d’objets en OWL. 
 
Exemple : « un auteur connu, crée au moins une œuvre ». Dans cet exemple, les deux classes 
définies sont : la classe Auteur et la classe Œuvre. La propriété d’objet «crée» a pour 
domaine la classe «Auteur» et pour Image la classe «Œuvre». La propriété réciproque de 
«crée» est «est_créée_par». La propriété d’attribut de la classe Auteur est « nom ».  
 
Oeuvre
Auteur
nom
1..n
1..ncrée
 
 
FIG. 1 - Diagramme de Classe UML & Graphe OWL correspondant à l’exemple de propriété OWL. 
 
On pourrait donner le code OWL correspondant au graphique. Notons que ce code peut 
être obtenu par saisie de cet exemple dans Protégé2000. 
 
3.3 Le Concept de composition 
 
En UML, la composition est une agrégation (association transitive) particulière avec 
une forte appartenance et dépendance entre les cycles de vie du composé et de ses 
rdf:type Personne 
owl:Class 
owl:Class 
f:Auteur 
f:Oeuvre 
f:crée 
owl :ObjectProperty 
owl:DatatypeProperty 
f :Auteur:nom 
1 
rdf:type 
 
rdf:type 
 
rdf:type 
rdf:type 
xsd:String owl:domain   
owl:domain owl:range  
owl:range  
rdf :minCardinality 
- 15 - RNTI-E-5
Transformation des concepts du diagramme de classe UML  en OWL full 
 
composants. La multiplicité du côté du composé est toujours de 1 (Gaertner et al. 2002). La 
disparition du composée entraîne celle des composants.  
 
En OWL, la composition est une association transitive avec la notion de container 
matérialisé par « Bag » (ressources non triées) ou « Seq » (ressources triées) et de cardinalité 
« un » du côté du composé. Les containers « Bag et Seq » sont des collections et permettent 
de signifier que la disparition du composé entraîne celle du composant. La composition peut 
être mappée en OWL par des concepts équivalents. 
 
Exemple. Graphe correspondant au diagramme de classe UML de l’exemple : «Un livre de 
titre connu, paru à une date donnée, contient au moins une page». 
 
 
Page
Livre
parution
1
1..n
+contient
 
 
 
FIG. 2 - Diagramme de Classe UML & Graphe OWL correspondant à l’exemple de la composition. 
 
Une partie du code OWL correspondant à la composition: 
<owl:ObjectProperty rdf:ID = "contient"> 
      <rdf:type rdf:resource="&owl;TransitiveProperty" /> 
      <rdfs:domain rdf:resource="#Livre"/> 
      <rdfs:range rdf:resource="#Page"/> 
      <rdf:Seq ID="#Livre"> 
             <rdf :li resource="#Page" /> 
       </rdf:Seq> 
</owl:ObjectProperty> 
  
 
4 Conclusion 
 
Dans cet article, nous avons étudié la possibilité de transformer les concepts d’un 
diagramme de classe  UML en OWL. Nous proposons par la suite de transformer tous les 
autres concepts du diagramme de classe UML en OWL, d’étudier la solution qui consiste à 
utiliser les méta - modèles. Le passage de UML à OWL permet de développer des 
applications de type web sémantique et des systèmes à base de connaissances. Après 
transformation de chacun des concepts du diagramme de classe, on va pouvoir les utiliser 
owl:ObjectProperty 
f :Livre 
f :seq 
f :Page 
f :contient 
rdf :type 
 
owl:range  
owl:domain  rdf :Seq  
1 
rdf :minCardinality 
f :Livre.parution 
xsd :String 
 
owl:domain  owl:range  
owl :DataTypeProperty 
rdf :type 
 
- 16 -RNTI-E-5
Macaire Ahlonsou et al. 
 
pour saisir dans un outil de gestion de base de connaissances (Protégé par exemple) les 
modèles de classe. Nous avons implémenté un exemple dans Protégé (Protégé 2005). 
 
 
Références 
 
Ahlonsou M. , Blanchard E., Briand H. , Guillet F. (2005), Transformation des concepts du 
diagramme de classe UML en OWL FULL, EGC 2005, workshop Modelling of 
Knowledge. January 2005: Paris. 
Protégé2000 (2005), Stanford, California,  http://protege.stanford.edu/, (2005). 
Fürst F. (2004), Ingénierie des Ontologies : une méthode et outil d’opérationnalisation. Thèse 
université de Nantes, 2004. 
Bechhofer S., Van Harmelen F., Horrocks J., Deborah L., Mc Guinness, Peter F.,  
      Patel-Schneider, Stein L. (2004), OWL web ontology Language. 
       http://www.w3.org/TR/2004/REC-owl-ref-20040210/, (2004). 
OMG (2003), Unified Modeling Language Specification v1.5, OMG Document format/03- 
  03-01, http://www.omg.org/cgi-bin/apps/doc?formal/0303-01.zip, March 2003. 
Gasevic D., Damjanovic V., Vladan D. (2003),  Analysis of the MDA Standards in  
  Ontological Engineering, in:Proceedings of the 6
th
 International Conference of  
   Information Technology, Bhubaneswar, India, 2003, 193-196. 
Gaertner N., Muller P. (2002) Modélisation objet avec UML.  Eyrolles, 2002. 
Berners-Lee T., Hendler J. and  Lassila O. (2001), The semantic web. Scientific American  
   284 (2001) 35-43. 
Walter W. (1998), a discussion of the relationship between RDFS and UML. 
   http://www.w3.org/TR/1998/note-rdf-uml-19980804, 04-Aug-1998. 
Guarino N. et Giaretta P. (1995), Ontology and knowledge base, towards a terminological 
   clarification, page 25-32. IOS Press 1995. 
Gruber T. (1993), Translation Approach to Portable Ontology Specifications. Knowledge 
   acquisition, 5(2): 199-220, 1993. 
 
 
Summary 
 
The translation of UML to OWL facilitates the development of semantic web 
represented by the knowledge base. After the transformation of each concept of UML class 
diagram, one will be able to use them to put the models of class diagram in management 
knowledge tool (Protégé for example). In protégé, we can improve the model and then 
translate it in OWL.  
 
 
 
- 17 - RNTI-E-5
- 18 -RNTI-E-5
