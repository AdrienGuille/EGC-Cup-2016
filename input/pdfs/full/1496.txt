Adaptabilité à l’utilisateur dans le contexte des services Web 
 
Céline Lopez-Velasco*, Marlène Villanova-Oliver* 
Jérôme Gensel*, Hervé Martin* 
 
*Laboratoire LSR-IMAG 
BP 72 
38402 Saint Martin d’Hères cedex 
Grenoble, France 
prenom.nom@imag.fr 
http://www-lsr.imag.fr/Les.Personnes/Prenom.Nom 
 
Résumé. Les services Web sont des technologies émergentes permettant une 
interopérabilité entre les différents acteurs (fournisseurs et demandeurs de 
services) du fait de leur architecture reposant sur des technologies standard. 
Cependant à ce jour, aucun des standards des services Web ne prend cependant 
réellement en charge le concept d’adaptation. Ceci est d’autant plus 
problématique que les utilisateurs de services Web attendent d’eux non 
seulement qu’ils répondant à leur besoin mais aussi qu’ils soient adaptés à leur 
profil (caractéristique personnelles, et celles de leur environnement). Nous 
proposons une extension du standard de description des services Web 
(WSDL), appelée AWSDL, afin de supporter l’adaptation des services Web. 
Un module a été développé pour mettre en correspondance les descriptions 
AWSDL des Services Web Adaptés (SWA) et les demandes des utilisateurs. 
 
1 Introduction 
 
Les Services Web (SW) permettent aujourd’hui l’utilisation d’applications distantes par 
d’autres applications. L’architecture sous-jacente aux services Web repose sur trois 
standards : WSDL – Web Service Description Language (Chinnici et al., 2004) qui permet de 
décrire un service, UDDI1 (Universal, Discovery, Description, and Integration) qui permet 
de référencer ce service, et SOAP – Simple Object Access Protocol (Mitra, 2003) qui décrit 
la communication avec ce service. Une fois publiés, ces SW sont potentiellement utilisables 
par des utilisateurs de profils hétérogènes à partir de différents dispositifs d’accès (station de 
travail fixe, téléphone portable, etc.). Pour faire face à cette diversité, il apparaît donc 
souhaitable pour les concepteurs de SW de disposer de moyens visant à rendre ces services 
adaptés, afin d’assurer leur pérennité mais aussi leur utilisabilité. 
Les travaux de recherche existants sur l’adaptabilité des SW mettent l’accent sur le 
contexte d’utilisation (configuration matérielle utilisée, bande passante, etc.) mais peu sur le 
profil de l’utilisateur. En effet, (Paques et al., 2003) et (Amor et al., 2003) ne prennent pas en 
compte le destinataire de l’adaptabilité (l’utilisateur et son contexte). Le travail présenté dans 
cet article propose d’intégrer le profil de l’utilisateur dans WSDL. Ce profil comprend tant 
les caractéristiques personnelles de l’utilisateur que les caractéristiques du contexte 
d’utilisation du SW. L’extension proposée, appelée AWSDL (Adapted Web Service 
                                                 
1 www.uddi.org 
- 153 - RNTI-E-5
Adaptabilité à l’utilisateur dans le contexte des services Web 
Description Language), peut-être utilisée par le concepteur pour décrire les adaptations 
offertes mais aussi par l’utilisateur potentiel pour formaliser les critères spécifiques 
d’adaptation qu’il recherche. Afin de mettre en correspondance ces deux types de 
description, un module spécifique a été développé et intégré à l’architecture de référence. Ce 
module, appelé AMM (Adaptation Matching Module), a pour but de trouver, à partir d’une 
requête émise par un demandeur de SW, ceux qui correspondent le mieux au profil qu’il aura 
décrit grâce à AWSDL. 
Cet article est organisé de la manière suivante : nous présentons dans la section 2 un 
moyen de formaliser un Profil Général de l’Utilisateur (PGU), qui sera intégrer au sein de la 
description de SW (section 3). Afin de permettre la correspondance entre la requête de 
l’utilisateur et les Services Web Adaptés (SWA) disponibles, nous avons conçu l’AMM, 
décrit dans la section 4 avant de conclure. 
 
2 Profil Général de l’Utilisateur 
 
Afin d’organiser la définition du Profil Général de l’Utilisateur (PGU), nous 
distinguons : les caractéristiques personnelles de l’utilisateur, les caractéristiques de son 
contexte et celles du dispositif utilisé. Le formalisme du PGU se base sur des standards du 
W3C2 (RDF – Resource Description Framework (Brickley et al., 2004) et CC/PP – 
Composite Capability/Preference Profiles (Klyne et al., 2004)) et sur les travaux de 
(Lemlouma, 2004) portant sur la description des capacités des dispositifs et du réseau 
utilisés. 
Les caractéristiques personnelles de l’utilisateur (ressource RDF UserCharacteristic) sont 
composées des aspects permanents et évolutifs. Les données permanentes de l’utilisateur 
(composant CC/PP UserPermanent) sont celles qui ne changent pas durant la vie de 
l’utilisateur (tels son nom, sa langue maternelle, etc). Les données évolutives (composant 
CC/PP UserEvolutionary) représentent celles pouvant changées (comme les centres 
d’intérêts de l’utilisateur, ses connaissances, etc.). 
Les caractéristiques du contexte (ressource RDF UserContext) constituent la seconde 
partie du PGU. Le contexte de l’utilisateur est représenté par l’environnement de l’utilisateur 
(composant CC/PP Environmental). Nous y incluons la description de la localisation et le 
moment de la connexion. 
Afin de formaliser la description du dispositif, nous utilisons trois composants CC/PP 
proposés par (Lemlouma, 2004). Ces composants sont inclus dans la ressource RDF que 
nous appelons UserDevice. Les composants CC/PP sont : BrowserUA – pour la description 
du navigateur, SoftwarePlatform – pour la description des capacités logicielles, et 
HardwarePlatform – pour la description des capacités matérielles. 
 
3 AWSDL : une extension de WSDL intégrant les critères 
d’adaptation 
 
Traditionnellement, l’architecture des SW est composée de trois entités : le fournisseur 
construit un SW, il le publie dans le registre de SW et le demandeur recherche par 
l’intermédiaire du registre le SW répondant à ses besoins. Afin d’implémenter cette 
                                                 
2 W3C (World Wide Web Consortium) http://www.w3c.org/ 
- 154 -RNTI-E-5
Lopez-Velasco et al. 
architecture, les standards suivants sont utilisés : WSDL pour décrire le SW fourni, UDDI 
pour l’enregistrer et SOAP pour permettre la communication entre le demandeur et le 
fournisseur de service. 
Dans notre travail nous étendons l’architecture classique afin de prendre en compte le 
besoin d’adaptation de l’utilisateur et les Services Web Adaptés (SWA). Pour permettre cela, 
nous étendons la description de WSDL. Le fournisseur émet au registre la description 
AWSDL (Adapted WSDL). Cette description contient, en plus de la description classique 
permise par WSDL (messages échangés, méthodes proposées, structures de données et 
protocole de communication), la description des critères d’adaptation. L’utilisateur peut 
formaliser à l’aide de AWSDL la requête d’un SW tant en termes de ses besoins qu’en 
termes de critères d’adaptation. 
La contribution de AWSDL est d’insérer les critères d’adaptation dans WSDL selon la 
description déterminée par le PGU. La structure de AWSDL est la suivante. L’élément racine 
awsdl se situe dans l’élément document (élément proposant d’inclure des commentaires dans 
WSDL). Il est composé de deux sous éléments : l’élément user-characteristic constitué des 
descriptions permanentes (sous élément user-permanent) et évolutives (sous élément user-
dynamic) de l’utilisateur, et l’élément user-context décrivant les critères d’adaptation 
concernant la connexion (sous élément connectivity) et l’environnement (sous élément 
environmental) de l’utilisateur. 
L’extension AWSDL a deux types d’utilisations : premièrement il décrit les critères 
d’adaptation des SWA (côté fournisseur), deuxièmement il permet de spécifier les demandes 
d’adaptation des utilisateurs (côté demandeur de service). 
La description, faite par le fournisseur de SWA, spécifie les différentes adaptations 
permises par le SW. Les critères d’adaptation peuvent concerner tant les caractéristiques 
personnelles de l’utilisateur que son contexte. Ces critères sont décrits selon le formalisme de 
description expliquée dans la section précédente. 
Un demandeur de SWA spécifie les critères d’adaptation désirés. L’utilisateur peut faire 
une demande selon les mêmes types d’adaptation que ceux utilisés par le fournisseur de 
SWA : les caractéristiques personnelles de l’utilisateur (tant permanentes que évolutives) et 
la description du contexte (incluant la connexion et l’environnement). Par exemple, un 
utilisateur désire un SW lui répondant en français (caractéristique personnelle statique) et 
pouvant prendre en compte la taille de l’écran de son PDA (caractéristique du contexte). Afin 
que l’utilisateur puisse personnaliser sa requête, nous avons introduit dans AWSDL une 
expression logique (la négation) et un système de poids. L’expression logique not permet à 
l’utilisateur d’exprimer un critère d’adaptation qu’il ne désire pas. Par exemple, l’utilisateur 
ne sachant pas parler espagnol, et se trouvant en dans un pays hispanophone, ne veut pas que 
le SW réponde dans cette langue. Le but de ce système est de pouvoir hiérarchiser les critères 
d’adaptation désirés. L’utilisateur peut attribuer à chaque élément un réel entre 0 et 1 : 1 
étant le critère d’adaptation prioritaire et 0 étant la valeur par défaut, désignant un critère 
d’adaptation sans hiérarchie particulière. Ces deux améliorations s’utilisent comme des 
attributs dans AWSDL. Bien que le fournisseur de SWA utilise aussi AWSDL pour décrire 
ses SW, ces deux dernières spécifications ne sont utilisées que par le demandeur de service. 
 
 
 
- 155 - RNTI-E-5
Adaptabilité à l’utilisateur dans le contexte des services Web 
4 AMM : un module de correspondance entre les 
descriptions de SWA et la demande utilisateur 
 
Afin de permettre la recherche de SWA, lors de l’utilisation de AWSDL, nous avons 
défini un module de correspondance d’adaptation (AMM – Adaptation Matching Module). Il 
effectue les correspondances entre la description d’un SWA et la demande d’un SWA, toutes 
deux exprimées en AWSDL. 
Chaque description de AWSDL est stockée dans un registre afin que l’AMM puisse avoir 
à sa disposition toutes les descriptions des adaptations. Ce registre est un document XML 
appelé registry. L’élément racine (registry) de ce document possède un sous élément, appelé 
aws (pour Adapted Web Service). Chaque SWA est identifié par son nom, introduit comme 
attribut name de l’élément aws. Cet élément est composé de la description AWSDL. Ces 
descriptions sont comparées à la demande de l’utilisateur exprimée elle aussi en AWSDL à 
partir d’un mécanisme de correspondance basée sur des requêtes XQuery. Nous avons 
décomposé ce système en cinq fonctions distinctes : (1) la fonction principale (main(x,y)) 
prend en paramètres la requête de l’utilisateur et le registre de descriptions de SWA ; (2) la 
fonction de correspondance générale (matching(x,y)) a pour but d’extraire du fichier registry 
les extensions AWSDL et de retourner en résultat les services Web répondant aux attentes de 
l’utilisateur ; (3) la fonction de correspondance des composants (matching-component(x,y)) 
permet de connaître les composants CC/PP répondant aux adaptations spécifiques 
demandées dans la requête de l’utilisateur ; (4) la fonction de correspondance des éléments 
(matching-element(x,y)) retourne les éléments identiques entre la requête de l’utilisateur et la 
description de SWA ; (5) la fonction de correspondance des valeurs (matching-value(x,y)) est 
la fonction de plus bas niveau. Elle retourne les valeurs identiques entre la demande de 
l’utilisateur et la description de SWA 
Le fichier XML (result) retourné à l’utilisateur est constitué des résultats des fonctions 
précédemment décrites. L’élément racine (result, résultat de la fonction main) est constitué 
d’un ensemble de SWA (élément service, résultat de la fonction matching). Les SWA 
répondant à la requête de l’utilisateur sont classés dans l’ordre décroissant de leur score, 
calculé selon leur composition en termes de critères d’adaptation. L’élément service est 
constitué des composants CC/PP répondant aux attentes de l’utilisateur (élément component, 
résultat de la fonction matching-component). Cet élément est lui-même composé des 
résultats de la fonction matching-element (élément element), eux même constitués de valeurs, 
résultats de la fonction matching-value (élément value). Chacun de ces éléments XML sont 
constitués de deux attributs : leur nom (attribut name), extrait du registre et leur score 
(attribut weight), équivalent à la somme des poids attribués par l’utilisateur. Nous avons 
choisi de proposer à l’utilisateur l’ensemble des SWA retournés par l’AMM afin de qu’il ait 
à sa disposition un large choix de SWA. Si cette liste de SWA devient trop importante, nous 
pourrions par la suite établir un système de seuil afin de ne pas gêner l’utilisateur avec des 
SWA peu pertinents. 
 
5 Conclusion et perspectives 
 
Dans cet article nous avons décrit comment introduire l’adaptation à l’utilisateur dans le 
contexte des services Web. Premièrement nous avons formalisé un Profil Général de 
l’Utilisateur (PGU) pour ensuite l’intégrer au sein du standard de description des services 
- 156 -RNTI-E-5
Lopez-Velasco et al. 
Web. Cette extension appelée AWSDL permet de décrire : les différents critères d’adaptation 
des services Web que nous nommons Services Web Adaptés (SWA) et la demande de 
l’utilisateur d’un SWA répondant à des adaptations spécifiques. Afin de trouver un SWA 
répondant aux mieux aux attentes de l’utilisateur, nous avons construit un module de 
correspondance des adaptations (AMM), basé sur des requêtes XQuery. 
Une direction future pour notre travail est d’améliorer le PGU. Le nombre d’utilisateurs 
aux services Web (plus généralement aux Systèmes d’Information basés sur le Web) 
grandissant, le PGU construit dans notre travail est amené à être complété. Le PGU est basé 
sur le domaine spécifique des services Web alors qu’un profil général doit avoir pour 
ambition d’être applicable à n’importe quel système. Une seconde direction à prendre en 
compte est l’implémentation de ce travail. 
 
Références 
 
Amor M., Fuentes L., et Troy J.M. (2003), “Putting Together Web services and 
Compositional Software Agents”, Proceedings of the International Conference on Web 
Engineering, Oviedo, Spain, Juillet 2003, pp.44-53. 
Brickley D., et Guha R.V. (2004), “RDF Vocabulary Description Language 1.0: RDF 
Schema”, W3C Recommendation, Février 2004. 
Chinnici R., Gudgin M., Moreau J.-J., Schlimmer J., et Weerawarana S. (2004), “Web 
Services Description Language (WSDL) Version 2.0 Part 1: Core Language”, W3C 
Working Draft, Août 2004. 
Klyne G., Reynolds F., Woodrow C., Ohto H., Hjelm J., Butler M.H., et Tran L. (2004), 
“Composite Capability/Preference Profiles (CC/PP): Structure and Vocabularies 1.0”, 
W3C Recommendation, Janvier 2004. 
Lemlouma T. (2004), “Architecture de Négociation et d’Adaptation de Services Multimédia 
dans des Environnements Hétérogènes”, Thèse, Institut National Polytechnique de 
Grenoble, Grenoble, Juin 2004. 
Mitra N. (2003), “SOAP Version 1.2 Part 0: Primer”, W3C Recommendation, Juin 2003. 
Paques H., Liu L., et PU C., “Adaptation Space: A Design Framework for Adaptive Web 
Services”, in Jeckle M. & Zhang L.-J. (Eds.), Proceedings of the International Conference 
Web Services – ICWS-Europe 2003, Erfurt, Germany, Septembre 2003, pp.49-63. 
Pashtan A., Kollipara S., et Pearce M. (2003), “Adapting Content for Wireless Web 
Services”, IEEE Internet Computing, Volume: 7, Issue: 5, Sept.-Oct. 2003, pp. 79-85. 
 
Summary 
 
Web services, emergent technologies based on standard architecture and standard languages, 
allow interoperability between different actors (provider and requestor of services). However 
today, no Web service standard takes really into account the adaptation concept. This is a 
crucial issue since the users do not only expect Web services to fulfil their needs but also to 
be adapted to their profiles (personal characteristics and environmental ones). We propose an 
extension, called AWSDL, of the standard of Web services description language (WSDL) in 
order to support the Web services adaptation. A module has been developed in order to 
evaluate how the AWSDL descriptions of Web services and user requests match. 
- 157 - RNTI-E-5
- 158 -RNTI-E-5
