Modélisation Intégrée de la Dynamique des Systèmes
d’Information Décisionnels
Estella Annoni, Franck Ravat
Olivier Teste, Gilles Zurflufh
IRIT Equipe SIG-ED,
F-31062 Toulouse Cedex 9, France
{annoni, ravat, teste, zurfluh}@irit.fr,
http://www.irit.fr
Résumé. Les systèmes d’information décisionnels (SID) sont des systèmes d’in-
formation (SI) qui ont pour objectif de faciliter la prise de décision à partir d’in-
formation résultant de processus complexes de dérivation et de préparation des
données de SI sources. Ces processus sont généralement peu modélisés et sont
directement implantés avec des logiciels spécifiques au cours des projets dé-
cisionnels bien que trois modèles particuliers ont été proposés pour représenter
ces processus. En effet, ces modèles utilisent de nouvelles notations distinctes de
celles de la modélisation des données qu’ils proposent. Ils requièrent deux sché-
mas distincts pour les données et les processus alors que les schémas conceptuels
des SID sont déjà nombreux et énormes en raison de la taille des projets et des
spécificités des domaines.
Ainsi, nous proposons des outils pour la prise en compte de la dynamique des
SID et une modélisation intégrée des processus dans le schéma des SID. Nous
définissons les spécificités de la dynamique des SID. L’objectif est de prendre
en compte dans un unique schéma aussi bien les processus liés à la dérivation
des données étudiés par les travaux précédents que ceux liés à la préparation des
données de l’environnement de prise de décision.
1 Introduction
Les systèmes d’information décisionnels (SID) résultent du besoin de réaliser des ana-
lyses complexes de données pour la prise de décision. Ces analyses sont appelées des analyses
OLAP (On-Line Analytical Processing) et elles requièrent une modélisation multidimension-
nelle (Kimball (1996)). La modélisation multidimensionnelle consiste à représenter les don-
nées comme un point dans un espace à plusieurs dimensions. Cette modélisation repose sur :
– le concept de fait qui représente le sujet de l’analyse. C’est l’information qui va retenir
toute l’attention des décideurs. Il est caractérisé par des données appeléesmesures,
– le concept de dimension qui représente un axe de l’analyse. Il est composé de para-
mètres en fonction desquels le fait sera exprimé. Ces paramètres sont organisés en hié-
rarchies et dans ce cas, ils sont dénommés niveau d’une hiérarchie.
Les données des SID dérivent de sources de données existantes. La fiabilité et la valorisation de
ces données sont indispensables pour assurer une bonne prise de décision car elles permettent
une analyse à partir d’informations justes et pertinentes.
D’une part, pour la fiabilité des données, il convient de définir les processus à l’origine
de la dérivation des SID à partir des systèmes sources. Les travaux sur la dynamique des
SID définissent ces processus, appelés ETL (Extraction, Transformation et Loading), après
La dynamique dans la conception des SID
la conception du schéma de données du SID et ce dans un autre schéma (Simitsis (2003); Si-
mitsis et al. (2005); Luján-Mora et al. (2004)). Les trois modèles pour les processus utilisent
des notations différentes de leur modèle de données associé. Les concepteurs décisionnels sont
donc contraints de maîtriser de nouvelles notations.
D’autre part, pour la valorisation des données, il importe de représenter les processus liés
à la préparation de l’environnement décisionnel. Ces processus concernent par exemple à la
validité et à l’accès aux données. Parmi les processus ETL, seul celui relatif à la transformation
des données concerne la préparation du SID. Les autres processus relatifs à la préparation des
données du SID ne sont pas abordés dans les précédents travaux.
Ainsi, dans cet article nous proposons un modèle basé sur le modèle du diagramme de
classes UML pour la représentation de manière intégrée des données et des processus des dif-
férents concepts multidimensionnels. L’article s’organise en cinq sections. Dans la section 2,
nous présentons un état de l’art des travaux sur la dynamique des SID. Puis, dans la section 3,
nous abordons les propriétés et processus de la dynamique des SID. Dans la section 4, nous
décrivons notre modélisation des processus. Enfin, dans la section 5, nous énonçons nos pers-
pectives par rapport à ces travaux.
2 Etat de l’art et contributions
Depuis les premières listes de (Vassiliadis et Sellis (1999); Abelló et al. (2001)) énonçant
les propriétés que doivent vérifier les modèles multidimensionnels, les aspects dynamiques
ne sont pas abordés. Seuls, les aspects statiques sont traités (Tsois et al. (2001)) tels que la
structure complexe des concepts. La dynamique des SID a fait principalement l’objet d’outils
logiciels utilisés lors de l’implantation des SID tels que les outils de type ETL, EAI (Enterprise
Application Integration). Les concepteurs décisionnels disposent de peu de modèles pour la
représentation de ces processus lors du développement de SID. Comme l’affirme depuis une
dizaine d’années (Inmon (1997)), le défaut de prise en compte de ces processus dès l’analyse et
la conception des SID explique que 55% des coûts d’un projet décisionnel soient consacrés aux
processus ETL du SID. En effet, les besoins liés à la dynamique ne sont pas modélisés, puis
les processus sur les données ne sont pas représentés et accessibles pour une valisation par les
décideurs et ce jusqu’à la première livraison du SID. Nous évaluons donc les travaux existants
suivant les processus analysés et l’étape de l’ingénierie à partir de laquelle ces derniers sont
pris en compte.
De manière générale, les travaux existants étudient les processus liés à la dérivation des
données, pour la création du SID (Vassiliadis et al. (2002, 2005); Luján-Mora et al. (2004))
et sa mise à jour (Bouzeghoub et al. (1999)). En effet, ces processus concernent l’extraction
des données depuis les sources de données, la gestion des erreurs lors de l’extraction et le
chargement des données. Ces travaux définissent aussi le calcul des données des SID, qui
est seul processus étudié concernant la préparation des données. Les processus relatifs à la
préparation des données sont donc peu analysés. De plus, tous ces travaux représentent les
processus uniquement à la fin de la phase conception, soit après la définition du schéma du
SID. Les processus sont modélisés dans un deuxième schéma.
(Simitsis (2003)) propose une notation graphique pour la représentation des processus entre
les schémas des sources et le schéma du SID proche de la représentation des outils logiciels
existants. Cette notation est spécifique et nécessite un apprentissage de la représentation de
chaque processus. Elle est dédiée aux informaticiens, mais elle ne l’est pas aux décideurs
qui ont pour fonction de valider le schéma du SID. Ce modèle n’offre donc pas le support
pour une validation et une discussion au cours des itérations en vue de la satisfaction des
besoins utilisateurs. La lisibilité peut difficilement être assurée sans multiplier les schémas car
les sources des SID sont nombreuses dans les projets décisionnels ; ce qui favorise les erreurs
lors des comparaisons et des rapprochements de l’indispensable évaluation globale.
E. Annoni et al.
(Simitsis et al. (2005)) représentent un processus par graphe dont la racine est le proces-
sus et les autres noeuds sont les entrées et sorties du processus. Les auteurs considèrent deux
niveaux de détail des processus, soient le premier niveau appelé "niveau attribut" qui montre
les processus entre les données des sources et celles du SID et le second niveau appelé "niveau
schéma" qui montre les processus entre les concepts englobants des attributs. Les niveaux de
détail constituent une idée intéressante dans le sens où les décideurs et les concepteurs déci-
sionnels n’ont pas les mêmes besoins en terme de connaissance des processus et ces détails
ne doivent pas complexifier la lisibilité et la maintenance du système. Cependant, le niveau
conceptuel doit répondre à la question "De quoi est-il question ?", mais pas à la question "Com-
ment fait le système ?" comme le niveau attribut proposé via la représentation des étapes des
processus. Ainsi, au niveau conceptuel, le niveau de détail schéma permet de répondre aux
attentes des décideurs et de préciser aux concepteurs décisionnels ce dont il est question.
(Luján-Mora et al. (2004)) étendent les diagrammes de classes UML pour représenter la
dynamique des SID en définissant des relations entre les classes du SID et des SI. Le modèle
associé présente l’avantage d’être basé sur UML, mais il ne met pas à profit la possibilité
qu’offre UML de définir des méthodes dans les classes pour une vue globale et intégrée de la
statique et la dynamique d’un système.
Ainsi, les travaux existants étudient très tardivement, et dans un deuxième schéma, les
processus liés à la dérivation des données. Ils n’abordent pas celles liées à la préparation de
l’environnement décisionnel. Dans un de nos précédents travaux, soit (Annoni et al. (2006a)),
nous avons montré comment prendre en compte de manière intégrée les aspects statiques et
dynamiques des SID lors de l’analyse des besoins utilisateurs. Puis, nous avons proposé notre
modèle de données dans (Annoni (2007); Annoni et al. (2008)) qui est une extension du dia-
gramme de classes UML pour la représentation de la structure complexe des concepts mul-
tidimensionnels et la cohérence de l’interrogation. Dans la continuité de ces travaux, nous
proposons de représenter les processus du SID de manière intégrée et homogène par rapport à
la représentation de ces données. Nous modélisons les propriétés de la dynamique des SID et
les processus associés afin :
– de représenter les données et les processus dans un même schéma avec une notation
graphique proche de celle du diagramme de classe UML,
– de favoriser la validation par les décideurs et par les concepteurs décisionnels,
– d’intégrer les processus de dérivation ainsi que ceux de préparation des données.
3 Propriétés et processus de la dynamique des SID
Les processus caractérisent le deuxième aspect de tout système, soit la dynamique. Dans le
domaine des SID, ils correspondent aux opérations réalisées pour extraire les données depuis
les systèmes sources et pour préparer les données de l’environnement de prise de décision.
3.1 Propriétés liées à la dynamique des SID
Nous distinguons deux composantes du SID : technique et décision. La composante tech-
nique est relative à l’exploitation des sources de données. La composante décision est liée
à l’environnement de prise de décision. Au cours des projets menés au sein de la société (I-
D6 (2007)), nous avons listé les propriétés les plus récurrentes relatives à ces composantes.
Les propriétés sont aussi liées aux aspects statiques et dynamiques et elles sont regroupées
en quatre types : statique-technique, statique-décision, dynamique-technique et dynamique-
décision. Les modèles existants ne considèrent que les propriétés statiques-techniques, statiques-
décision et dynamiques-techniques car ils se focalisent sur la modélisation des données et l’ali-
mentation à partir des sources.
Nous représentons les propriétés du SID suivant une structure de graphe orienté (cf. fi-
gure 1) afin de guider l’analyse des besoins et plus précisément l’interview des utilisateurs.
La dynamique dans la conception des SID
FIG. 1 – Graphe général de propriétés
Elles sont regroupées en catégories (représentées par des trapèzes) suivant les rapprochements
sémantiques entre elles. Le graphe est annoté avec des expressions relatives aux besoins pour
les noeuds associés aux propriétés et un poids pour les noeuds associés aux catégories de pro-
priétés. Les propriétés qui caractérisent le contexte technique sont définies dans le sous-graphe
de racine "Technique" et celles qui caractérisent le contexte décision dans le sous-graphe de
racine "Décision". Les catégories liées à la composante Technique sont représentées par des
trapèzes jaunes et celles liées à la composante Décision par des trapèzes verts.
3.2 Processus liés à la dynamique des SID
A partir des propriétés, nous avons défini dix processus liés aux SID dont les processus
ETL. Nous distinguons deux sous ensembles de processus : ceux liés à la dérivation des don-
nées et ceux liés à la préparation des données. Les processus liés à la dérivation sont "harmoni-
ser(), trace(), exception(), permission()", et ceux liés à la préparation sont "rafraîchir(), histo-
riser(), archiver(), consolider(), calculer(), disponible()". Ces processus sont présentés comme
des méthodes des classes-filles de la classe-mère ConceptInformativité dans la figure 2. La mo-
délisation des processus favorise la définition de toutes les données nécessaires pour assurer la
dérivation du SID à partir des systèmes sources et la valorisation des données. Elle met donc en
avant les éventuelles incohérences et les données manquantes. De même, elle constitue pour la
validation des besoins des décideurs liés à la dynamique et elle facilite le développement des
SID.
4 Modélisation homogène et intégrée des données et des pro-
cessus des SID
Notre modèle étendu repose sur quatre types de classes, appelées classes multidimension-
nelles en adéquation avec les principaux concepts de la terminologie multidimensionnelle (fait,
E. Annoni et al.
FIG. 2 – Métamodèle de la dynamique des SID
mesure, dimension, niveau). Tout schémamultidimensionnel est une agrégation de classes mul-
tidimensionnelles associés aux principaux concepts comme indiqué dans notre métamodèle (cf.
figure 2). Ainsi, notre modèle est composé de quatre classes multidimensionnelles, soient les
classes-faits, les classes-dimensions, les classes-mesures et les classes-niveaux.
4.1 Processus par concept multidimensionnel
Notre modèle vise à représenter les données et les processus relatifs à chaque concept
principal. Cependant, tous les processus ne sont pas applicables à tous les concepts multidi-
mensionnels. Nous avons donc défini par classe multidimensionnelle les processus. Nous défi-
nissons cinq opérations communes aux classes-dimensions et les classes-niveaux (rafraîchir(),
calcul(), harmoniser(), trace(), exception()), sachant que l’opération historiser() est applicable
aux classes-dimensions. Cependant, nous définissons neuf opérations pour les classes-faits
et les classes-mesures (historiser(), archiver(), consolider(), disponible(), calcul(), harmoni-
ser(), trace(), exception(), permission()). Seules, les classes-dimensions et les classes-niveaux
contiennent une opération rafraîchir() car le rafraîchissement des dimensions implique celui
des faits connectées. De même, les classes-dimensions et les classes-niveaux ne contiennent
pas les opérations "disponible(), archiver(), consolider() et Permission()" car l’application de
ces processus aux faits implique la mise en oeuvre de ces processus pour les dimensions
La dynamique dans la conception des SID
connectées aux faits. La figure 3 est une instance de notre modèle multidimensionnel défini
à partir de notre métamodèle.
4.2 Modélisation des processus dans une classe multidimensionnelle
Une classe multidimensionnelle est une extension d’une classe du diagramme de classes
UML telle que :
– le compartiment du nom contient le nom de la classe précédé d’un stéréotype correspon-
dant au nom du concept multidimensionnel,
– le compartiment des attributs contient les attributs spécifiques au concept multidimen-
sionnel précédé de symboles suivant les processus dont ils font l’objet,
– le compartiment des méthodes contient les méthodes associées aux processus de dériva-
tion et de préparation suivant la figure 2.
Nous avons constaté que tous les attributs d’une classe multidimensionnelle ne font pas né-
cessairement l’objet de tous les processus appliqués à cette classe. Nous définissons le concept
d’informativité qui a été introduit dans nos précédents travaux (Annoni et al. (2006b)) liés à
l’analyse des besoins du SID. Un concept d’informativité est représenté par un symbole as-
socié à un processus qui indique qu’un attribut fait l’objet de ce processus (donnée membre
symboleConceptI de la classe ConcepInformativité dans la figure 2). Il se place à côté de la vi-
sibilité de l’attribut dans le compartiment des attributs. Dans cette article, nous nous focalisons
sur le compartiment méthode.
Les valeurs de paramètres d’une opération définie pour une classe multidimensionnelle ne
sont pas nécessairement valables pour tous ses attributs. En effet, une opération peut être appli-
quée au concept multidimensionnel et à tous ses attributs, mais pour certains attributs le com-
portement de l’opération et les paramètres peuvent changer, par exemple dans des contextes
différents de dérivation ou de valorisation des données. Pour cela, nous proposons des opé-
rations attribut en ajoutant le stéréotype << attribut >> à la signature de l’opération. Pour
indiquer l’attribut auquel s’applique l’opération, il est défini comme le premier paramètre de
l’opération.
Dans la figure 3, nous présentons un extrait d’un schéma multidimensionnel concernant le
domaine des immobilisations de biens matériels et immatériels d’une organisation. Ce schéma
est composé d’une classe-fait appelée "Immobilisations" et de deux classes-dimensions "Biens"
et "Temps". Seul, le compartiment du nom de la dimension "Temps" est représenté pour des
raisons de place. La classe-fait est définie par la classe-mesure "Valeur_vénale" (relation de
définition matérialisée par un trait entre les classes dont l’une des extrémités est un rond noirci
présentée dans les travaux de (Annoni et al. (2008))). Elle est caractérisée par les deux classes-
mesures, "Amortissement" et "Total_dépréciation" (relation de caractérisation matérialisée par
un trait entre les classes dont l’une des extrémités est un rond vide). La classe-dimension
"Biens" possède une classe-niveau appelée "Modèles".
La classe-fait contient un attribut No_Immo qui est le numéro de l’immobilisation. Les im-
mobilisations sont historisées pendant trois ans sans contrainte d’historisation car le troisième
paramètre n’est pas renseigné dans la signature de l’opération "historiser(année, 3)". Elles sont
archivées durant 5 ans suivant la fonction d’agrégation somme et ce sans contrainte d’archivage
car le quatrième paramètre n’est pas renseigné dans la signature de l’opération "archiver(année,
5, sum)". La signature de la méthode "disponible(18, heure)" indique qu’elles sont disponibles
18 heures par jour. Le suivi des erreurs des données de la classe-fait est réalisé au niveau global,
"trace(3)". Des exceptions sont levées si les données de la classe-fait ne peuvent pas être liées
à celles des classes-dimensions, "exception("Problème de lien", "incohérence")". Les données
de la classe-fait proviennent de traitements simples sur des sources de données homogènes
E. Annoni et al.
suivant la signature de l’opération "harmoniser(1,1)". La classe-fait est accessible que par les
responsables du service Immobilisations d’après l’opération "permission("Immobilisations",
"Responsable")".
Les classes-mesures ont sensiblement les même méthodes, sauf "Valeur_vénale" qui pos-
sède une opération en plus. Nous expliquons donc les méthodes de cette classe-mesure. La
classe-mesure "Valeur_vénale" est historisée, archivée et harmonisée suivant les mêmes para-
mètres que la classe-fait qu’elle définit. Cependant, elles font l’objet d’une consolidation au
plus haut niveau d’agrégation, soit 1. Cela signifie que toutes les fonctions d’agrégation sont
applicables lors de la consolidation des données, soit du comptage à la somme. La signature
de la fonction "calculer(Valeur_vénale, Valeur_achat, Total_dépréciation) «attribut»" indique
que c’est une opération attribut qui s’applique à l’attribut "Valeur_vénale". Cet attribut résulte
d’un calcul à partir des instances de "Valeur_achat" et "Total_dépréciation".
La classe-dimension "Biens" et la classe-niveau "Modèles" ont des signatures d’opéra-
tions identiques. Comme la classe-dimension possède un plus grand nombre d’opérations que
la classe-niveau, nous décrivons les opérations de la classe-dimension. Les biens sont his-
torisés pendant trois ans sans contrainte d’historisation car le troisième paramètre n’est pas
renseigné dans la signature de l’opération "historiser(année, 3)". La signature de l’opération
"rafraîchir(semaine, merge)" indique que les biens sont mis à jour chaque semaine par une
insertion de nouvelles données ou par une mise à jour de données existantes. Le suivi des
erreurs des données de la classe-dimension est réalisé au niveau global, "trace(3)". Des excep-
tions sont levées si des instances de biens existants ont été supprimées, "exception("Données
inexistantes","Suppression")". Les données de la classe-dimension proviennent de traitements
simples sur des sources de données hétérogènes suivant la signature de l’opération "harmoni-
ser(1,2)".
Ainsi, notre modèle permet de représenter les processus relatifs aux concepts de fait, de
mesure, de dimension, de niveau dans le même schéma que celui des données.
5 Conclusion
Notre proposition concerne la problématique de la modélisation de la dynamique des sys-
tèmes d’information décisionnels (SID) au niveau conceptuel de manière intégrée et homogène
avec la statique des SID. Ce travail est défini dans le cadre d’une méthode complète d’analyse
et de conception des SID défini dans (Annoni (2007)). Cette méthode définit un SID à partir
des besoins des décideurs et des sources de données existantes. Elle tient compte des processus
dès la phase de l’analyse. L’apport de cet article est la modélisation conceptuelle multidimen-
sionnelle de ces processus dans le même schéma que celui des données avec un formalisme
homogène et proche d’UML. L’avantage associée est la définition d’un support pour la valida-
tion des besoins relatifs à la statique et à la dynamique des SID.
Notre modélisation est basée sur UML, plus précisément le diagramme de classes UML,
afin de bénéficier de la forte expressivité et de la notoriété de la modélisation UML. Ainsi, les
décideurs et les concepteurs décisionnels ont une vue globale du SID proche de la manière
dont les décideurs se représentent les données.
La prise en compte des processus liés au contexte décisionnel des SID est un problématique
peu abordée dans la littérature. La transformation au niveau logique présente des problèmes tels
que le nombre de structures logiques pour les dimensions ayant plusieurs rôles. De même, peu
La dynamique dans la conception des SID
FIG. 3 – Modélisation multidimensionnelle d’un fait Immobilisations et de ses mesures ainsi
que de la dimension Biens et son niveau
de travaux abordent la problématique des liens entre les fait et les mesures. Actuellement, nous
travaillons sur la prise en compte de ces spécificités.
Références
Abelló, A., J. Samos, et F. Saltor (2001). A framework for the classification and description
of multidimensional data models. In H. C. Mayr, J. Lazanský, G. Quirchmayr, et P. Vogel
(Eds.), DEXA, Volume 2113 of Lecture Notes in Computer Science, pp. 668–677. Springer.
3540425276.
Annoni, E. (2007). Eléments méthodologique pour le développement de systèmes décision-
nels dans un contexte de réutilisation. Thèse de doctorat, Université Toulouse I, Toulouse,
France.
Annoni, E., F. Ravat, et O. Teste (2008). Modélisation de la structure complexe des faits et des
mesures. In INFORSID.
français
Annoni, E., F. Ravat, O. Teste, et G. Zurfluh (2006a). Modélisation adaptée aux besoins utilisa-
teurs dans le développement des systèmes d’information décisionnels. Revue des Nouvelles
Technologies de l’Information RNTI-B-2 (EDA’06), 23–38.
E. Annoni et al.
Annoni, E., F. Ravat, O. Teste, et G. Zurfluh (2006b). Towards multimensional requirement
design. In Data Warehousing and Knowledge Discovery, 8th International Conference, Da-
Wak 2006, Krakow, Poland, September 4-8, 2006, Proceedings. Lecture Notes in Computer
Science 4081 Springer 2006, Volume 4081/2006, pp. 75–84.
Bouzeghoub, M., F. Fabret, et M. Matulovic-Broqué (1999). Modeling the data warehouse
refreshment process as a workflow application. In S. Gatziu, M. A. Jeusfeld, M. Staudt, et
Y. Vassiliou (Eds.), DMDW, Volume 19 of CEUR Workshop Proceedings, pp. 6. CEUR-
WS.org.
I-D6 (2007). I-d6 société spécialisée dans le décisionnel et collaboratrice dans le cadre de la
thèse cifre de numéro de convention 766/2003 préparée par estella annoni de 2003 à 2007.
http ://www.i-d6.com.
Inmon, B. (1997). The data warehouse budget. http ://www.dmreview.com/article_sub.cfm ?articleId=1315,
DM Review Magazine Publisher.
Kimball, R. (1996). The data warehouse toolkit : practical techniques for building dimensional
data warehouses. New York, NY, USA : John Wiley & Sons, Inc.
Luján-Mora, S., P. Vassiliadis, et J. Trujillo (2004). Data mapping diagrams for data warehouse
design with uml. In P. Atzeni, W. W. Chu, H. Lu, S. Zhou, et T. W. Ling (Eds.), ER, Volume
3288 of Lecture Notes in Computer Science, pp. 191–204. Springer. 3540237232.
Simitsis, A. (2003). Modeling and managing etl processes. In M. H. Scholl et T. Grust (Eds.),
VLDB PhD Workshop, Volume 76 of CEUR Workshop Proceedings. CEUR-WS.org.
Simitsis, A., P. Vassiliadis, M. Terrovitis, et S. Skiadopoulos (2005). Graph-based modeling
of etl activities with multi-level transformations and updates. In A. M. Tjoa et J. Trujillo
(Eds.), DaWaK, Volume 3589 of Lecture Notes in Computer Science, pp. 43–52. Springer.
Tsois, A., N. Karayannidis, et T. K. Sellis (2001). Mac : Conceptual data modeling for olap.
In D. Theodoratos, J. Hammer, M. A. Jeusfeld, et M. Staudt (Eds.), DMDW, Volume 39 of
CEUR Workshop Proceedings, pp. 5. CEUR-WS.org.
Vassiliadis, P. et T. K. Sellis (1999). A survey of logical models for olap databases. SIGMOD
Record 28(4), 64–69.
Vassiliadis, P., A. Simitsis, P. Georgantas, M. Terrovitis, et S. Skiadopoulos (2005). A generic
and customizable framework for the design of etl scenarios. Inf. Syst. 30(7), 492–525.
Vassiliadis, P., A. Simitsis, et S. Skiadopoulos (2002). Conceptual modeling for etl processes.
In D. Theodoratos (Ed.), DOLAP, pp. 14–21. ACM. 1581135904.
Summary
Decision support systems (DSS) are information systems (IS) for helping decision-making
process on information derived and prepared with complex processes on data of exiting IS.
These processes is barely modeled and it is done during DSS implementation step with soft-
ware even though three models have been proposed to represent these processes. In fact, they
use new models which are different from their data model and formalism. So, data and pro-
cesses are represented on two different schemas although DSS schemas are already numerous
and huge due to project size and application domain specificities.
Hence, we provide tools to handle DSS dynamic aspects and an integrated modeling of
dynamic aspects in DSS data model. We define dynamic aspect specificities. Our goal is to
represent within a unique schema both processes of data derivation as previous work and those
of data preparation for decision-making process environment.
