SMAIDoC : Un Syste`me Multi-Agents pour
l’Inte´gration des Donne´es Complexes
F. Clerc, A. Duffoux, C. Rose, F. Bentayeb, O. Boussaid
Baˆtiment L, 5 avenue Pierre-Mende`s-France - France
69676 BRON Cedex – FRANCE
{frederic.clerc, amandine.duffoux, christian.rose}@etu.univ-lyon2.fr,
bentayeb@eric.univ-lyon2.fr, boussaid@univ-lyon2.fr
http ://bdd.univ-lyon2.fr
Re´sume´. L’expansion du World Wide Web et la multiplication des sources de
donne´es conduisent a` la prolife´ration de donne´es he´te´roge`nes (textes, images,
vide´os, sons, bases de donne´es) appele´es donne´es complexes. Pour explorer ces
donne´es, il est ne´cessaire de proce´der a` leur inte´gration dans un format unifie´.
Cette inte´gration pre´sente des difficulte´s de collecte, de structuration et de
stockage des donne´es. Plusieurs approches sont apparues dans la litte´rature
pour l’inte´gration de donne´es, parmi lesquelles celle des me´diateurs-wrappers
ou de l’entreposage. Dans cet article, nous proposons une nouvelle de´marche
d’inte´gration de donne´es complexes qui repose a` la fois sur l’approche classique
d’entreposage de donne´es et sur l’utilisation des syste`mes multi-agents. Cette
nouvelle approche se base sur une architecture e´volutive graˆce a` la technologie
”agent”. Les diffe´rentes e´tapes de la phase d’inte´gration sont alors conside´re´es
comme des taˆches assimile´es a` des services, ge´re´es par des acteurs assimile´s a` des
agents. Pour valider cette approche, nous avons de´veloppe´ le ”Syste`me Multi-
Agent pour l’Inte´gration de Donne´es Complexes”, SMAIDoC.
Mots-Cle´s : inte´gration de donne´es, donne´es complexes, services, agents, Syste`me
Multi-Agents
1 Introduction
Les technologies de l’entreposage de donne´es et de l’analyse en ligne ont largement
fait leurs preuves dans le domaine de la gestion des donne´es et notamment lorsque celles-
ci sont nume´riques. Avec l’ave`nement d’Internet, la prolife´ration des donne´es de nature
varie´e (image, texte, sons, vide´o, bases de donne´es. . .), appele´es donne´es complexes,
s’est accrue. Ces donne´es ne´cessitent l’utilisation d’un outil performant facilitant la
phase de leur inte´gration, qui comporte plusieurs e´tapes (acquisition, structuration et
stockage des donne´es), en vue de leur exploitation.
Dans ce contexte, nous proposons une nouvelle approche d’inte´gration des donne´es
complexes base´e sur un Syste`me Multi-Agents (SMA). Nous assimilons les diffe´rentes
e´tapes de cette phase d’inte´gration, techniquement ardues, a` des services offerts par
des agents :
– collecte des donne´es : cette e´tape est ge´re´e par des agents dont le roˆle consiste
a` re´cupe´rer les caracte´ristiques des donne´es pour pouvoir les transmettre ensuite
SMAIDoC : Un SMA pour l’Inte´gration des Donne´es Complexes
aux agents responsables de la structuration des donne´es ;
– structuration des donne´es : dans cette e´tape, les agents s’occupent de l’organi-
sation des donne´es selon un mode`le bien de´fini et transmettent ce dernier aux
agents responsables du stockage ;
– stockage des donne´es : cette e´tape est ge´re´e par des agents qui s’occupent de
l’alimentation d’une base de donne´es a` partir du mode`le fourni par les agents de
structuration.
Pour valider cette approche, nous avons de´veloppe´ le ”Syste`me Multi-Agent d’Inte´-
gration de Donne´es Complexes” SMAIDoC (BDD-ERIC 2003). Ce syste`me propose un
ensemble d’agents intelligents offrant les diffe´rents services ne´cessaires a` l’inte´gration
des donne´es complexes. SMAIDoC permet de mettre a` jour les services existants, d’en
rajouter, ou de cre´er de nouveaux agents. Cette approche repose ainsi sur une archi-
tecture e´volutive offrant une grande flexibilite´ et une forte structuration.
Cet article est organise´ de la fac¸on suivante. La section 2 pre´sente un e´tat de l’art
concernant les approches d’inte´gration de donne´es, ainsi que sur la technologie des
agents. Dans la section 3, nous exposons la proble´matique de l’inte´gration de donne´es
complexes et en quoi l’utilisation d’un SMA est approprie´e pour re´aliser cette taˆche.
Dans la section 4, nous pre´sentons les principes de SMAIDoC. L’imple´mentation de
celui-ci est de´crite dans la section 5. Enfin, nous concluons cet article et nous proposons
des perspectives d’e´volution dans la section 6.
2 E´tat de l’art
2.1 Inte´gration de donne´es
La nature des donne´es pre´sentes sur le Web est ge´ne´ralement he´te´roge`ne (bases de
donne´es relationnelles ou objets, documents balise´s ou non, images, sons, vide´o). La
complexite´ et la prolife´ration de ces donne´es posent le proble`me de leur inte´gration.
Plusieurs approches traitant de ce proble`me ont e´merge´.
Dans l’approche base´e sur les me´diateurs (M.C. Rousset 2002), il est question de
maintenir les donne´es dans leurs sources d’origine et de construire des vues abstraites a`
partir desquelles un me´diateur tente de satisfaire des requeˆtes d’utilisateurs. L’architec-
ture courante d’une telle de´marche repose sur des syste`mes me´diateur-adaptateurs (F.
Goasdoue´ et Al 2000). Ce type de syste`me permet d’interroger des sources de donne´es
distribue´es et he´te´roge`nes. Il donne l’illusion d’un syste`me centralise´ et homoge`ne. Le
me´diateur re´alise l’inte´gration des donne´es en fournissant une vue homoge`ne et globale
du syste`me a` l’utilisateur. Sa taˆche est de reformuler les requeˆtes pose´es par l’utilisa-
teur en fonction des diffe´rents contenus des sources de donne´es accessibles (S. Cluet
1999). A ce me´diateur correspondent plusieurs adaptateurs, un pour chaque source de
donne´es. Leur roˆle est d’extraire les donne´es se´lectionne´es par la requeˆte selon le type
de la source de donne´es correspondante. Le principal inte´reˆt de ce syste`me est la re-
formulation des requeˆtes par le me´diateur (C. Reynaud et Al 2002). En effet, celui-ci
fournit a` l’utilisateur une certaine souplesse quant a` la re´daction et a` la formulation des
requeˆtes. De plus, l’approximation de requeˆtes est inte´gre´e au syste`me afin de permettre
RNTI - 1
F. Clerc et al.
au me´diateur d’affiner la requeˆte de l’utilisateur et lui permettre d’obtenir toujours une
re´ponse.
L’approche base´e sur la technologie de l’entreposage des donne´es (R. Kimball 1996,
W.H. Inmon 1996) consiste a` construire a` partir de diffe´rentes sources de donne´es
une nouvelle base appele´e entrepoˆt de donne´es. Dans ce cas, l’inte´gration correspond
au processus d’ETL (Extracting Transforming and Loading) charge´ de nettoyer et de
transformer les donne´es qui sont he´te´roclites, avant leur chargement dans l’entrepoˆt.
Ce dernier s’appuie sur un mode`le oriente´ analyse, ou` les donne´es repre´sentent des
indicateurs (mesures) que l’on peut observer selon des axes d’analyse (dimensions). Le
mode`le est multidimensionnel et caracte´rise un contexte d’analyse. Les requeˆtes sont
en ge´ne´ral complexes (V. Harinarayan et Al 1996). Elles ne´cessitent des traitements
pour re´sumer les donne´es et faciliter leur interpre´tation, des moyens sophistique´s pour
y naviguer a` travers les diffe´rentes dimensions et ce a` l’aide des ope´rateurs OLAP (On
Line Analytical Processing) (E.F Codd 1993). Les re´ponses aux requeˆtes de l’utilisateur
sont repre´sente´es dans des cubes de donne´es ou` les informations sur les indicateurs sont
agre´ge´es et visualise´es selon des points de vue diffe´rents (S. Chaudhuri et Al 1997).
2.2 Les syste`mes multi-agents
Un agent logiciel est un programme classique qualifie´ d’”intelligent”. Les agents
intelligents sont utilise´s dans de nombreux domaines tels les re´seaux (ANT : S. Hassas et
Al 2000), les technologies embarque´es (LEAP : Lightweight Extensible Agent Platform
(Leap 2002, B. Burg 2000), ou l’apprentissage humain (Baghera : S. Pesty et Al 2001).
Un agent intelligent est suppose´ avoir les caracte´ristiques intrinse`ques suivantes (M.
Wooldridge et Al 1995) : Intuitivite´, un agent doit eˆtre apte a` prendre des initiatives et
a` accomplir les actions qui lui sont imparties ; Re´activite´, un agent doit eˆtre a` l’e´coute
des actions de son environnement et agir en conse´quence ; Sociabilite´, un agent doit
eˆtre capable de communiquer avec d’autres agents et/ou des utilisateurs. Par ailleurs,
les agents peuvent eˆtre mobiles et posse´der la particularite´ de se mouvoir de fac¸on
autonome a` travers un re´seau accepteur afin de re´aliser diverses taˆches (K. Sykara et
Al 1995).
Un Syste`me Multi-Agents de´signe un ensemble plus ou moins e´tendu d’acteurs qui
communiquent entre eux (K. Sykara et Al 1996). L’ensemble de cette communaute´ a
pour but la re´alisation d’une taˆche bien pre´cise, ou` chacun a un objectif propre et
offre des services. C’est ainsi que l’on introduit la notion de service : chaque agent est
capable de re´aliser certaines taˆches, de fac¸on autonome et communique les re´sultats
obtenus a` un acteur re´cepteur (humain ou logiciel). Les SMA se doivent de respecter
les normes de programmation de´finies par la FIPA (Foundation for Intelligent Physical
Agents) (fipa 2002).
3 Inte´gration des donne´es complexes
L’exploration des donne´es complexes ne´cessite une phase de pre´-traitement afin de
les rendre accessibles aux outils classiques de stockage et d’analyse. Il existe plusieurs
approches qui associent la technologie des entrepoˆts de donne´es avec celle du Web
RNTI - 1
SMAIDoC : Un SMA pour l’Inte´gration des Donne´es Complexes
comme le data webhousing (R. Kimball et Al 2000) tandis que d’autres s’articulent sur
des architectures distribue´es (J.F. Goglin 1998).
La de´marche que nous proposons conside`re le Web comme une source principale
d’alimentation en donne´es d’un dispositif base´ sur la notion de services pour le sto-
ckage et l’exploitation de donne´es complexes. Nous avons fait le choix de donner la
possibilite´ a` l’utilisateur de cibler ses donne´es et de les rapatrier pour construire une
source locale de donne´es. La complexite´ des donne´es est essentiellement due a` la di-
versite´ de leur type. D’autre part, elles renferment des informations sur leur structure
ainsi que sur leur contenu. Nous avons propose´ dans (J. Darmont et Al 2002a) une
mode´lisation conceptuelle, logique et physique de ces donne´es complexes. Celles-ci sont
de´finies comme des objets complexes forme´s d’un ou de plusieurs sous documents pou-
vant avoir des types diffe´rents. Ces objets sont repre´sente´s par un diagramme de classes
UML (Fig 1). Ce mode`le UML est ge´ne´ral et renferme les descripteurs de bas niveau qui
constituent les meta donne´es (S. Miniaoui et Al 2001). Il est appele´ a` eˆtre comple´te´ par
une partie spe´cifique pour contenir des descripteurs se´mantiques. Toute donne´e com-
plexe recueillie sur le web ou en provenance de toute autre source peut eˆtre repre´sente´e
a` l’aide du mode`le conceptuel (Fig 1). De plus, graˆce a` une DTD XML, le mode`le est
traduit ensuite sous forme d’un document XML pouvant eˆtre stocke´ dans une base de
donne´es relationnelle (J. Darmont et Al 2002b).
4 Un syste`me multi-agents pour l’inte´gration des don-
ne´es complexes (SMAIDoC)
4.1 Motivation
L’inte´gration de donne´es complexes consiste en une suite de taˆches a` effectuer.
Nous assimilons celles-ci, qui ne sont pas obligatoirement se´quentielles, a` des services
offerts par des acteurs bien de´finis dans un syste`me destine´ a` accomplir un tel proces-
sus d’inte´gration. Dans cette optique, il est naturel d’introduire la notion d’agent. La
technologie agent apporte une structuration claire, modulaire, et donc une re´utilisation
aise´e et une maintenance ide´ale. Par conse´quent, cette structuration permet d’ajouter
tre`s facilement des services ou des agents au syste`me (M. Klusch 2001). En outre, les
agents sont capables de communiquer entre eux sans intervention externe. Les e´changes
d’informations sont alors simplifie´s et l’exe´cution des taˆches est clarifie´e, chaque agent
effectuant un ensemble de taˆches bien de´fini. De plus, le concept de mobilite´ est un
aspect tre`s important. En effet, l’agent peut se de´placer la` ou` se trouve l’information
et revenir a` son emplacement initial. Il pourra ainsi permettre a` terme de cre´er de
fac¸on autonome des bases de donne´es distantes, associe´es a` d’autres agents capables
de fournir des services conse´quents a` l’utilisateur, en vue de la collecte d’informations
pertinentes depuis le Web, mais aussi a` travers un re´seau local, par exemple.
4.2 Architecture de SMAIDoC
Nous pre´sentons dans cette section l’architecture globale de notre syste`me SMAI-
DoC (Fig 2) base´e sur une plate-forme d’agents ge´ne´riques. Nous avons instancie´ cinq
RNTI - 1
F. Clerc et al.
PLAIN TEXT
SOUND VIDEO
COMPLEX OBJECT
Name
Date
Source LANGUAGE
Name
KEYWORD
Term
*
*SUBDOCUMENT
Name
Type
Size
Location
*
*
0..1
*
**
IMAGE
Format
Compression
Width
Length
Resolution
ATOMIC VALUE
Value
TUPLE
RELATIONAL VIEW
Query
*
*
ATTRIBUTE
Name
Domain**
*
*
TEXT
Nb_char
Nb_lines
TAGGED TEXT
Content
LINK
URL
*
*
CONTINUOUS
Duration
Speed
Fig. 1 – Mode`le conceptuel d’un objet complexe
agents offrant des services permettant l’inte´gration des donne´es complexes ou` chacun
de ces services engendre des produits.
4.2.1 Les agents
– MenuAgent : C’est le pilote du syste`me. Il sert d’interface entre ce dernier et
l’utilisateur. Il a pour roˆle de superviser les migrations d’agents. Il pre´sente le
re´pertoire des diffe´rents sites accessibles sur la plate-forme.
– DataAgent : Il a pour roˆle de collecter les donne´es relatives aux documents.
– WrapperAgent : Il instancie la structure UML sur la base des donne´es transmises
par le DataAgent.
– XMLCreatorAgent : Il construit les documents XML a` partir d’une DTD et de
la structure UML.
– XML2RDBAgent : Il stocke les documents XML dans une base de donne´es
relationnelle.
RNTI - 1
SMAIDoC : Un SMA pour l’Inte´gration des Donne´es Complexes
Fig. 2 – Architecture du syste`me SMAIDoC
4.2.2 Les services
L’ensemble des taˆches de la phase d’inte´gration des donne´es complexes peut se
de´rouler en quatre grandes e´tapes.
– Collecte : A partir de documents contenant des donne´es complexes, l’extraction
des caracte´ristiques de celles-ci consiste en une collecte des me´ta donne´es . Ces
dernie`res sont formule´es comme des attributs pouvant eˆtre, par exemple, les mots
cle´s d’un texte, la dure´e d’une se´quence vide´o ou le taux de compression d’une
image.
– Structuration : A partir des donne´es pre´ce´demment collecte´es, il faut instancier le
mode`le ge´ne´ral pre´de´fini (Fig 1). Ceci permettra de ge´ne´rer un mode`le conceptuel
de´crivant les donne´es complexes.
– Ge´ne´ration : A partir du mode`le instancie´ et a` l’aide d’une DTD XML, les donne´es
RNTI - 1
F. Clerc et al.
complexes sont traduites sous forme de documents XML bien forme´s.
– Stockage : A partir des documents XML bien forme´s, la dernie`re e´tape consiste
a` les stocker dans une base de donne´es relationnelle.
4.2.3 Les produits
Lorsque le syste`me SMAIDoC est active´, il commence par initialiser l’environnement
dans lequel les agents vont e´voluer (Fig 3). Les agents du syste`me SMAIDoC ope`rent
sur des donne´es complexes de´ja` collecte´es. L’extraction des caracte´ristiques de celles-
ci est un re´sultat obtenu par un des agents et sert a` alimenter les diffe´rentes classes
du mode`le UML. Les documents XML ge´ne´re´s sont des produits servant a` alimenter
une base de donne´es relationnelle. Cette dernie`re constitue le produit final fourni par
SMAIDoC.
4.3 Structure fonctionnelle d’un agent
Pour de´crire la structure et le fonctionnement d’un agent de SMAIDoC, nous pro-
posons une grammaire exprime´e par un formalisme base´ sur les pre´dicats. Un agent est
compose´ de deux parties : l’enteˆte et le corps. L’enteˆte identifie l’agent (ligne 2) par
son nom ainsi que celui de la plate-forme a` laquelle il appartient (ligne 3). Le corps
de l’agent spe´cifie les sce´narios possibles : tout d’abord l’enregistrement aupre`s de la
plate-forme de l’agent (ligne 6), puis la de´finition du comportement (s’il posse`de un
comportement spe´cifique) (ligne 7), la mobilite´ de l’agent le cas e´che´ant et sa migra-
tion (lignes 9,10,11) et la communication inter-agent (lignes 12,13,14). Ces actions sont
exe´cute´es les unes apre`s les autres de manie`re ite´rative.
Description de la structure et du fonctionnement d’un agent a` l’aide d’une grammaire
1. < Agent >::=< Enteˆte Agent >< Corps Agent >
2. < Enteˆte Agent >::=< Agent ID >
3. < Agent ID >::=< Nom Agent >< Nom plateforme >
4. < Corps Agent >::=< Configuration Agent >
5. < Configuration Agent >::=< Enregistrement >< Ajouter Comportement >
< Mobilite´>< Communication >< Configuration Agent >
6. < Enregistrement >::= Si pas de´ja` fait Ajouter < Agent ID > dans
< Registre P lateforme >
7. < Ajouter Comportement >::=Ajouter < Comportement >a`< Agent ID > |Action V ide
8. < Comportement >::=taˆche spe´cifique accomplie de fac¸on autonome
9. < Mobilite´>::=< Ontologie Mobilite´>< Migrer >
10. < Ontologie Mobilite´>::=Ajouter < Agent ID > dans
< Registre Agents Mobiles P lateforme >
11. < Migrer >::=Envoyer < Agent ID > vers < Adresse hote >
12. < Communication >::=< Recevoir Message > | < Envoyer Message > |Attente Active
13. < Recevoir Message >::=< Attente Message >< Lire contenu Message >
14. < Envoyer Message >::= Envoyer < Message >a`< Agent ID Destination >
15. < Lire contenu Message >::= Lire < Message >
16. < Attente Message >::= Attendre < Message >
RNTI - 1
SMAIDoC : Un SMA pour l’Inte´gration des Donne´es Complexes
4.4 Fonctionnement des diffe´rents agents de SMAIDoC
Pour illustrer le fonctionnement de SMAIDoC, conside´rons la situation suivante :
soit un site S contenant diffe´rents types de donne´es complexes.
– E´tape 1 : Se´lection du site S par l’utilisateur et ordre de migration des agents
DataAgent et WrapperAgent.
– E´tape 2 : MenuAgent ordonne a` ces deux agents de migrer. La migration s’ef-
fectue.
– E´tape 3 : Collecte se´quentielle des me´ta donne´es par DataAgent et instanciation
de la structure UML par WrapperAgent. Suivant le type des donne´es, DataAgent
collecte les attributs et les transmet se´quentiellement a` WrapperAgent en vue de
la construction progressive de la structure UML.
– E´tape 4 : Transmission de la structure a` l’agent XMLCreator.
– E´tape 5 : XMLCreator construit le document XML a` partir de la structure UML
et de la DTD qui lui est associe´e. Il parcourt et empile les e´le´ments. Suivant la
forme de la structure, il compare les e´le´ments empile´s avec les composantes de la
structure. Il ge´ne`re le code XML correspondant.
– E´tape 6 : Transmission du document XML a` XML2RDBAgent.
– E´tape 7 : XML2RDBAgent ordonne le stockage du document XML dans la base
de donne´es.
– E´tape 8 : Retour a` l’e´tape 1.
5 Re´alisation
Bien plus qu’un choix, l’utilisation du langage JAVA (java 2002) est une e´vidence
compte-tenu des spe´cificite´s de notre application. Il est portable, la pre´sence d’une ma-
chine virtuelle e´tant la seule obligation. De nombreuses plate-formes de programmation
d’agents sont disponibles sous JAVA. Nous avons utilise´ la version 2.61 de JADE (jade
2002, F. Bellifemine et Al 1999) qui respecte les normes de´finies par la FIPA. JADE
propose de construire des structures d’accueil des agents : les containers. Ce sont des
e´le´ments abstraits qui peuvent se situer sur l’une ou l’autre machine, mais toujours
sur une meˆme instance de la plate-forme JADE. Par ailleurs, on note la pre´sence de
deux agents pilotes par de´faut. D’une part, l’agent AMS (Agent Management Sys-
tem) a pour roˆle de superviser la gestion des agents pre´sents sur la plate-forme : leur
e´tat, leur emplacement, leurs migrations, les sites d’accueil disponibles... D’autre part,
l’agent RMA (Remote Management Agent) a pour roˆle de fournir une interface pour
JADE. De plus, nous avons de´fini un nouveau pilote,MenuAgent, qui permet a` l’utilisa-
teur de se´lectionner un site -parmi ceux disponibles- contenant des donne´es complexes
destine´es a` l’inte´gration. Une fois le site se´lectionne´, le pilote MenuAgent ordonne la
migration des agents DataAgent et WrapperAgent vers ce site et ainsi le traitement
peut commencer.
Pour communiquer, les agents de JADE utilisent un protocole nomme´ ACLMessage1
1standardise´ par la FIPA
RNTI - 1
F. Clerc et al.
Fig. 3 – Vue d’ensemble de la plate-forme JADE
(J. Pitt et Al 1999). Les messages e´change´s par les agents de JADE utilisent une
ontologie en format se´rialisable (texte). Dans JADE, une ontologie est repre´sente´e sous
forme de classe JAVA ge´ne´re´e automatiquement suite a` la demande d’envoi de message.
Ce mode de communication peut eˆtre apparente´ a` l’association de SOAP (Simple Object
Access Protocol) et de RDF (A. Andjomshoa et Al 2001).
Dans l’objectif de faciliter la mise en place du syste`me, son de´marrage et son initia-
lisation, nous avons cre´e´ un lanceur (”launcher”) qui a pour roˆle de remplacer l’utilisa-
teur dans cette taˆche fastidieuse. Le lanceur cre´e la plate-forme JADE et les containers
virtuels d’accueil des agents, puis initialise les agents pilotes du syste`me (RMA et
DMS). On peut avoir une vue d’ensemble du syste`me la Fig 3.
Concre`tement, notre syste`me SMAIDoC permet a` l’utilisateur de se´lectionner les
documents qu’il souhaite inte´grer dans une base de donne´es. Les types de documents
suivants sont propose´s : texte simple, texte balise´ (HTML, XML...), image, son, vide´o,
vue relationnelle. Pour chacun des types, des attributs par de´faut sont propose´s a`
l’utilisateur comme les mots-cle´s, le nombre de mots et de lignes pour un texte, la
dure´e pour un son ou une vide´o, la re´solution pour une image...
Les donne´es complexes recueillies a` partir d’un quelconque site sont inte´gre´es dans
une base de donne´es selon le processus de´crit auparavant. Les diverses taˆches sont ac-
complies par les agents de SMAIDoC. Ces derniers e´voluent dans les diffe´rents contai-
ners de la plate-forme JADE que nous avons de´finis sur une meˆme machine hoˆte. Ces
containers peuvent eˆtre implante´s sur diffe´rentes machines hoˆtes engendrant ainsi une
mobilite´ inter-machine des agents de SMAIDoC.
6 Conclusion et perspectives
Dans cet article, nous avons propose´ une nouvelle approche d’inte´gration de donne´es
complexes base´e a` la fois sur l’entreposage de donne´es et sur les syste`mes multi-agents.
RNTI - 1
SMAIDoC : Un SMA pour l’Inte´gration des Donne´es Complexes
Cette approche repose sur une architecture e´volutive dans laquelle on peut ajouter,
modifier ou supprimer des services, voire cre´er de nouveaux agents.
Le syste`me SMAIDoC aborde l’inte´gration de donne´es complexes de´ja` recueillies.
SMAIDoC, graˆce aux agents DataAgent et WrapperAgent, mode´lise ces donne´es sous
forme d’objets complexes. Ensuite, l’agent XMLCreator les traduit en documents XML
pour que l’agent XML2RDBAgent les stocke dans la base de donne´es. Ces diffe´rents
services effectue´s par cet ensemble d’agents constituent les diffe´rentes taˆches du pro-
cessus d’inte´gration des donne´es complexes dans une base de donne´s (ETL). Notons
que les agents, en plus de leur flexibilite´, pre´sentent l’avantage d’eˆtre mobiles.
Notre objectif consiste a` e´tendre les possibilite´s de SMAIDoC aux taˆches de recueil
et d’analyse des donne´es complexes. Cet objectif peut eˆtre atteint graˆce a` l’architec-
ture e´volutive de SMAIDoC. Il est possible de donner a` l’agent de collecte de donne´es
(DataAgent) la capacite´ de recueillir des donne´es en conversant avec des moteurs de
recherche et d’exploiter les re´ponses de ces derniers. D’autre part, nous pouvons cre´er
de nouveaux agents dont les services respectifs peuvent eˆtre la mode´lisation multidi-
mensionnelle des donne´es complexes ou encore l’analyse a` l’aide de techniques OLAP
(S. Chaudhuri et Al 1997) ou de fouille de donne´es.
Re´fe´rences
A. Andjomshoa and M.H. Shafazand and S.Bahonar, (2002), ”The application of
software agent technology to project management infrastructure”, 4th international
conference on Information Integration and Web-based Applicaions and Services
(iiWAS’02), Bandung, Indonesia.
BDD-ERIC (2003), SMAIDoC download page, http ://bdd.univ-lyon2.fr/logiciels.php ?-
id=4.
F. Bellifemine and A. Poggi and G. Rimassa, (1998), ”JADE : A FIPA compliant
agent framework”, PAAM’99, London pp 97-108.
B. Burg, (2000), ”Towards the deployment of an open Agent World”, Journe´es Franco-
phones d’Intelligence Artificielle Distribue´e et de Syste`mes Multi-Agents (JFIAD-
SMA), pp 1-17.
S. Chaudhuri and U. Dayal, (1997), ”An overview of data Warehousing and OLAP
Technology”, ACM-SIGMOD, Record 26(1).
S. Cluet, (1999), ”Inte´gration de donne´es he´te´roge`nes”, http ://www-rocq.inria.fr/-
cluet/.
E.F Codd, (1993), ”Providing OLAP (on-line analytical processing) to user-analysts :
an IT mandate”, Rapport, E.F. Codd and Associates.
J. Darmont and O. Boussaid and F. Bentayeb and S. Rabaseda and Y. Zellouf, (2002a),
”Multimedia Systems and Applications”,Web multiform data structuring for wa-
rehousing, Kluwer Academic Publishers, Vol 22, pp 9-27.
J. Darmont and O. Boussaid and F. Bentayeb, (2002b), ”Warehousing Web Data”, 4th
International Conference on Information Integration and Web-based Applications
and Services (iiWAS’02), Bandung, Indonesia, pp 148-152.
RNTI - 1
F. Clerc et al.
Le site officiel de la FIPA, http ://www.fipa.org/.
F. Goasdoue´ and V. Latte`s and M.C. Rousset, (2000), ”The use of CARIN language
and algorithms for information integration :the PICSEL system”, International
Journal of Cooperative Information Systems IJCIS, vol 9, n◦4, pp 383-401.
J.F. Goglin, (1998), ”La construction du Data Warehouse du data mart au data web”,
Herme`s.
V. Harinarayan and A. Rajaraman and J.D. Ullman, (1996), ”Implementing Data
Cubes Effciently”, IEEE on Data Engineering.
S. Hassas and S. Fenet, (2000), ”ANT : a distributed problem solving framework
based on mobile agents”, Advances in Mobile Agents System Research, vol 1, n◦4,
pp 39-44.
W.H. Inmon, (1996), ”Building the data Data Warehouse”, John Wiley & Sons, USA,
2ie`me e´dition.
Le site officiel de JADE, http ://sharon.cselt.it/projects/jade/.
Le site officiel de JAVA, http ://www.sun.java.com/.
R. Kimball,(1996), ”The data warehouse toolkit”, John Wiley.
R. Kimball and R. Merz, (2000), ”The data webhousing”, Eyrolles.
M. Klusch,(2001), ”Information Agent technology for the Internet : A Survey”, Jour-
nal on Data and Knowledge Engineering, Special Issue on Intelligent Information
Integration, D. Fensel (Ed.), vol 36, n◦3.
Le site officiel de LEAP, http ://leap.crm-paris.com/.
S. Miniaoui and J. Darmont and O. Boussaid, (2001), ”Web data modeling for in-
tegration in data warehouses”, First International Workshop on Multimedia Data
and Document Engineering (MDDE 01), Lyon, pp 88-97.
S. Pesty and C. Webber and N. Balacheff, (2001), ”Baghera : une architecture multi-
agents pour l’apprentissage humain”, Agents Logiciels, Coope´ration Apprentissage
et Activite´ Humaine (ALCAA), pp 204-214.
J. Pitt and F. Bellifemine, (1999), ”A Protocol-Based Semantics for FIPA 97 ACL
and its Implementation in JADE”, AI*IA’99.
C. Reynaud and G. Giraldo, (2002), ”Vers l’automatisation de la construction de
syste`mes de me´diation pour le commerce e´lectronique”, Journe´es de l’action spe´cifique
’Web Se´mantique’, Paris.
M.C. Rousset, (2002), ”Knowledge Representation for Information Integration”, In-
ternational Symposium on Methodologies for Intelligent Systems (ISMIS).
K. Sykara and D. Zeng, (1995), ”Cooperative Intelligent Software Agents”, Rappot
n◦CMU-RI-TR-95-14, Robotics Institute Technical Report.
K. Sykara and D. Zeng and K. Decker and A. Pannu and M. Williamson, (1997),
”Distributed Intelligent Agents”, IEEE Expert, pp 1-32.
M. Wooldridge and N.R. Jennings, (1995), ”Intelligent Agents : Theory and Practice”,
Knowledge Engineering Review, vol 10, n◦2, pp 115-152.
RNTI - 1
SMAIDoC : Un SMA pour l’Inte´gration des Donne´es Complexes
Summary
The expansion of the World Wide Web and the multiplication of data sources lead
to the proliferation of heterogeneous data (texts, images, videos, sounds, databases)
that are called complex data. In order to explore them, we need to carry out their
integration into a unified format. This integration tasks highlights several issues when
collecting, structuring and storing complex data. Many methods for integration exist
in the litterature, such as mediated schemes with wrappers and warehousing. In this
paper, we propose a new approach for complex data integration that exploits both
classical warehousing and multi-agents system. The multi-agents technology provides
an evolutive architecture to our system. We consider the different tasks of the data
integration process as services that are offered by actors called agents. To validate this
approach, we have designed a multi-agents system for complex data integration called
SMAIDoC.
Keywords : data integration, complex data, services, agents, Multi-Agent System
RNTI - 1
