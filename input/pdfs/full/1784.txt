Un survol des algorithmes biomime´tiques pour la
classification
Hanene Azzag∗, Fabien Picarougne∗
Christiane Guinot∗∗, Gilles Venturini∗
∗Laboratoire d’Informatique de l’Universite´ de Tours,
E´cole Polytechnique de l’Universite´ de Tours - De´partement Informatique,
64, Avenue Jean Portalis, 37200 Tours, FRANCE.
{hanene.azzag,fabien.picarougne}@etu.univ-tours.fr, venturini@univ-tours.fr
http://www.antsearch.univ-tours.fr/webrtic
∗∗CE.R.I.E.S.
20 rue Victor Noir, F-92521 Neuilly-sur-Seine Cedex.
christiane.guinot@ceries-lab.com
Re´sume´. Nous pre´sentons dans cet article un survol des algorithmes
et me´thodes biomime´tiques pour re´soudre le proble`me de la classifica-
tion. Nous de´crivons les approches utilisant les algorithmes ge´ne´tiques et
e´volutionnaires avec les diffe´rents codages et repre´sentations ayant e´te´ uti-
lise´s. Nous abordons l’approche a` base de fourmis artificielles qui se trouve
eˆtre une riche source d’inspiration pour la classification. Nous de´taillons
finalement d’autres approches a` base d’agents avec notamment l’intelli-
gence en essaim (nuages d’agents) et avec les syste`mes immunitaires. En-
fin, nous re´sumons les ressemblances et diffe´rences des travaux pre´sente´s
et nous concluons sur les perspectives lie´es a` l’approche biomime´tique
pour la classification.
1 Introduction
Le proble`me de la classification de donne´es est identifie´ comme une des proble´mati-
ques majeures en extraction des connaissances a` partir de donne´es. Depuis des de´cennies,
de nombreux sous-proble`mes ont e´te´ identifie´s, comme par exemple la se´lection des
donne´es ou des descripteurs, la varie´te´ des espaces de repre´sentation (nume´rique, sym-
bolique, etc), l’incre´mentalite´, la ne´cessite´ de de´couvrir des concepts, d’obtenir une
hie´rarchie, etc. La popularite´, la complexite´ et toutes ces variantes du proble`me de
la classification de donne´es ont donne´ naissance a` une multitude de me´thodes de
re´solution. Ces me´thodes peuvent a` la fois faire appel a` des principes heuristiques
ou encore mathe´matiques. Parmi celles-ci, il existe une branche qui s’inspire plus
spe´cialement de principes issus de la biologie. Les motivations des chercheurs sont
d’une part de tester de nouveaux algorithmes sur le proble`me de la classification et de
connaˆıtre leurs apports. Mais elles sont aussi de proposer de nouvelles sources d’ins-
piration, car le proble`me de la classification se rencontre souvent chez les animaux et
dans les syste`mes biologiques.
Nous allons donc donner un aperc¸u de ces me´thodes. Nous ne traiterons pas ici les
approches neuronales mais plutoˆt les approches a` base de population d’agents (algo-
Classification et me´thodes biomime´tiques
rithmes e´volutionnaires, fourmis artificielles, intelligence en essaim, syste`mes immuni-
taires). Nous allons conside´rer par la suite un ensemble de n donne´es d1,...,dn a` re-
grouper en classes. Nous ne ferons pas plus d’hypothe`ses a` propos de la repre´sentation
des donne´es ou de la forme de la classification de´sire´e. Nous allons commencer dans
la section 2 par de´tailler les approches ge´ne´tiques qui manipulent une population de
classifications candidates et qui les font e´voluer en utilisant les principes de la se´lection
naturelle. Ensuite, nous abordons dans la section 3 la manie`re dont les fourmis artifi-
cielles sont applique´es a` ce proble`me : chaque fourmi va intervenir sur une partie de la
classification en cours de construction, avec des mode`les tre`s diversifie´s qui de´notent une
richesse importante de ce domaine. Dans la section 4, nous de´taillons des approches
moins connues mais qui apportent ne´anmoins leur potentiel a` notre proble´matique :
d’une part les de´placements sociaux d’une population d’agents permettent de cre´er des
groupes, et d’autre part l’utilisation des syste`mes immunitaires qui vont re´pondre aux
stimulations d’antige`nes (les donne´es) en produisant des anticorps (les e´le´ments de la
structure classificatoire). Enfin, nous donnons dans la section 5 une discussion sur les
me´thodes pre´sente´es ainsi que les perspectives que nous pouvons de´duire des diffe´rents
travaux en cours.
2 Approches e´volutionnaires
2.1 Quatre cate´gories d’algorithmes
Dans les anne´es 70, les premiers travaux sur l’e´volution artificielle ont concerne´
les algorithmes ge´ne´tiques (AG), les strate´gies d’e´volution (SE) et la programmation
e´volutive (PE) (voir un survol dans [Spears et al., 1993]. Ces trois types d’algorithmes
ont utilise´ des principes globalement communs car ils se sont tous inspire´s des meˆmes
principes du neo-darwinisme : repre´sentation des individus sous la forme de traits
he´ritables, utilisation d’une population d’individus (dans notre cas chaque individu
repre´sente une classification des donne´es), e´valuation des individus par une fonction,
se´lection des meilleurs et ge´ne´ration d’une nouvelle population avec des ope´rateurs
de croisement et de mutation. Cependant, des choix me´thodologiques ont initialement
oppose´ ces me´thodes. Ainsi, les premiers AG utilisaient plutoˆt un codage binaire des
individus alors que les SE utilisaient un codage en nombre re´el. Ensuite, dans les
anne´es 90 est apparue la programmation ge´ne´tique (PG) qui introduit notamment des
repre´sentations arborescentes.
Pour toutes ces approches, la repre´sentation va e´galement imposer des ope´rateurs
particuliers pour engendrer de nouvelles solutions. Par exemple, l’un des principes
fondamentaux des AG e´tant d’utiliser un ope´rateur de croisement combinant utilement
les ge`nes de deux individus, le proble`me pose´ est alors de de´finir des ope´rateurs de
croisement permettant l’e´change de caracte´ristiques entre deux classifications. Les SE
utilisent plutoˆt des mutations a` base de lois gaussiennes qui vont modifier les parame`tres
re´els d’un individu.
RNTI - C - 1
H. Azzag et al.
2.2 Algorithmes ge´ne´tiques
Les premiers travaux proposant un AG (et plus ge´ne´ralement un algorithme e´volu-
tionnaire) pour le proble`me de la classification sont dus a` [Raghavan et Birchard, 1979].
Le nombre de classes est fixe´ a` l’avance et la repre´sentation de longueur n associe une
classe a` chaque donne´e, comme dans l’illustration suivante :
Donne´es d1 d2 ... dn
Classes (∈ [1,k]) 3 1 ... 4
Les ope´rateurs ge´ne´tiques sont une adaptation directe des ope´rateurs ge´ne´tiques
binaires pour le cas d’un individu repre´sente´ par une chaˆıne n-aire (croisement avec
un point de coupure). Par exemple, le croisement a` un point e´change des e´tiquettes de
classe entre deux individus. Cet ope´rateur peut donc faire disparaˆıtre des classes. Seule
la mutation peut faire apparaˆıtre de nouvelles classes. La fonction d’e´valuation consiste
a` minimiser une erreur quadratique. Notons que ce codage est utilise´ e´galement par
[Hansohm, 2000] dans le contexte du bipartitionnement : le premier vecteur d’entiers
code la partition sur les donne´es, le deuxie`me sur les variables.
De nouveaux codages utilisant des permutations ont e´te´ introduits par plusieurs
auteurs. Dans [Jones et Beltramo, 1991], un premier codage consiste a` utiliser une per-
mutation des n donne´es repre´sente´es par leur indice en ajoutant en plus des symboles
servant de se´parateurs : par exemple pour n = 6, l’individu (2,4,-,5,1,3,-,6) repre´sente un
partionnement en 3 classes. Pour obtenir k classes, le nombre de se´parateurs introduits
est e´gal a` k− 1. Un autre codage a` base de permutation propose´ dans le meˆme travail
consiste a` utiliser deux parties dans un meˆme individu. Les prototypes sont code´s sur
la premie`re partie de la partition puis la suite de la partition repre´sente un ordre sur la
manie`re d’affecter les donne´es restantes a` ces prototypes. Dans [Bhuyan et al., 1991],
ce type de permutation est utilise´ uniquement pour fixer un ordre sur les donne´es : un
algorithme heuristique de´cide alors comment construire la partition en ”coupant” la
permutation en des endroits judicieux. Pour ces codages sont utilise´s des ope´rateurs
ge´ne´tiques de croisement de´finis dans le cadre du proble`me du voyageur de commerce
(OX et PMX, voir [Goldberg, 1989]).
Un autre codage alternatif consiste non pas a` repre´senter une classe pour chacun
des objets dans un individu de longueur n, mais plutoˆt k prototypes de ces classes
[Lucasius et al., 1993]. Ces k prototypes sont choisis parmi l’ensemble des n donne´es.
Ainsi, un individu devient alors un vecteur d’indices de prototype :
Prototypes p1 p2 ... pk
Donne´es (∈ [1,n]) 120 40 ... 55
Ensuite, pour calculer la partition re´sultante, les donne´es sont affecte´es a` chaque
prototype de classe sur la base d’un algorithme de type plus proche voisin. Dans cette
repre´sentation, les ope´rateurs ge´ne´tiques classiques peuvent poser des proble`mes : a` la
suite d’un croisement, un meˆme prototype peut se retrouver deux fois dans un individu.
Le codage introduit dans [Bezdek et al., 1994] consiste a` repre´senter le partition-
nement a` l’aide d’une matrice M boole´enne de type classe × donne´es. M(i,j) prend
la valeur 1 (i ∈ [1,k], j ∈ [1,n]) si la donne´e dj appartient a` la classe i, 0 sinon. Dans
RNTI - C - 1
Classification et me´thodes biomime´tiques
cette repre´sentation, l’ope´rateur de croisement est de´fini cette fois en 2D. Un point
important a` noter dans cette repre´sentation est la possibilite´ de la ge´ne´raliser a` des
classifications recouvrantes ainsi que floues : dans le premier cas plusieurs 1 peuvent
apparaˆıtre sur une meˆme ligne, dans le deuxie`me les valeurs ne sont plus boole´ennes
mais repre´sentent des degre´s d’appartenance.
Un codage permettant de manipuler directement des groupes a e´te´ propose´ dans
[Falkenauer, 1994]. Une classification est constitue´e de n ge`nes repre´sentant la classe
de chaque donne´e (comme dans le premier codage introduit dans cette section), sui-
vis de la liste des groupes apparaissant dans l’individu (par exemple si les donne´es
appartiennent a` trois classes, l’individu finit par (3, 2, 1)). Cette repre´sentation uti-
lise donc un ope´rateur de croisement permettant d’e´changer directement des groupes.
L’ope´rateur de mutation agit e´galement au niveau des groupes (e´clatement, regroupe-
ment, etc) avec des heuristiques locales (re´affectation des donne´es isole´es).
Dans [Greene, 2003] a e´te´ de´veloppe´ a` notre connaissance le seul AG apprenant
une classification hie´rarchique pre´sente´e sous la forme d’un arbre de centro¨ıdes. Cet
algorithme est restreint aux donne´es nume´riques mais ne fait pas d’hypothe`ses sur le
nombre de classes.
2.3 Autres approches e´volutionnaires
Les trois autres cate´gories d’algorithmes e´volutionnaires ont e´te´ nettement moins
de´veloppe´es que les AG. Par exemple, dans [Babu et Murty, 1994], les SE ont e´te´ uti-
lise´es avec un codage matriciel : chaque colonne du tableau repre´sente un centre de
classe de la meˆme dimension que l’espace nume´rique de description des donne´es. La
PE a e´galement e´te´ utilise´e mais dans un seul travail a` notre connaissance
[Fogel et Simpson, 1993]. E´galement, nous n’avons pas trouve´ d’articles traitant du
proble`me ge´ne´ral de la classification avec la PG.
Plusieurs approches hybrides ont cependant e´te´ propose´es en utilisant conjointe-
ment les AG avec des approches plus classiques comme K-Means ou encore Fuzzy-C-
Means. Ces heuristiques sont utilise´es par exemple juste apre`s l’AG qui sert donc a` trou-
ver un bonne partition initiale [Babu et Murty, 1993]. Elles peuvent e´galement servir au
meˆme titre que les ope´rateurs ge´ne´tiques dans la boucle de l’AG [Krishna et Murty, 1999] :
elles sont applique´es sur chaque individu. Cela permet d’acce´le´rer la convergence des
AG tout en conservant les avantages d’une me´thode globale. Ces hybridations restent
cependant lie´es au donne´es nume´riques.
3 Fourmis artificielles
3.1 Quelques principes
Les fourmis re´elles ont inspire´ les chercheurs en informatique dans de nombreux do-
maines. Cela se justifie particulie`rement quand on connaˆıt la richesse comportementale
de ces animaux. L’un des mode`les les plus connus (ACO pour Ant Colony Optimiza-
tion) a e´te´ introduit par [Colorni et al., 1991] initialement dans le cadre du proble`me
du voyageur de commerce. Les fourmis utilisent des phe´romones pour marquer des arcs
RNTI - C - 1
H. Azzag et al.
entre les villes. Ces phe´romones repre´sentent en fait une distribution de probabilite´s
qui est mise a` jour en fonction des re´sultats observe´s (longueur totale du chemin par
exemple). Cette approche a e´te´ depuis largement de´veloppe´e et applique´e a` de nom-
breux proble`mes d’optimisation combinatoire et nume´rique. Un survol de ces articles
ne rentre cependant pas dans le cadre de notre e´tude puisque ce mode`le n’a pas e´te´
utilise´ a` notre connaissance pour re´soudre le proble`me de la classification (voir cepen-
dant [Alexandrov, 2000] mais apparemment aucune suite n’a e´te´ donne´e a` ces travaux).
Pourtant, les sections suivantes vont montrer que le mode`le des fourmis artificielles est
tre`s riche dans ce domaine. La raison vient du fait que d’autres comportements ob-
serve´s chez les fourmis peuvent eˆtre directement mis en relation avec le proble`me de la
classification, a` commencer par le tri du couvain.
3.2 Les travaux fondateurs
Ces travaux datent des anne´es 1990. Il s’agit d’abord des travaux de biologistes
s’inte´ressant de pre`s a` la mode´lisation des fourmis en termes mathe´matiques et in-
formatiques, et a` l’utilisation concre`te de ces mode`les. Deneubourg apparaˆıt donc
comme un pionnier dans le domaine du tri d’objets par des fourmis artificielles. Dans
[Deneubourg et al., 1990], il propose avec ses colle`gues les principes suivants : des four-
mis artificielles se de´placent sur un plan. Les objets a` rassembler sont re´partis sur ce
plan. Une fourmi ne dispose que d’une perception locale de ces objets et ne commu-
nique pas avec les autres. Au lieu de cela, la configuration des objets sur le sol va
influencer leurs actions. Lorsqu’une fourmi rencontre un objet, elle le ramasse avec
une probabilite´ c1c1+f , ou` f repre´sente la fre´quence de rencontre d’objets dans un passe´
re´cent. Autrement dit, plus une fourmi rencontre d’objets, moins elle a de chance d’en
prendre un (elle se trouve dans une zone avec beaucoup d’objets). Ensuite, une fois
un objet ramasse´, la fourmi se de´place au hasard dans le plan, et elle de´pose l’objet
avec une probabilite´ fc2+f . Cette probabilite´ est d’autant plus grande que la fourmi a
rencontre´ re´cemment des objets. Ces principes relativement simples font qu’il apparaˆıt
des regroupements d’objets. L’approche peut eˆtre ge´ne´ralise´e a` plusieurs types d’objets
(les fre´quences f sont spe´cifiques a` chaque type d’objets) : cet algorithme permet alors
de trier des objets.
Le pas qui se´pare le tri d’objets de la classification a ensuite e´te´ franchi dans
[Lumer et Faieta, 1994]. Ils ont adapte´ l’algorithme pre´sente´ pre´ce´demment (voir fi-
gure 1) : les donne´es sont initialement re´parties ale´atoirement sur une grille 2D. Chaque
fourmi est situe´e dans une case de cette grille et ne perc¸oit que les donne´es situe´es dans
son voisinage (8 voisins par exemple). Ensuite la fre´quence f utilise´e dans l’algorithme
de tri vu pre´ce´demment peut eˆtre remplace´e par une moyenne des similarite´s entre
une donne´e di porte´e par une fourmi et les donne´es dj situe´es dans son voisinage. Une
donne´e di sur la grille est ramasse´e avec une probabilite´ d’autant plus grande qu’elle
est peu similaire aux donne´es voisines. De la meˆme manie`re, une donne´e di porte´e par
une fourmi est plus facilement de´pose´e dans une re´gion comportant des donne´es qui lui
sont similaires. Cet algorithme a e´te´ depuis e´tendu a` d’autres applications comme le
partitionnement de graphes [Kuntz et al., 1997] ou la classification de sessions sur des
sites Web [Abraham et Ramos, 2003].
RNTI - C - 1
Classification et me´thodes biomime´tiques
1
1
1
1
1 1
1
1
2 2
2
2
22
2
2
2 2
2
3
3
3
3
33
2
(a) (b)
Fig. 1 – Principe de la classification de donne´es par des fourmis articielles selon
l’algorithme pre´sente´ par [Lumer et Faieta, 1994]. En (a) les objets sont re´partis
ale´atoirement sur la grille. Les fourmis peuvent s’en saisir et les de´poser dans des
cases ou` la densite´ d’objets similaires est e´leve´e. Il en re´sulte la formation de groupes
comme en (b).
3.3 Approches re´centes
Une extension de l’algorithme de [Lumer et Faieta, 1994] a e´te´ pre´sente´e dans
[Monmarche´ et al., 1999]. D’une part, les fourmis peuvent empiler les objets les uns
sur les autres dans une meˆme case de la grille. Lorsqu’elles rencontrent un tas d’objets,
elles peuvent ainsi se saisir de l’objet le plus dissimilaire. D’autre part, une hybridation
a e´te´ effectue´e avec l’algorithme des K-Means. Cette hybridation consiste a` utiliser la
se´quence d’algorithmes suivante : AntClass, K-Means, AntClass, K-Means. AntClass
fournit une partition initiale, les K-Means corrige des erreurs d’AntClass qui mettrait
beaucoup plus de temps a eˆtre corrige´e avec AntClass seul.
Dans [Labroche et al., 2002] a e´te´ introduit un nouveau mode`le a` base de four-
mis pour la classification utilisant le syste`me d’identification chimique des fourmis.
Celui-ci est fonde´ sur la construction d’une odeur coloniale qui est le fruit des apports
ge´ne´tiques, environnementaux et comportementaux. Cette odeur est construite par les
individus pour identifier qui fait partie du groupe et qui doit eˆtre rejete´. A partir de
ce mode`le, un nouvel algorithme de classification a e´te´ propose´ dans lequel chaque
donne´e est une fourmi dont l’odeur est de´termine´e par les valeurs prises par les attri-
buts de´crivant cette donne´e. Les fourmis effectuent des rencontres ale´atoires et de´cident
d’appartenir au meˆme groupe ou non. Il en re´sulte l’e´tablissement d’une classification.
Enfin, dans [Azzag et al., 2003], a e´te´ introduit un nouveau mode`le permettant d’ef-
fectuer rapidement une classification hie´rarchique. Il s’agit de copier la manie`re dont
les fourmis construisent des structures vivantes en s’accrochant les unes aux autres en
fonction de crite`res locaux (la forme de la structure influenc¸ant le comportement d’ac-
crochage ou de de´crochage). Dans ce mode`le, chaque fourmi artificielle repre´sente une
donne´e. Les fourmis sont place´es initialement a` la racine de l’arbre et vont pouvoir se
de´placer dans cet arbre et s’accrocher afin de construire une structure hie´rarchique dont
chaque noeud repre´sente une donne´e. L’objectif est de construire automatiquement un
site portail (donne´es textuelles) et d’obtenir la proprie´te´ suivante : chaque noeud o de
l’arbre est une cate´gorie compose´e de toutes les donne´es porte´es par les sous-arbres
RNTI - C - 1
H. Azzag et al.
1
1
1
2
2
2
3
3
1 1
1
2
2
2
3
3
(a) (b)
Fig. 2 – Principes utilise´s pour la classification par nuages d’agents. Les agents sont
place´s initialement avec des coordonne´es et des vecteurs vitesse ale´atoires (voir (a)).
Les mouvements d’un agent de´pendent des autres agents perc¸us dans son voisinage et
des similarite´s entre les donne´es qu’ils repre´sentent. Le comportement local de chaque
agent tend a` former globalement des groupes d’agents similaires se de´plac¸ant de manie`re
cohe´rente (voir (b)).
de o. Les sous cate´gories (repre´sente´es par les noeuds connecte´s a` o) doivent eˆtre tre`s
similaires a` leur me`re dans l’arbre, mais e´galement les plus dissimilaires entre elles.
Les re´sultats obtenus sont tre`s compe´titifs par rapport a` la classification ascendante
hie´rarchique notamment.
4 Autres approches
4.1 Intelligence en essaim
L’intelligence en essaim (”swarm intelligence” [Bonabeau et al., 1999]) regroupe de
nombreux algorithmes a` base de population d’agents. Les fourmis artificielles en font
partie mais nous nous inte´ressons dans cette section a` des algorithmes plus spe´cifiques
qui utilisent les de´placements d’un essaim d’agents pour re´soudre un proble`me. A titre
d’exemple, les algorithmes PSO (”particle swarm optimization”) utilisent un ensemble
de particules caracte´rise´es par leur position et leur vitesse pour maximiser une fonction
dans un espace de recherche. Des interactions ont lieu entre les particules afin d’obtenir
des comportements globaux efficaces.
Dans la biologie, de nombreux chercheurs se sont inte´resse´s a` la manie`re dont les ani-
maux se de´placent en groupe. Aucun individu ne controˆle les autres mais pourtant des
formes et des comportements complexes peuvent apparaˆıtre lors de ces de´placements.
[Reynolds, 1987] a e´te´ probablement le premier a` proposer une utilisation informatique
de tels mode`les, simulations qui sont utilise´es notamment dans l’industrie du cine´ma
pour donner des mouvements re´alistes a` des groupes d’individus. Dans ces travaux,
chaque individu e´volue dans un espace 3D. Il est donc caracte´rise´ par sa position et
sa vitesse. Un individu perc¸oit les autres dans un voisinage donne´. Des re`gles compor-
tementales ge´ne´ralement simples permettent aux individus de se de´placer en groupe,
d’e´viter des obstacles, etc.
En 1998, ces principes ont e´te´ applique´s pour la premie`re fois a` un proble`me de
classification [Proctor et Winter, 1998] (voir figure 2). Les agents repre´sentent chacun
RNTI - C - 1
Classification et me´thodes biomime´tiques
une donne´e. Un agent re´agit aux autres agents pre´sents dans son voisinage en tenant
compte de la similarite´ des donne´es. Un agent se de´placera plutoˆt vers des donne´es qui
lui sont similaires. Cette re`gle comportementale permet donc de former des groupes de
donne´es similaires.
Dans [Monmarche´ et al., 2002], cet algorithme a e´te´ ame´liore´ et e´value´ d’une manie`re
plus syste´matique. Une distance ide´ale entre individus est de´finie, distance qui de´pend
de la similarite´ entre les donne´es. Un crite`re d’arreˆt est utilise´ e´galement en mesurant
l’entropie spatiale du nuage d’agents. Cet algorithme a e´te´ inte´gre´ dans un syste`me de
fouille visuelle de donne´es utilisant la re´alite´ virtuelle.
4.2 Syste`mes immunitaires
Les syste`mes immunitaires (SI) sont un ensemble de mode´lisations du syste`me im-
munitaire humain et animal [Jerne, 1974]. applique´s a` diffe´rents proble`mes en infor-
matique. (voir un survol [Dasgupta et al., 2003]). Ils utilisent les principes suivants :
des agents (lymphocytes) qui ge´ne`rent des anticorps vont apprendre a` reconnaˆıtre le
soi du non-soi (les antige`nes). Pour cela, ces agents doivent d’abord eˆtre engendre´s en
utilisant un principe de composition de briques e´le´mentaires. Ensuite, ils subissent un
test de se´lection (dit de se´lection ne´gative) : les agents rejetant le soi sont e´limine´s, et
les autres, qui vont rejeter le non-soi, sont garde´s. Chaque fois qu’il y a reconnaissance
d’un antige`ne par un anticorps, la pre´sence des lymphocytes ge´ne´rant ces anticorps est
favorise´e par un processus de se´lection par clonage et par la disparition des lymphocytes
non stimule´s par les antige`nes. Ce clonage donne donc lieu a` des interactions entre les
lymphocytes et peut mettre en oeuvre des mutations. Certains lymphocytes, lorsqu’ils
sont souvent utilise´s, prennent un roˆle d’e´le´ment de me´morisation a` long terme. Ces
syste`mes disposent de proprie´te´s complexes car ils sont capable de ge´ne´rer des solutions
et de les se´lectionner en fonction de leur efficacite´ selon des heuristiques originales.
En ce qui concerne la classification, les principes des syste`mes immunitaires sont, a`
un niveau ge´ne´ral, les suivants (voir par exemple le syste`me aiNet
[de Castro et Von Zuben, 2000]) : les donne´es d1,...,dn repre´sentent les antige`nes. Ces
antige`nes sont pre´sente´s ite´rativement au syste`me jusqu’a` l’obtention d’une condition
d’arreˆt. On suppose que les donne´es sont nume´riques, et donc qu’un antige`ne est un
vecteur de dimension n. A chaque ite´ration, l’antige`ne pre´sente´ va activer des anticorps
(assimile´s dans cette mode´lisation a` des lymphocytes-B). Un anticorps est e´galement
repre´sente´ par un vecteur de dimension n. Les anticorps suffisamment proches de l’an-
tige`ne (au sens de la distance euclidienne) vont subir des clonages avec mutation (inter-
action anticorps/antige`nes) afin d’amplifier et d’affiner la re´ponse du syste`me. Egale-
ment, ces anticorps vont subir une se´lection (interaction anticorps/anticorps) : ceux qui
sont trop proches les uns des autres seront diminue´s en nombre. Apre`s ces ite´rations,
le syste`me converge en plac¸ant des anticorps (qui agissent comme des de´tecteurs) de
manie`re judicieuse et en nombre adapte´ aux donne´es.
D’autres mode`les plus complexes existent. Ainsi dans [Knight et Timmis, 2002] le
syste`me utilise plusieurs niveaux de cellules et d’interaction (anticorps, lymphocytes,
cellules de me´morisation). Dans [Nasaroui et al., 2002], ce meˆme syste`me est ge´ne´ralise´
et ame´liore´ en utilisant des fonctions d’appartenance floue plutoˆt qu’une distance eu-
clidienne et un seuil.
RNTI - C - 1
H. Azzag et al.
5 Discussion et perspectives
Il ressort de cette e´tude des points saillants que l’on peut re´sumer comme suit. Il
est certain que les AG pour la classification a` eux seuls ont fait l’objet d’un volume de
travaux plus important que toutes les autres me´thodes re´unies, cela e´tant certainement
duˆ a` leur popularite´ mais aussi aux succe`s rencontre´s en tant que me´thode globale
d’optimisation. Cependant, au sein des me´thodes biomime´tiques, ces algorithmes n’ont
pas ne´cessairement tous les avantages de leur coˆte´. Le proble`me du choix des parame`tres
reste difficile (cela ne concerne pas le choix du nombre de classes mais plutoˆt des
parame`tres lie´s a` la me´thode comme la taille de la population, les ope´rateurs, etc). La
diversite´ des codages utilise´s montre par ailleurs que les AG sont sensibles aux choix de
la repre´sentation et des ope´rateurs, et que le choix d’un ope´rateur de croisement pour
optimiser des partitions n’est pas simple.
Il faut noter e´galement que les principales diffe´rences entre les AG et les autres
me´thodes viennent du fait que dans les AG, un individu repre´sente ge´ne´ralement une
classification entie`re et la population est un ensemble de classifications, alors que dans
les autres algorithmes, un individu repre´sente une donne´e et la population dans son en-
semble repre´sente la classification. Dans un AG, la solution au proble`me est le meilleur
individu de la population, alors que dans les autres algorithmes, la solution est l’en-
semble des individus. Cette diffe´rence est fondamentale puisque elle va obliger l’AG a`
centraliser son fonctionnement. Les autres algorithmes vont au contraire utiliser des
principes heuristiques plutoˆt locaux et agissant en paralle`le sur toute la classification.
Sans doute que cela a des re´percutions sur le temps d’apprentissage dans les AG, ce
qui justifie l’e´tude d’approches ge´ne´tiques hybrides.
Parmi les perspectives que l’on peut de´gager, il faut noter qu’il existe encore peu de
me´thodes biomime´tiques qui soient incre´mentales, conceptuelles et/ou hie´rarchiques.
Des potentialite´s existent cependant : on peut ajouter des fourmis/donne´es dans un
algorithme tel [Lumer et Faieta, 1994], ou encore faire apparaˆıtre de nouveaux agents
en de´placement dans un essaim. L’incre´mentalite´ est possible dans de nombreux algo-
rithmes, mais n’a pas encore e´te´ re´ellement teste´e, sans doute parce que les proble`mes
traite´s ne le requie`rent pas. La classification conceptuelle semble un peu plus difficile car
les me´thodes repre´sentent plutoˆt un partitionnement (au sens ensembliste du terme)
plutoˆt que des regroupements selon des caracte´ristiques communes. Des pistes sont
lance´es notamment avec les syste`mes immunitaires, mais en ge´ne´ral les algorithmes
n’utilisent pas, sauf dans le cas nume´rique avec des centro¨ıdes, l’espace de description
des donne´es pour cre´er des groupes. Les approches hie´rarchiques sont e´galement globa-
lement ignore´es, pourtant leur inte´reˆt est grand pour l’interpre´tation des re´sultats par
un expert humain. On aurait pu penser pour les AG que l’apparition de repre´sentations
arborescentes (programmation ge´ne´tique, etc) allait donner lieu a` des e´tudes ge´ne´tiques
et hie´rarchiques, mais cela n’a apparemment pas encore e´te´ le cas. Un autre axe en-
core inexplore´ mais qui devrait pouvoir l’eˆtre par ces me´thodes est le traitement de
grandes bases de donne´es. D’une part ces me´thodes biomime´tiques peuvent eˆtre assez
facilement paralle´lise´es ce qui n’est pas ne´cessairement le cas des me´thodes classiques
en classification. D’autres part elles utilisent (fourmi, essaim et syste`mes immunitaires
notamment) des proprie´te´s statistiques des donne´es plutoˆt que des cas particuliers :
on peut imaginer par exemple augmenter par des facteurs importants la taille d’une
RNTI - C - 1
Classification et me´thodes biomime´tiques
population de fourmis ou encore celle d’un nuage d’agents, ou recourir par exemple a`
de l’e´chantillonnage.
Un des axes extreˆmement prometteur pour certaines de ces me´thodes (fourmis,
essaim principalement) vient de leur capacite´ a` fournir une classification comme les
autres me´thodes, mais e´galement une visualisation de ces classifications. Cette ca-
pacite´ est une grande force des algorithmes a` base d’essaim et de l’algorithme de
[Lumer et Faieta, 1994] notamment (a` l’image des carte de Kohonen pour les re´seaux
de neurones). Cela permet a` l’expert du domaine d’interpre´ter directement et interacti-
vement les re´sultats et de formuler graphiquement des requeˆtes sur ces donne´es. Notons
que d’autres approches biomime´tiques, comme les automates cellulaires par exemple,
n’ont pas encore e´te´ re´ellement exploite´s pour le domaine de la classification.
Re´fe´rences
[Abraham et Ramos, 2003] A. Abraham et V. Ramos. Web usage mining using ar-
tificial ant colony clustering and linear genetic programming. In The Congress on
Evolutionary Computation, pages 1384–1391, Canberra, Australia, 08-12 December
2003. IEEE-Press.
[Alexandrov, 2000] D. Alexandrov. Randomized algorithms for the minmax diameter
k-clustering problem. In Proceedings of ECCO 13, pages 193–194, Capri, Italy, May
2000.
[Azzag et al., 2003] N. Azzag, H. Monmarche´, M. Slimane, G. Venturini, et C. Gui-
not. Anttree : a new model for clustering with artificial ants. In IEEE Congress on
Evolutionary Computation, Canberra, Australia, 08-12 December 2003.
[Babu et Murty, 1993] G.P. Babu et M.N. Murty. A near-optimal initial seed value
selection in k-means algorithm using a genetic algorithm. 14:763–769, 1993.
[Babu et Murty, 1994] G.P. Babu et M.N. Murty. Clustering with evolution strategies.
27(2):321–329, 1994.
[Bezdek et al., 1994] J.C. Bezdek, S. Boggavarapu, L. Hall, et A. Bensaid. Genetic
algorithm guided clustering. In Proceedings of the First IEEE Conference on Evo-
lutionary Computation, pages 34–39, 1994.
[Bhuyan et al., 1991] J.N. Bhuyan, V.V. Raghavan, et V.K. Elayavalli. Genetic algo-
rithms for clustering with an ordered representation. In R.K. Belew et L.B. Booker,
editors, Proceedings of the Fourth International Conference on Genetic Algorithms,
pages 408–15, San Diego, CA, 1991. Morgan Kaufmann.
[Bonabeau et al., 1999] E. Bonabeau, M. Dorigo, et G. Theraulaz. Swarm Intelligence:
From Natural to Artificial Systems. Oxford University Press, New York, 1999.
[Colorni et al., 1991] A. Colorni, M. Dorigo, et V. Maniezzo. Distributed optimization
by ant colonies. In Proceedings of the First European Conference on Artificial Life,
pages 134–142, 1991.
[Dasgupta et al., 2003] D. Dasgupta, Z. Ji, et F. Gonza´lez. Artificial immune system
(ais) research in the last five years. In IEEE Congress on Evolutionary Computation,
Canberra, Australia, 08-12 December 2003.
RNTI - C - 1
H. Azzag et al.
[de Castro et Von Zuben, 2000] L.N. de Castro et F.J. Von Zuben. An evolutionary
immune network for data clustering. In In Proceedings of the IEEE SBRN’00 (Bra-
zilian Symposium on Artificial Neural Networks), pages 84–89, 2000.
[Deneubourg et al., 1990] J.-L. Deneubourg, S. Goss, N.R. Franks, A. Sendova-Franks,
C. Detrain, et L. Chretien. The dynamics of collective sorting: robot-like ant and
ant-like robots. In Proceedings of the First International Conference on Simulation
of Adaptive Behavior, pages 356–365, 1990.
[Falkenauer, 1994] E. Falkenauer. A new representation and operators for genetic al-
gorithms applied to grouping problems. Evolutionary Computation, 2(2):123–144,
1994.
[Fogel et Simpson, 1993] D.B. Fogel et P.K. Simpson. Evolving fuzzy clusters. In
ICNN93, pages 1829–1834, San Francisco, 1993.
[Goldberg, 1989] D.E. Goldberg. Genetic Algorithms in Search, Optimization and Ma-
chine Learning. Addison-Wesley, 1989.
[Greene, 2003] W.A. Greene. Unsupervised hierarchical clustering via a genetic algo-
rithm. In IEEE Press, editor, Proceedings of the 2003 Congress on Evolutionary
Computation, pages 998–1005, Canberra, Australia, 2003.
[Hansohm, 2000] J. Hansohm. Two-mode clustering with genetic algorithms. In Clas-
sification, Automation, and New Media: Proceedings of the 24th Annual Conference
of the Gesellschaft Fur Klassifikation E.V., pages 87–94, 2000.
[Jerne, 1974] N.K. Jerne. Towards a network theory of the immune system. Ann.
Immunol. (Inst. Pasteur), 125C:373–389, 1974.
[Jones et Beltramo, 1991] D.R. Jones et M.A. Beltramo. Solving partitioning problems
with genetic algorithms. In R.K. Belew et L.B. Booker, editors, Proceedings of the
Fourth International Conference on Genetic Algorithms, pages 442–449, San Diego,
CA, 1991. Morgan Kaufmann.
[Knight et Timmis, 2002] T. Knight et J. Timmis. On data clustering with artificial
ants. In J. Garibaldi A. Lotfi et R. John, editors, Proceedings of the 4th International
Conference on Recent Advances in Soft Computing, pages 266–271, Nottingham,
UK., December 2002.
[Krishna et Murty, 1999] K. Krishna et M. Murty. Genetic k-means algorithm. IEEE
Transactions on Systems, Man and Cybernetics - Part B, 29(3):433–439, 1999.
[Kuntz et al., 1997] P. Kuntz, P. Layzell, et D. Snyers. A colony of ant-like agents for
partitioning in vlsi technology. In P. Husbands et I. Harvey, editors, Proceedings of
the Fourth European Conference on Artificial Life, pages 417–424, 1997.
[Labroche et al., 2002] N. Labroche, N. Monmarche´, et G. Venturini. A new clustering
algorithm based on the chemical recognition system of ants. In F. van Harmelen,
editor, Proceedings of the 15th European Conference on Artificial Intelligence, pages
345–349, Lyon, France, july 2002. IOS Press.
[Lucasius et al., 1993] C.B. Lucasius, A.D. Dane, et G. Kateman. On k-medoid clus-
tering of large data sets with the aid of a genetic algorithm: background, feasibility
and comparison. Analytica Chimica Acta, 282:647–669, 1993.
RNTI - C - 1
Classification et me´thodes biomime´tiques
[Lumer et Faieta, 1994] E.D. Lumer et B. Faieta. Diversity and adaptation in popu-
lations of clustering ants. In Proceedings of the Third International Conference on
Simulation of Adaptive Behaviour, pages 501–508, 1994.
[Monmarche´ et al., 1999] N. Monmarche´, M. Slimane, et G. Venturini. On improving
clustering in numerical databases with artificial ants. In D. Floreano, J.D. Nicoud, et
F. Mondala, editors, 5th European Conference on Artificial Life (ECAL’99), Lecture
Notes in Artificial Intelligence, volume 1674, pages 626–635, Swiss Federal Institute
of Technology, Lausanne, Switzerland, 13-17 September 1999. Springer-Verlag.
[Monmarche´ et al., 2002] N. Monmarche´, C. Guinot, et G. Venturini. Fouille visuelle
et classification de donne´es par nuage d’insectes volants. RSTI-RIA-ECA : Me´thodes
d’optimisation pour l’extraction de connaissances et l’apprentissage, (6):729–752,
2002.
[Nasaroui et al., 2002] O. Nasaroui, D. Dasgupta, et F. Gonzalez. The fuzzy artificial
immune system: Motivations, basic concepts, and application to clustering and web
profiling. In Proceedings of the IEEE International Conference on Fuzzy Systems at
WCCI, pages 711–716, May 12-17 2002.
[Proctor et Winter, 1998] G. Proctor et C. Winter. Information flocking: Data visua-
lisation in virtual worlds using emergent behaviours. In J.-C. Heudin, editor, Proc.
1st Int. Conf. Virtual Worlds, VW, volume 1434, pages 168–176. Springer-Verlag,
1998.
[Raghavan et Birchard, 1979] V.V. Raghavan et K. Birchard. A clustering strategy
based on a formalism of the reproductive process in natural systems. In Information
Implications into the Eighties, Proceedings of the Second International Conference
on Information Storage and Retrieval, pages 10–22. ACM, 1979.
[Reynolds, 1987] C. W. Reynolds. Flocks, herds, and schools: A distributed behavioral
model. Computer Graphics (SIGGRAPH ’87 Conference Proceedings), 21(4):25–34,
1987.
[Spears et al., 1993] W.M. Spears, K.A. De Jong, T. Baeck, D.B. Fogel, et H. de Garis.
An overview of evolutionary computation. In Proceedings of the European Confe-
rence on Machine Learning 1993, P. Brazdil (Ed.), Lecture notes in Artificial Intel-
ligence 667, pages 442–459, 1993.
Summary
We present in this paper a survey of the methods and algorithms which have been
used to solve the clustering problem. We describe the genetic and evolutionary ap-
proaches as well as the different encoding and operators which have been defined.
Then we describe the artificial ant approach for clustering which is a rich source of ins-
piration. We detail other approaches using ”agents” in a broad sense like for instance
swarm intelligence (flocks) and like imune systems. Finally we sumarize the presen-
ted approaches and we conclude on the perspectives related to the use of biomimetic
methods for clustering.
RNTI - C - 1
