Une repre´sentation des arborescences pour la
recherche de sous-structures fre´quentes
Federico Del Razo Lopez, Anne Laurent, Maguelonne Teisseire
LIRMM - Universite´ Montpellier II
161 rue Ada 34392 Montpellier cedex 5
{delrazo,laurent,teisseire}@lirmm.fr
Re´sume´. La recherche de structures fre´quentes au sein de donne´es ar-
borescentes est une proble´matique actuellement tre`s active qui trouve
de nombreux inte´reˆts dans le contexte de la fouille de donne´es comme,
par exemple, la construction automatique d’un sche´ma me´diateur a` par-
tir de sche´mas XML. Dans ce contexte, de nombreuses propositions ont
e´te´ re´alise´es mais les me´thodes de repre´sentation des arborescences sont
tre`s souvent trop couˆteuses. Dans cet article, nous proposons donc une
me´thode originale de repre´sentation de ces donne´es. Les proprie´te´s de
cette repre´sentation peuvent eˆtre avantageusement utilise´es par les algo-
rithmes de recherche de structures fre´quentes (sous-arbres fre´quents). La
repre´sentation propose´e et les algorithmes associe´s ont e´te´ e´value´s sur
des jeux de donne´es synthe´tiques montrant ainsi l’intereˆt de l’approche
propose´e.
1 Introduction
L’explosion du volume de donne´es disponible sur internet conduit aujourd’hui a`
re´fle´chir sur les moyens d’interroger les grosses masses d’information afin de retrouver
les informations souhaite´es. Les utilisateurs ne pouvant pas connaˆıtre les mode`les sous-
jacents des donne´es qu’ils souhaitent acce´der, il est donc ne´cessaire de leur fournir
les outils automatiques de de´finition de sche´mas me´diateurs. Un sche´ma me´diateur
fournit une interface permettant l’interrogation des sources de donne´es par l’utilisateur
au travers de requeˆtes. L’utilisateur pose alors ses requeˆtes de manie`re transparente a`
l’he´te´roge´ne´ite´ et la re´partition des donne´es.
XML e´tant maintenant pre´ponde´rant sur internet, la recherche de moyens d’inte´gra-
tion de tels sche´mas est indispensable. Si les recherches permettant l’acce`s aux donne´es
quand un sche´ma d’interrogation est connu sont maintenant bien avance´es (Xyleme,
2001), les recherches concernant la de´finition automatique d’un sche´ma me´diateur res-
tent incomple`tes et sont donc non satisfaisantes (Tranier et al., 2004). Dans le but de
proposer une approche permettant de re´pondre a` cette dernie`re proble´matique, nous
nous focalisons sur la recherche de sous-structures fre´quentes au sein d’une base de
donne´es de sche´mas XML. Une sous-structure fre´quente est un sous-arbre se trouvant
dans la plupart des sche´mas XML conside´re´s. Cette proportion est examine´e au sens
d’un support qui correspond a` un nombre minimal d’arbres de la base dans lesquels
doit se retrouver le sous-arbre pour eˆtre conside´re´ comme fre´quent. Une telle recherche
- 299 - RNTI-E-5
Structure de repre´sentation des arborescences
est complexe dans la mesure ou` il est ne´cessaire de traduire l’ensemble des sche´mas en
une structure aise´ment manipulable. Cette transformation des donne´es conduit parfois
a` doubler ou tripler la taille de la base initiale de`s lors que l’on souhaite utiliser des
proprie´te´s spe´cifiques permettant d’ame´liorer le processus de fouille. Il n’existe pas de
solution efficace a` ce proble`me alliant une repre´sentation compacte a` des proprie´te´s
inte´ressantes. L’objet de cet article est la de´finition d’une nouvelle structure re´pondant
a` cet objectif puisque les proprie´te´s de la repre´sentation propose´e peuvent permettre
une ge´ne´ration des candidats et un e´lagage aussi performants que les approches de
re´fe´rence (Asai et al., 2002, Zaki, 2002, Termier et al., 2002).
La section 3 pre´sente le cœur de notre proposition de´finissant une nouvelle me´thode
de repre´sentation des donne´es arborescentes ainsi qu’un aperc¸u de la me´thode mise en
œuvre pour la ge´ne´ration et l’e´lagage des candidats. La section 4 pre´sente les re´sultats
des premie`res expe´rimentations mene´es. Enfin, la section 5 conclut et pre´sente les prin-
cipales perspectives associe´es a` nos travaux.
2 Travaux connexes
2.1 De´finitions pre´liminaires
Les travaux les plus significatifs concernant l’extraction de sous-arbres fre´quents
se trouvent dans (Kuramochi et Karypis, 2001, Asai et al., 2002, Yan et Han, 2002,
Zaki, 2002, Termier et al., 2002). Les de´finitions suivantes sont inspire´es de ces travaux.
Un arbre est un graphe connexe sans cycle. Il est compose´ d’un ensemble de nœuds
relie´s par des arcs tels qu’il existe un nœud particulier nomme´ racine et tel que tous les
autres nœuds hormis la racine sont compose´s d’un ensemble de sous-arbres. On parle
d’arbre ordonne´ si l’ordre des sous-arbres importe, et d’arbre non ordonne´ sinon.
relation indirecte
a a
a
b
père
fils
descendant
ancêtre
L={a,b}
a
b
b
0
1 2 3
4
5 6
T relation directe
Fig. 1 – Arbre
Soit un alphabet d’e´tiquettes L = {a, b, c, ...}, on conside`re un arbre e´tiquete´ et
ordonne´ note´ T = {r,N,B,L, F} ou` : r est la racine de l’arbre, N est l’ensemble des
nœuds, B est l’ensemble des areˆtes tel que B ⊆ V 2, (L : N → L) est une fonction
qui associe une e´tiquette aux nœuds dans N et F est une relation d’ordre de droite a`
- 300 -RNTI-E-5
Del Razo Lopez et al.
gauche entre fre`res.
b
S
a
a c
0
1 2
S3
a
a
0
1 2
b
S4 a
0
21 3
b c d
1
b
T4 a
0
T2
a
b
a
0
1
2
a
0
S1
a
0
1
2
T3
a
b
a)
b)
2 3
dc
c)
a
T
1
2
3
1
a
4
b
5
c
b
a
a
0
1 2
2
Fig. 2 – Inclusion et non inclusion de S dans T
Plusieurs nœuds pourront avoir la meˆme e´tiquette, ce qui introduit un proble`me
de polyse´mie (une meˆme e´tiquette renvoie a` plusieurs nœuds diffe´rents). La taille de
T , note´e |T |, est le nombre de nœuds dans T . l’ordre de T correspond au nombre de
branches dans T .
Chaque nœud n est associe´ a` un nume´ro unique i, correspondant a` sa position par
un parcours en profondeur d’abord. ni fait alors re´fe´rence au i-e`me nœud en utilisant
un sche´ma de nume´ration (i = 0...|T | − 1).
Pour chaque couple (x, y) ∈ N × N , il peut exister une relation directe entre x
et y si x est le pe`re de y ou bien une relation indirecte si x est un anceˆtre de y (il
faut alors suivre plusieurs arcs successifs pour aller de x a` y). La figure 1 montre
une relation directe (pe`re-fils) entre les nœuds 0 et 3 de T , et une relation indirecte
(anceˆtre-descendant) entre les nœuds 3 et 6.
On note S ¹ T le fait que le sous-arbre S est inclus dans l’ arbre e´tiquete´ ordonne´
T (voir figure 2). Dans le cadre d’une relation indirecte anceˆtre-descendant, S ¹ T si
et seulement si les suivantes conditions sont satisfaites :
1. NS ⊂ NT
2. Pour toutes les branches bS = (x, y) ∈ BS , x est anceˆtre de y dans T
3. Pour toutes les branches bT = (x, y) ∈ BT , x est anceˆtre de y dans S
4. Pour toutes les branches b1S = (x, y1) ∈ BS et b2S = (x, y2) ∈ BS telles que
y1 ≺F y2, y1 ≺F y2 dans T
2.2 Les repre´sentations existantes
L’algorithme TREEMINER (Zaki, 2002) propose une me´thode d’extraction de
sous-arbres fre´quents. De meˆme que dans notre approche, ces travaux reposent sur une
- 301 - RNTI-E-5
Structure de repre´sentation des arborescences
a
b a
c
a
n=0, s=[0, 4]
n=1, s=[1, 3]
n=2, s=[2, 3]
n=3, s=[3, 3]
n=4, s=[4, 4]
T0
0, [0, 4]
0, [2, 3]
0, [4, 4]
0, [1, 3] 0, [3, 3]
     a              b               c 
T, comme une chaîne chiffrée:
T, comme une liste d’étendue:
a  b  a  c  −1  −1  −1  a  −1, taille: ( 2|T| )
taille: ( 3|T| )
Fig. 3 – Repre´sentation propose´e dans (Zaki, 2002)
repre´sentation originale des arbres facilitant la gestion des candidats. Ne´anmoins, la
repre´sentation verticale adopte´e aboutit a` stocker trois fois la taille d’un arbre comme
l’indique la figure 3.
L’approche propose´e dans (Asai et al., 2002) est de´die´e aux arbres ordonne´s et
adopte une structure permettant des performances tre`s inte´ressantes. Mais cette repre´-
sentation, illustre´e figure 4, conduit e´galement a` tripler la taille de la base afin de
stocker les informations ne´cessaires.
b a c aa
2 3 410
1 2 3
4next
first
lb
T
a
b a
c
a
T
0
1
2
3
4
Représentation "first child − next sibling" de  T, taille: ( 3|T| )
Fig. 4 – Repre´sentation propose´e dans (Asai et al., 2002)
Des proposition re´centes se basent sur une repre´sentation efficace des arbres mais
ne´anmoins, elles n’utilisent pas des proprie´te´s aussi inte´ressantes que les travaux pre´-
ce´dents afin d’ame´liorer les traitement des structures candidates. Nous pouvons citer
(Wang et al., 2004) dont la structure est illustre´e figure 5 et (Chi et al., 2004), (Chi
et al., 2003) proposant une repre´sentation des arbres illustre´e figure 6.
L’objectif est alors de proposer a` la fois une repre´sentation peu couˆteuse de la base
- 302 -RNTI-E-5
Del Razo Lopez et al.
niveau
1
2
3
4
T  représenté comme une combinaison d’une séquence 
en profondeur d’abord et niveau:
a1   b2    a3    c4     a2 taille: ( 2|T| ),
a
b a
c
a
T0
Fig. 5 – Repre´sentation propose´e dans (Wang et al., 2004)
a
b a
c
a
T
T, comme une chaîne chiffrée:
taille: ( 2|T| )a  b  a  c  &  &  &  a  #, 
& pour remonter à un niveau superieur
#  fin de la chaîne.
Fig. 6 – Repre´sentation propose´e dans (Chi et al., 2004,Chi et al., 2003)
- 303 - RNTI-E-5
Structure de repre´sentation des arborescences
et des proprie´te´s inte´ressantes pour ame´liorer le processus de fouille de donne´es. C’est
dans ce contexte que se situe notre proposition de´crite au paragraphe suivant.
3 Proposition
Dans cet article, nous proposons une nouvelle approche permettant l’extraction
efficace de sous-arbres fre´quents au sein d’une base de donne´es arborescentes. Notre
proposition s’appuie sur une me´thode de repre´sentation des arbres originale qui permet
de ge´ne´rer de manie`re efficace les sous-arbres candidats puis d’e´laguer les sous-arbres
non fre´quents (apre`s calcul du support).
3.1 Repre´sentation des arbres
Pour la repre´sentation d’un arbre T , nous profitons de la propie´te´ suivante : chaque
nœud dans l’arbre posse`de un seul parent. Nous proposons d’utiliser deux vecteurs
pour repre´senter un arbre comme indique´ dans (Weiss, 1998). Le premier, nomme´ st,
conserve la position du pe`re de chaque nœud. Les nœuds de l’arbre sont nume´rote´s
en profondeur d’abord, la racine de T correspondant a` l’index 0 et ayant une valeur
st[0] = −1 pour indiquer que la racine n’a pas de pe`re. Les valeurs st[i], i = 0, 1, ..., k−1
correspondent alors aux positions du pe`re des nœuds i, comme illustre´ sur la figure 7.
(−1)
st
lb b a c aa
−1
2 3 410
0 1 2 0
a
b a
c
a
0
1
2
3
4
T
racine feuille la
plus à droite
Fig. 7 – Repre´sentation d’un arbre
Cette repre´sentation permet de retrouver en temps constant le pe`re d’un nœud.
De plus, elle permet la localisation directe de la feuille la plus a` droite par rapport
a` l’index k. En parcourant l’arbre, on peut baˆtir toutes les relations directes pe`re-fils
entre nœuds.
Le deuxie`me vecteur, nomme´ lb, est utilise´ pour enregistrer les e´tiquettes de l’arbre
avec lb[i], i = 0, 2, ..., k − 1 repre´sentant l’e´tiquette de chaque nœud ni ∈ T .
- 304 -RNTI-E-5
Del Razo Lopez et al.
La structure adopte´e permet une repre´sentation des arbres peu couˆteuse puisqu’elle
se re´duit a` 2|T |. De plus elle posse`de des proprie´te´s inte´ressantes, e´voque´es au para-
graphe suivant, pouvant eˆtre utilise´es lors de la recherche de sous structures fre´quentes.
3.2 Ge´ne´ration et e´lagage des candidats
Les candidats de taille 1 sont obtenus en parcourant tous les nœuds des arbres de
la base de donne´es. Chaque nœud voit son support incre´mente´ lors de ce parcours et
seuls sont conserve´s les nœuds dont le support final est supe´rieur au support minimal
de´fini par l’utilisateur. La base de donne´es est alors transforme´e pour ne conserver que
les nœuds fre´quents, comme illustre´ par la figure 8.
st
lb
0 1 2 3 4 5 6 7
c b a b d
−1−1 −1 1 −1 3 4 4
b
6
7
d
F1={a, b, c ,d}
T2
a
3
4
5
0
c
b
b
b
(−1)
(−1)
a
1 3
2 4
5 6
7
0
e
c
b
b
b e
d
T2
Fig. 8 – Transformation de la base de donne´es apre`s ge´ne´ration de F1
Les candidats de taille 2 sont ge´ne´re´s en combinant deux a` deux tous les fre´quents
de taille 1.
La base de donne´es est alors mise a` jour, en modifiant les arbres de la racine, des
sommets et des feuilles afin de ne conserver que les liens entre les nœuds fre´quents. Les
figures 9, 10 et 11 illustrent ce processus, en conside´rant σ = 7 et F2 = {a− d, a− b}.
7
d
T2
2noeuds dans F ={a, b, d}
b
a
3
4
5
b
b
(−1)
st
lb
0 1 2 3 4 5 6 7
b a b d
−1−1 −1 −1 3 4 4
b
−1
2
0 1 6
Fig. 9 – Transformation de la base - racine
La ge´ne´ration des candidats de taille k ≥ 3 s’effectue de la meˆme manie`re que dans
les approches classiques de type Apriori (Agrawal et Srikant, 2002), par combinaison
- 305 - RNTI-E-5
Structure de repre´sentation des arborescences
des fre´quents de taille k − 1.
T2
F2= 
7
d
(−1)
st
lb
0 1 2 3 4 5 6 7
a b d
−1−1 −1 −1 4 4−1
a
b
a
d
Ensemble de noeuds pères = {a }
3
a
4
5
b
0 1 2 6
−1
Ensemble de noeuds fils = { b, d }
Fig. 10 – Transformation de la base - sommets
L’originalite´ de notre approche re´side dans l’utilisation de notre repre´sentation pour
l’e´lagage des candidats non fre´quents. Le calcul du support de chaque candidat consiste
a` compter le nombre d’arbres de la base qui contiennent ce sous-arbre candidat. Pour ce
faire, pour chaque arbre de la base, il s’agit de chercher les points d’ancrage sur lesquels
la racine du sous-arbre a` tester peut s’instancier. Pour chaque point d’ancrage trouve´,
on cherche alors a` instancier l’ensemble des nœuds de l’arbre candidat au sein de l’arbre
courant teste´. On note que nous cherchons une instanciation exacte du candidat au sein
des arbres de la base. Si tous les nœuds du candidat ont e´te´ trouve´s, l’arbre supporte
le candidat. Le support de la structure candidate est alors incre´mente´. Ce qui n’est pas
le cas si tous les nœuds de l’arbre ont e´te´ parcourus sans trouver l’ensemble des nœuds
du candidat.
 
 
















	
	

 


 

 
 




















...
...
...
...
Fig. 11 – Transformation de la base - feuilles
- 306 -RNTI-E-5
Del Razo Lopez et al.
Fig. 12 – Re´sulats expe´rimentaux : temps de calcul
4 Expe´rimentations
Des expe´rimentations sont mene´es sur les donne´es issues du ge´ne´rateur de sche´mas
XML de´veloppe´ par Alexandre Termier (Termier et al., 2002). Les re´sultats, illustre´s
figure 12, soulignent l’inte´reˆt de notre approche, concernant les temps de calcul.
5 Conclusion et perspectives
Dans cet article, nous proposons une approche originale de repre´sentation de donne´es
arborescentes dont les proprie´te´s permettent une extraction efficace de sous-arbres
fre´quents. Les premie`res expe´rimentations re´alise´es sur des donne´es synthe´tiques laissent
envisager des re´sultats tre`s prometteurs par rapport aux approches de re´fe´rence. Notre
objectif est donc de poursuivre dans cette voie et d’optimiser les diffe´rents algorithmes
associe´s.
Ces travaux seront e´galement utilise´s dans le cadre de la me´diation de donne´es, les
sous-arbres fre´quents extraits servant de support a` la construction automatique d’un
sche´ma me´diateur. Une telle solution peut e´galement eˆtre adopte´e dans le cadre de la
fouille de donne´es en ligne (data streams) pour le traitement a` la vole´e de donne´es
XML. Cette perspective permettra de traiter les gros volumes de donne´es transitant
sur internet de manie`re efficace et rapide.
Re´fe´rences
Agrawal, R. and Srikant, R. (2002). Fast algorithms for mining association rules
in large databases. In Proceedings of the 20th VLDB Conference, Santiago, Chile.
Asai, T., Abe, K., Kawasoe, S., Arimura, H., and Sakamoto, H. (2002). Efficient
substructure discovery from large semi-structure data. In 2nd Annual SIAM Sympo-
sium on Data Mining, SDM2002, Arlington, VA, USA. Springer-Verlag.
- 307 - RNTI-E-5
Structure de repre´sentation des arborescences
Chi, Y., Yang, Y., and Muntz, R. R. (2003). Indexing and mining free trees. In
International Conference on Data Mining 2003 (ICDM2003).
Chi, Y., Yang, Y., and Muntz, R. R. (2004). Cmtreeminer : Mining both closed
and maximal frequent subtrees. In The Eighth Pacific-Asia Conference on Knowledge
Discovery and Data Mining (PAKDD’04).
Kuramochi, M. and Karypis, G. (2001). Frequent subgraph discovery. In IEEE
International Conference on Data Mining (ICDM).
Termier, A., Rousset, M.-C., and Sebag, M. (2002). Treefinder, a first step towards
XML data mining. In IEEE Conference on Data Mining (ICDM), pages 450–457.
Tranier, J., Baraer, R., Bellahsene, Z., and Teisseire, M. (July, 7th - 9th 2004).
Where’s Charlie : Family based heuristics for peer-to-peer schema integration. In
Proceedings of the 8th International Database Engineering and Applications Symposium
(IDEAS ’04), Coimbra, Portugal.
Wang, C., Yuan, Q., Zhou, H., Wang, W., and Shi, B. (May 2004). Chopper :
An efficient algorithm for tree mining. Journal of Computer Science and Technology,
19 :309–319.
Weiss, M. A. (1998). Data Structures And Algorithm Analysis In C.
Xyleme, L. (2001). A dynamic warehouse for xml data of the web. In IEEE Data
Engineering Bulletin.
Yan, X. and Han, J. (2002). gspan : Graph-based substructure pattern mining. In
IEEE Conference on Data Mining (ICDM).
Zaki, M. (2002). Efficiently mining frequent trees in a forest. In ACM-SIGKDD’02.
Summary
Mining frequent subtrees from tree databases is currently a very active research
topic. This research has many interests, including for instance mediator schema building
from XML schemas. In this framework, many works have been proposed. However,
the way the data are represented is often very memory-consuming. In this paper, we
propose a new method to represent such data. We show that this representation has
many properties, which can be used in order to enhance subtree mining algorithms.
Experiments are led to assess our proposition (data representation and its associated
algorithms).
- 308 -RNTI-E-5
