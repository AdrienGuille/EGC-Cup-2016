Modeliser des connaissances ontologiques dans le
cadre du modele des Graphes Conceptuels
Frederic Furst
LINA - FRE 2729
22 rue de la Houssiniere, BP 92208, 44322 Nantes
furst@lina.univ-nantes.fr
Resume. Cet article presente OCGL (Ontology Conceptual Graph Lan-
guage), un langage de representation d'ontologie base sur le modele des
Graphes Conceptuels. Il decrit en detail la facon dont une ontologie est
modelisee en OCGL, et presente l'implementation de ce langage dans l'ate-
lier d'ingenierie ontologique TooCoM.
1 Introduction
L'ingenierie des ontologies est nee de la volonte de diversier les applications des
Systemes a Base de Connaissances (SBC), et de permettre des representations de
connaissances independantes de ces diverses applications (Gomez-Perez et al., 2003).
L'integration d'un tel composant dans un Systeme a Base de Connaissances suppose
alors d'adapter les representations qu'il integre a l'objectif operationnel du systeme,
adaptation qui est l'objet du processus d'operationalisation des ontologies (Furst et al.,
2004). D'autre part, les ontologies ont vocation a integrer toute la semantique des
dierents domaines de connaissances, c'est-a-dire des proprietes de base comme la sub-
somption entre concepts, mais egalement toute propriete permettant d'exprimer la
semantique du domaine considere. Les ontologies evoluent ainsi des ontologies legeres
(lightweight ontologies), n'integrant qu'un nombre restreint de proprietes, vers des onto-
logies lourdes (heavyweight ontologies), visant la modelisation de toutes les proprietes
necessaires a la representation de toute la semantique d'un domaine (Gomez-Perez
et al., 2003).
Dans cet article, nous presentons OCGL (Ontology Conceptual Graph Language),
un langage de representation d'ontologies lourdes, base sur le modele des Graphes
Conceptuels (GCs) (Sowa, 1984). OCGL est implemente dans l'outil TooCoM (a Tool to
Operationalize an Ontology in the Conceptual Graph Model), dedie a la modelisation et
l'operationalisation d'ontologies lourdes dans le cadre du modele des Graphes Concep-
tuels 1. Nous detaillons ici le modele de representation utilise dans TooCoM, mais ne
presentons pas le processus d'operationalisation qu'il implemente, renvoyant pour cela
le lecteur a (Furst et al., 2004).
1. Cet outil est disponible sous licence GPL sur le site http://sourceforge.net/projects/toocom/
- 19 - RNTI-E-5
Ontologies et Graphes Conceptuels
2 OCGL : Ontology Conceptual Graphs Language
Notre objectif consiste a orir la possibilite de modeliser toutes les connaissances
d'un domaine dans le cadre du paradigme Entite/Relation, pour construire des ontolo-
gies lourdes dediees au raisonnement. Le choix du modeles des GCs repose, d'une part,
sur l'aspect graphique de ce formalisme, plus intuitif et facilement manipulable par
des experts du domaine (qui ne sont a priori pas experts du modele), et d'autre part
sur l'expressivite des GCs, qui permettent de representer a la fois des connaissances
terminologiques et des proprietes de base des ontologies (subsomption, signature des
relations, etc), et des proprietes ne correspondant pas a des proprietes classiques, sous
forme d'implications. De plus, il existe dans le modele des GCs des mecanismes de
raisonnement qui permettent de mettre en uvre les representations pour raisonner.
Ainsi, OCGL reprend en bonne partie le modele des Graphes Conceptuels, sa syn-
taxe graphique et sa semantique formelle, ainsi que ses extensions, notamment la SG-
family (Baget and Mugnier, 2002). Il en diere cependant en ce qu'il est seulement
un langage de representation d'ontologie, et non pas un langage de representation de
connaissances. Ainsi, seules les connaissances ontologiques ont leur place en OCGL, et
non les connaissances factuelles portant sur des cas particuliers. De me^me, seules les
instances ontologiques des concepts sont representees, c'est-a-dire celles qui participent
a la denition de la semantique du domaine.
De plus, les representations de connaissances dans OCGL ne sont pas operation-
nelles, de maniere a assurer une reutilisabilite maximum aux ontologies en preservant
leur independance vis-a-vis des applications. Les representations du modele des GCs
dotees d'une semantique operationnelle (regles et contraintes de graphes conceptuels),
c'est-a-dire dont le mode operatoire est xe, ne sont donc pas reprises dans OCGL.
De plus, il est necessaire d'integrer aux ontologies exprimees en OCGL des proprietes
des primitives conceptuelles (concepts et relations) classiquement utilisees dans les
ontologies, et qui ne sont pas explicitement integrees au modele des GCs, telles que les
proprietes algebriques des relations (Staab and Maedche, 2000). OCGL etend donc une
partie du modele des Graphes Conceptuels, en lui ajoutant un ensemble de proprietes
portant sur les types de concepts et les types de relations.
Le langage OCGL comporte un niveau terminologique, compose d'un ensemble
de primitives conceptuelles (concepts et relations) et d'un ensemble d'instances onto-
logiques, et un niveau axiomatique, ou est exprimee la semantique des primitives
conceptuelles. Ce niveau axiomatique se decompose en un ensemble de schemas
d'axiome correspondant aux proprietes classiques des ontologies legeres et un en-
semble d'axiomes (appeles egalement axiomes de domaine) completant si besoin est
l'expression de la semantique des primitives (cf. gure 1).
Un schema d'axiome possede une forme predenie xe, instanciee avec des primi-
tives conceptuelles, et porte sur une ou plusieurs primitives conceptuelles (generalement
une seule primitive, parfois deux). Par opposition, les axiomes n'ont pas de forme
predenie, me^me s'ils s'ecrivent tous sous la forme d'un couple de graphes liees par des
liens entre sommets concepts. Ils presentent ainsi la me^me forme que les regles GC, mais
ne font que specier une connaissance, et ne sont pas forcement destines a produire
des connaissances. De plus, ils peuvent ne pas exprimer une propriete portant sur une
ou deux primitives en particulier, mais ils representent pluto^t des proprietes mettant
- 20 -RNTI-E-5
F. Furst
en jeu plusieurs primitives. Ainsi, l'axiome (( Les amis de mes amis sont mes amis ))
peut e^tre vu comme une propriete de transitivite de la relation ami(Humain,Humain).
Mais l'axiome (( Les ennemis de mes ennemis sont mes amis )) peut dicilement e^tre
exprime comme une propriete algebrique ou une cardinalite d'une primitive concep-
tuelle particuliere 2. Ce dernier axiome sera donc represente dans une ontologie par un
axiome 3.
Fig. 1 { Representation d'une ontologie des relations familiales en OCGL dans l'atelier
TooCoM. La partie superieure presente la hierarchie de relations, la partie inferieure
gauche, la hierarchie des concepts et la partie inferieure droite, un axiome. Dans les
hierarchies, les eches representent des liens sorte-de, et les proprietes sont indiquees
par des symboles (un cercle barre pour la disjonction entre concepts ou l'exclusivite
entre relations, un S pour la symetrie d'une relation, un T pour la transitivite, etc.).
Dans la partie axiome, les nuds clairs representent la partie antecedent, les nuds
sombres la partie consequent. Chaque partie contient des nuds concepts (rectangles)
et des nuds relations (ellipses).
Les schemas d'axiome species sont representes par des symboles decorant les
2. A la rigueur, cet axiome peut e^tre vu comme une sorte de combinaison entre l'inverse d'une
relation et une transitivite.
3. Les axiomes et schemas d'axiome ont pour but commun l'expression de la semantique du domaine.
C'est pourquoi, dans la suite, et quand cela ne pre^te pas a confusion, le terme axiome sera utilise pour
designer a la fois les axiomes (de domaine) et les schemas d'axiome.
- 21 - RNTI-E-5
Ontologies et Graphes Conceptuels
hierarchies. Ceci permet a l'utilisateur d'avoir une vue aussi globale et synthetique
que possible de l'ontologie. Les schemas d'axiome portant sur les concepts sont : le lien
sorte-de entre concepts, l'abstraction d'un concept (un concept c est abstrait si toute
instance de c est aussi instance d'un de ses concepts ls), la disjonction entre deux
concepts c1 et c2 (deux concepts c1 et c2 sont disjoints si aucune instance commune aux
deux concepts n'existe. Les proprietes combinees d'abstraction d'un concept et de dis-
jonction deux a deux entre ses concepts ls indiquent que les concepts ls constituent
une partition du concept pere.).
Les schemas d'axiome portant sur les relations sont : le lien sorte-de entre relations,
la signature d'une relation, qui precise les concepts les plus speciques qu'elle peut
lier, l'incompatibilite de deux relations ayant me^me signature, qui indique qu'il est
impossible que ces relations lient le me^me ensemble d'instances, l'exclusivite de deux
relations ayant me^me signature, qui indique que si une des relations est niee entre indi-
vidus, alors l'autre est etablie, les proprietes algebriques d'une relation binaire liant
les me^mes concepts (symetrie, transitivite, reexivite, anti-reexivite, anti-symetrie),
les cardinalites maximum et minimum portant sur un concept donne de la signa-
ture d'une relation.
Le seul schema d'axiome portant sur les instances est le type d'une instance : le
type d'une instance est le concept le plus specique auquel elle appartient.
Les schemas d'axiome ne permettant pas toujours d'exprimer toute la semanti-
que d'un domaine, il est necessaire d'ajouter au langage des axiomes (ou axiomes de
domaine) orant la possibilite d'exprimer graphiquement des proprietes. Un axiome est
constitue d'un couple de graphes conceptuels, lies par des nuds concepts, et construits
sur le support (au sens du modele des GCs) constitue par les ensembles de concepts, de
relations et d'instances ontologiques, les relations sorte-de, les signatures des relations,
et les types des instances. Les sommets concepts sont, soit des concepts generiques, au
sens des Graphes Conceptuels 4, soit des instances ontologiques.
3 Conclusion
Dans cet article, nous presentons OCGL, un langage de representation d'ontologie
utilisant le modele des Graphes Conceptuels. L'un des principaux avantages d'OCGL
par rapport aux langages de representation d'ontologie existants est son aspect gra-
phique qui ore un formalisme intuitif et facilement manipulable. D'autre part, OCGL
s'appuie sur la SG-Family pour representer tout type de connaissances axiomatiques,
sans se limiter aux proprietes classiquement considerees dans les ontologies legeres,
comme c'est a l'heure actuelle le cas dans les langages du Web semantique, RDF et
OWL. Enn, OCGL permet de specier ces connaissances axiomatiques sans leur im-
poser de semantique operationnelle, ce qui augmente la reutilisabilite des ontologies.
Cette approche diere donc de celles qui visent a ajouter aux ontologies legeres des
regles (par exemple dans le langage SWRL) ou des contraintes (par exemple dans le
langage PAL de l'outil Protege) dont la semantique operationnelle conditionne l'usage.
4. Ils sont alors etiquetes par un type et par le marqueur .
- 22 -RNTI-E-5
F. Furst
References
Baget, J. and Mugnier, M. (2002). Extensions of Simple Conceptual Graphs: the Com-
plexity of Rules and Constraints. Journal of Articial Intelligence Research, 16:425{465.
Furst, F., Leclere, M., and Trichet, F. (2004). Operationalizing domain ontologies:
a method and a tool. In Proceedings of the 16th European Conference on Articial
Intelligence (ECAI'2004), volume 110, pages 318{322. IOS Press.
Gomez-Perez, A., Fernandez-Lopez, M., and Corcho, O. (2003). Ontological Enginee-
ring. Springer-Verlag, Advanced Information and Knowledge Processing.
Sowa, J. (1984). Conceptual Structures: Information Processing in Mind and Machine.
Addison-Wesley.
Staab, S. and Maedche, A. (2000). Axioms are objects too: Ontology engineering
beyong the modeling of concepts and relations. Research report 399, Institute AIFB,
Karlsruhe.
Summary
This article presents OCGL (Ontology Conceptual Graph Language), a language
dedicated to the representation of ontologies and based on the Conceptual Graphs
model. The article describes in detail how an ontology is designed in OCGL, and shows
the implementation of this language in the ontological engineering tool TooCoM.
- 23 - RNTI-E-5
- 24 -RNTI-E-5
