EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
10© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
11© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
12© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
13© Revue MODULAD, 2007 Numéro 36
11
Summarizing A 3 Way Relational 
Data Stream
Baptiste Csernel, 3rd year PhD Student
Fabrice Clérot, Supervisor FT R&D
Georges Hébrail, Supervisor ENST
2
Plan
 Problem Presentation
 Context
 Problematic
 Useful Tools
 CluStream
 Bloom Filters
 Method Presentation
 Entity Summary 
 Relation Summary
 Storage Management
 Work in Progress and Perspectives
23
Problem Presentation
 Motivation
 Context
 Problematic
 Goal
4
Motivations 
 Data Stream processing is an ever growing 
preoccupation.
 For both DSMS and stream mining 
applications, summaries are a necessity.
 Most information is by nature, relational.
35
Context
 Data stream summaries generate a lot of 
interest.
 Static tables as well as data stream join 
evaluation are a popular subject as well.
 Single stream mining and single table mining 
are the norm.
 Relational stream mining is not a very active 
research area.
6
Problematic
Entity Stream E 
of Elements Ei
Ei : (Ke, t, e1, e2, …. ep)i
Entity Stream F 
of Elements Fj
Fj : (Kf, t, f1, f2, …. fq)j
Relation  Stream R 
of Elements Rl
Rl : (Ke, Kf, t, r1, r2, …. rd)l
 Additional Constraints : 
 All Streams are insert only.
 R speed <<< E and  F speeds.
 All attributes are numerical.
 References are not broken.
iE
47
Goal
 Summarizing three data streams sharing a 
relational link with one another.
 Building separate summaries for each entity 
stream, and for the relation stream.
 Summarizing the information contained in the 
relational links between the streams.
8
Useful Tools
 CluStream 
 Cluster Feature Vector (CFV)
 SnapShot System
 Bloom Filters
59
Cluster Feature Vector (CFV)
(BIRCH, Zhang 1996) (Aggarwal 2003)
 Structure :
(n, CF1(t), CF2(t), CF1(a1), CF2(a1), ….,   
CF1(ad), CF2(ad) ).
 With
 CF1(ak) = Σ(i, 1, n)  (aki)
 CF2(ak) = Σ(i, 1, n)  (aki)²
 Remark
 Time has the same role as any other variable.
10
SnapShot System
 The state of the system is saved at regular 
time intervals
 The data structure is chosen in order to allow 
arithmetic operation between snapshots.
 The time at which snapshots are taken is 
chosen in accordance to the user’s needs.
611
Snapshot System : 
Distribution example :  2o
64   32
48   16
56   40   24
68   60   52 
70   66   62
69   67   65
Snapshots
26
25
24
23
2²
21
Step
5
4
3
2
1
0
Order o
12
CluStream : Data Stream Clustering 
Algorithm (Aggarwal 2003)
 Algorithm based on three principles :
 Dividing processing in two parts, an on-line part 
and an off-line part.
 Creating and maintaining a large population of 
micro clusters.
 Storing the state of those micro clusters with a 
snapshot system..
713
CluStream (1/4) (on-line part)
 Initialization
 Off-line initialization of the 
micro clusters.
 For each element
 Locate the closest micro 
cluster.
 Admission test
 If admitted, update CFV.
 Otherwise, create a new micro 
cluster, and remove an 
outdated one.
Micro Cluster 1 
(CFV, ID list)
Micro Cluster 2 
(CFV, ID list)
Micro Cluster N 
(CFV, ID list)
….
14
CluStream (2/4) (on-line part)
 Micro cluster removal
 Remove an old micro cluster.
(criteria based on the arrival date of the last elements)
 If none is available, fuse the two closest micro 
cluster.
(Update the idlist of the absorbing micro cluster)
815
CluStream (3/4) (partie en ligne)
 Storage
 Snapshot system with a distribution in 2o
 Each snapshot contains
 The CFV of each micro cluster.
 The id list of each micro cluster.
16
CluStream (4/4) (off-line part)
 Use the snapshot to rebuild the stream part 
to be analyzed. (as a set of micro clusters)
 Apply a classic classification algorithm to the 
resulting set of micro clusters.
 The resulting clusters represent the final 
clustering of the stream.
917
Bloom Filters (Bloom 1970) (1/2)
 Idea :
Can remember whether or not it has 
previously seen any number of elements.
 Supports two operations :
 Learn a new element.
 Test if an element has been previously learned or 
not.
18
Bloom Filters (Bloom 1970) (1/2)
 Structure :
 A bloom filter is a simple binary word B of b bytes.
 At initialization, all the bytes are set to 0.
 Learn a new element E :
 Hash E to a b bytes word WE.
 Set all the bytes at 1 in WE to 1 in B.
 Test a new element N :
 Hash N to a b bytes word  WN
 If all the bytes at 1 in WN are at 1 in B, then, with high probability, 
N was previously learned.
 Otherwise, N was never learned before.
 Remark :
 Bloom filters are additive.
10
19
Method Presentation
 System Overview
 Entity Summary
 Relation Summary
 Storage System
20
System Overview
Entity Stream E Entity Stream F
Relation  Stream R
Entity Summary 
Structure :
- Ne Micro Clusters
- Ne Bloom Filters Relation Summary 
Structure :
CFV Cross Table 
Ne x Nf CFV Cross Table
Entity Summary 
Structure :
- Nf Micro Clusters
- Nf Bloom Filters
11
21
Entity Summary
 Upon the arrival of each new element
Ei (Ke, t, e1, e2, …. ep)i :
 Find the closest micro cluster.
 Test for admission
 If admitted :
 Update the micro cluster CFV information.
 Learn Ke with the bloom filter attached to the micro cluster.
 If not admitted :
 Create a new micro cluster with Ei as its seed.
 Make room for it by fusing the two closest micro clusters.
(this implies adding their two Bloom filters as well)
22
Relation Summary 
 Upon the arrival of each new element 
Rl (Ke, Kf, t, r1, r2, …. rd)l :
 Check all the Bloom filters for E to locate the one 
containing Ke. Mark its associated micro cluster Ci.
 Check all the Bloom filters for F to locate the one 
containing Kf. Mark its associated micro cluster Cj.
 If the couple (i,j) is unique, add the element Rl to the CFV 
of indices (i,j) in the CFV cross table if the couple .
12
23
Storage Management
 The storage system used is the same one as 
the one described in CluStream. 
 All three streams are considered to share the 
same system clock.
 The information saved in each snapshot is :
 For each entity :
 The CFV and IdList of each micro cluster.
 For the relation :
 All the CFV matrix.
24
Work in Progress
 A Prototype of the algorithm already exists.
 Algorithm Testing :
 Exploring suitable real datasets :
 Telecommunication (services/usage/client)
 Peer 2 Peer (documents/requests/users)
 Airline Companies (flight/reservations/passengers)
 Constructing an artificial dataset :
 What kind of distribution should be used (Zipf?)
 What kind of clusters, and what evolution for them.
 Finding an appropriate evaluation criteria and 
evaluation scheme.
13
25
Conclusions and Perspectives
 This work is still in progress despite a 
working prototype.
 Perspectives include :
 Extensive evaluation with real and artificial data.
 Studying the summary querying mechanisms.
 Extending the method to more complex data 
schemes (star first, then any relational type).
 Adapting the method to deal with deletions in the 
streams processed.
