EnTiMid: un middleware au service de la maison
Grégory Nain∗, Olivier Barais∗
Régis Fleurquin∗, Jean-Marc Jézéquel∗
∗Université de Rennes 1 / IRISA / INRIA Bretagne Atlantique
prenom.nom@irisa.fr,
http://www.irisa.fr/triskell
Résumé. Face aux enjeux de société liés au vieillissement de la population, la do-
motique est souvent citée comme une solution pour favoriser le maintien à domicile
des personnes âgées et la coordination des acteurs autour de cette problématique.
Cet article liste les exigences auxquelles doit faire face une plate-forme domotique.
Il montre que ces exigences rendent inopérantes les solutions commerciales exis-
tantes, d’autant que ces dernières cherchent bien souvent à imposer sur le marché
une solution propriétaire qui ne peut prétendre à la richesse fonctionnelle nécessaire.
Il propose, en conséquence, un ensemble de propriétés souhaitables pour un intergi-
ciel orienté domotique, permettant le déploiement d’une solution à l’échelle d’une
agglomération. L’architecture d’un intergiciel construit au dessus d’une plateforme
OSGI, et respectant ces propriétés est ensuite présentée. Enfin, une expérience de
déploiement de cet intergiciel dans le cadre du laboratoire domotique de l’université
de Rennes 1 met en évidence la pertinence de la solution proposée.
1 Introduction
La prise en compte du vieillissement des populations est une préoccupation majeure de la plu-
part des sociétés occidentales. La domotique, par le fait qu’elle peut faciliter le maintien à domicile
des personnes âgées, constitue un élément de réponse pertinent. En effet, elle rend possible la
mise à disposition d’une multitude de services facilitant le quotidien des personnes âgées ou dé-
pendantes qui peuvent et souhaitent rester à leur domicile tout en leur garantissant un niveau de
sécurité équivalent à celui offert par les structures d’accueil traditionnelles en passe de saturation
(maisons de retraite, hôpitaux, etc.). Ces services couvrent un large spectre, les plus représentatifs
étant l’assistance aux tâches devenues pénibles et la surveillance médicale à distance. La multipli-
cité des acteurs concernés (patients, collectivités territoriales, médecins, infirmières, fournisseurs,
etc.) à différents niveaux (habitat, agglomération, département, etc.) ainsi que le caractère sensible
et évolutif de ces services posent des contraintes très particulières sur les plates-formes logicielles
capables de les supporter.
Nous proposons dans cet article un rapport d’expérience sur la construction d’une architecture
logicielle pour un intergiciel de domotique. Cet article est structuré de la manière suivante. Dans un
premier temps, nous identifions les exigences (section 2) auxquelles un système domotique doit être
en mesure de répondre. Puis nous énumérons (section 3) les propriétés que doit afficher un inter-
giciel domotique pour respecter les exigences décrites. L’architecture d’un intergiciel respectueux
de ces propriétés et conçu au dessus d’une plate-forme OSGI est ensuite présentée (section 4). Une
illustration du déploiement de cet intergiciel dans le cadre du laboratoire domotique de l’université
de Rennes 1, nous permet d’analyser la pertinence de l’intergiciel proposé (section 5). Après une
EnTiMid: le middleware de la maison
comparaison de ce travail avec ceux portant sur la construction d’intergiciels domotiques et sur la
construction de traducteurs automatiques de protocoles (section 6), nous concluons et présentons
les travaux à mener dans le futur (section 7).
2 Les exigences associées à un intergiciel pour la domotique
L’interconnexion des réseaux est la première exigence qui ressort d’une analyse des préoc-
cupations des acteurs du domaine. De plus en plus, la nécessité de faire communiquer entre eux
des appareils non compatibles (caméras, interrupteurs, capteurs de présence, etc.) en provenance
de multiples constructeurs est au coeur des préoccupations. En effet, un service local à un habitat
peut exiger le pilotage d’équipements d’une grande variété, aussi bien sur le plan fonctionnel que
technologique. Cet impératif se retrouve également pour certains services globaux ayant pour objet
la gestion au niveau d’une agglomération, d’un parc préexistant d’équipements potentiellement très
hétérogènes. En conséquence, la conception de services locaux ou globaux repose sur l’orchestra-
tion de dispositifs en provenance de constructeurs différents. Or, à ce jour, les constructeurs tendent
plutôt à vouloir capter leurs clients au travers de protocoles propriétaires incompatibles.
L’ouverture à des protocoles de haut niveau semble être la deuxième exigence. Le modèle
économique pressenti autour de la domotique se compare souvent à celui d’un Amazon ou d’un
Google, il est difficile de prévoir à l’avance tous les services qui pourront être construits par dessus
ce type de système. Celui-ci doit donc permettre de développer et déployer facilement des services
de haut niveau construits comme une agrégation de services de plus bas niveaux accessibles sur le
web ou dans une maison.
Favoriser les accès nomades représente la troisième exigence. L’accès aux services de la do-
motique ne doit plus se faire uniquement via une télécommande universelle localisée dans l’habitat.
Les équipements doivent pouvoir être sollicités et administrés depuis plusieurs lieux (la personne
depuis son habitat, l’infirmière depuis sa voiture, le médecin depuis son cabinet, le technicien de-
puis son bureau, etc.), au travers de différents matériels (une station de travail, un assistant person-
nel, un téléphone intelligent, une télévision, etc.), selon des interfaces adaptées à chaque contexte
et type d’intervenant (depuis un navigateur web, une application dédiée, un client de messagerie
instantanée, etc.). Cela implique, en particulier, le support de protocoles de communication de haut
niveau facilitant l’écriture de services nomades.
Des solutions dynamiques de déploiement favorisant la prise en charge des nouveaux dispo-
sitifs et technologies à venir est bel et bien la quatrième exigence. Les trois exigences précédentes
font l’hypothèse d’un univers figé en termes de services, de matériels et de protocoles, mais il est
clair que de nouveaux protocoles vont être proposés ou standardisés, de nouveaux services plus
riches et plus complexes vont être publiés. Il est donc vital qu’une telle plate-forme de domotique
permette des évolutions sans perturber les composants logiciels qu’elle héberge.
La sûreté et la sécurité forment enfin la cinquième et dernière exigence. Les systèmes domo-
tiques déployés devront garantir des niveaux de fiabilité, de disponibilité, de sûreté (sécurité des
biens et des personnes) et de sécurité (contrôle des accès aux services selon le type des interve-
nants) élevés. En particulier, un fonctionnement en mode dégradé doit permettre de maintenir un
niveau de service adéquat, malgré la présence de pannes de dispositifs matériels, de composants
logiciels, ou la perte d’une connexion réseau.
Toutes ces exigences rendent inopérantes les solutions commerciales existantes. En effet, ces
dernières cherchent bien souvent à imposer sur le marché une solution propriétaire qui ne peut
prétendre à la richesse fonctionnelle nécessaire. Elles limitent la prise en charge de leur plate-
forme à leurs seuls matériels, excluant toute possibilité de conception de services transversaux.
C’est le cas de solutions comme celles de DeltaDore ou de Legrand qui, au travers de protocoles
G. Nain et O. Barais et R. Fleurquin et J-M. Jézéquel
propriétaires, souhaitent profiter de leur position dominante sur le marché pour capter un maximum
de clients. Plus encore, les offres de convergence entre le monde de la domotique et le monde
informatique sont également très rares. En particulier, la possibilité de développer des services de
haut niveau par agrégation de services présents sur le WEB ou dans un habitat reste, à ce jour, une
tâche difficile du fait du manque d’ouverture des solutions domotiques.
3 Propriétés de l’intergiciel EnTiMid
Afin de répondre aux cinq exigences présentées dans la section qui précède, nous avons dégagé
plusieurs propriétés souhaitables pour notre intergiciel EnTiMid :
• une couche d’abstraction dédiée pour supporter efficacement l’hétérogénéité des équipe-
ments (première et troisième exigence) ;
• une architecture en couches construites à base de composants pour permettre le développe-
ment modulaire par catégorie de services et faciliter l’évolutivité de l’intergiciel (deuxième
et quatrième exigence) ;
• un mode de communication par messages pour découpler les services et limiter l’impact sur
le système d’une panne d’un équipement (deuxième et cinquième exigence) ;
• une approche générative pour supporter l’hétérogénéité des protocoles d’intégration avec les
environnements numériques de travail ou de loisirs (troisième exigence) ;
• une configuration et une reconfiguration dynamique pour permettre l’adaptation du système
à l’évolution des équipements de la maison, des services offerts et du contexte d’exécution
(quatrième exigence).
Nous allons dans la suite de cette section, détailler chacune de ces propriétés.
Une couche d’abstraction L’univers de la domotique est peuplé d’une multitude de protocoles
de communication de terrain (standards ou propriétaires). Ces protocoles se justifient souvent par
le fait que les segments de marché visés par les acteurs de la domotique ne sont pas les mêmes. A
titre d’exemple, on peut citer les protocoles qui suivent : LonWorks, Dali, KNX, InOne By Legrand
(IOBL) ou encore X2D. Dans le monde du réseau et des télécommunications, il existe également
une multitude de protocoles qui agissent à différents niveaux du modèle OSI. Ces protocoles sont,
en général, incompatibles. La solution adoptée par le mode des réseaux, a été la création de couches
d’abstraction supplémentaires, appelées ponts ou passerelles entre les différents protocoles de com-
munication. De façon similaire, il est fortement probable qu’aucun réseau de terrain ne s’imposera
dans la domotique. Il faudra donc composer avec des protocoles plus ou moins compatibles déve-
loppés par les constructeurs eux-mêmes. Or, la réalisation de services distants ne peut se faire que
si les accès aux différentes technologies se fait de façon uniforme. Il est inconcevable de dévelop-
per des applications au cas par cas, en fonction des technologies et/ou des spécificités du logement.
Comme pour l’informatique, un effort d’abstraction doit donc être entrepris dans la domotique. Il
est indispensable de proposer un niveau d’abstraction suffisamment élevé pour ne plus dépendre
de la technologie employée, mais seulement de la fonction des appareils. Sous cette condition, les
configurations se feront d’une manière uniforme, facilitant le travail des développeurs de services.
Des ponts entre ce niveau d’abstraction et les différents protocoles existants permettront d’assurer
l’interopérabilité des équipements dans le cadre de services transversaux.
EnTiMid: le middleware de la maison
EnTiMid propose, en conséquence, une couche d’abstraction dans laquelle peuvent s’établir les
communications. Moyennant un mécanisme d’encodage et de décodage propre à chaque protocole,
les communications peuvent se faire d’une manière uniforme et cela quels que soient les protocoles
réellement utilisés par les différents participants.
Une architecture en couches orientée composants La couche d’abstraction permet d’uniformi-
ser les modes d’accès aux différentes ressources. Elle nécessite cependant l’écriture d’un module
logiciel ad hoc pour chaque protocole. Dans le futur, de nouveaux et nombreux protocoles risquent
d’apparaître. Ils seront issus de nouveaux constructeurs ou pourquoi pas, le fruit d’accords entre les
différents acteurs des technologies du bâtiment. Par exemple, Zigbee propose une couche physique,
une couche réseau et une couche materielle pour le déploiement d’équipement et leur communica-
tion à très faible consommation. Les équipements de type Zigbee arrivent depuis peu sur le marché.
Dans un avenir plus lointain, 6lowpan (IPv6 over Low power Wireless Personal Area Networks) en
cours de standardisation pour permettre des communications à faible débit mais très peu consom-
matrices en énergie, verra le jour. Les protocoles applicatifs qui arriveront au dessus de ces couches
réseaux arriveront donc dans les mois et années à venir. Il serait surprenant que ces protocoles ne
diffèrent pas de ceux qui existent actuellement. Il faut donc offrir le moyen de faciliter l’écriture
des futurs modules qui prendront en charge l’intégration de ces protocoles au niveau de la couche
d’abstraction. Une architecture à base de composants limiterait cet effort en permettant la réutilisa-
tion de certaines parties du code de ces modules et l’encapsulation pour adaptation d’autres parties.
Les modules d’intégration deviendraient eux-mêmes des composants réutilisables si besoin.
Plus encore, une architecture distinguant 3 couches (protocoles de haut niveau, couche d’abs-
traction, protocoles de bas niveau) offrirait la possibilité de découpler la problématique des pro-
tocoles de haut niveau (UPnP, DPWS, etc.), de celle des protocoles de bas niveau (IOBL, X2D,
etc.). Ce distinguo est essentiel car nous le verrons, il est possible de générer automatiquement les
passerelles vers certains de ces protocoles
EnTiMid propose donc d’utiliser une architecture en couches à base de composants pour ajouter
facilement de nouveaux protocoles logiciels.
Un mode de communication par messages La sûreté de fonctionnement d’un système est un
point très important dès lors que des vies sont potentiellement en jeu. Afin de limiter l’impact lors
de la panne d’un des équipements ou module logiciel, le mode de communication retenu au sein
d’EnTiMid, est un mode de communication par messages décentralisé, car il confère à l’intergiciel
deux propriétés intéressantes.
C’est tout d’abord un atout dans des aspects de tolérance aux fautes. Ne nécessitant pas une
centralisation des communications, les différents composants de l’application peuvent être ins-
tallés, arrêtés ou désinstallés, sans pour autant se perturber les uns les autres entre composants
indépendants.
La communication par messages permet aussi de prendre en compte de façon native, le fort
asynchronisme lié aux évènements générés sur les réseaux domestiques. Ainsi, lorsqu’un appui est
effectué sur une télécommande, par exemple, un message formaté aux conventions de la couche
d’abstraction, est propagé à l’ensemble des composants à l’écoute pour leur signaler l’évènement.
EnTiMid propose donc un mode de communication par messages.
Des mécanismes de génération automatique pour la convergence numérique Si les proto-
coles de communications avec les équipements souffrent d’une trop grande variété, les couches
d’interconnexion pour assurer une convergence numérique sont elles aussi nombreuses. De nom-
breux protocoles comme l’Universal Plug and Play ( UPNP), le Devices Profile for Web Services
G. Nain et O. Barais et R. Fleurquin et J-M. Jézéquel
(DPWS - Jammes et al. (2005)) ou le Digital Living Network Alliance (DLNA) offrent des moyens
d’intégrer les équipements domotiques dans un environnement numérique de travail ou de loisirs.
Bien que peu utilisés à ce jour à leur plein potentiel, il est probable que demain des sociétés déve-
lopperont des services s’appuyant sur ces protocoles de haut niveau. Là encore, EnTiMid doit être
en mesure d’assurer une compatibilité du système avec les protocoles nécessaires, par la simple
génération de profils adéquats au dessus de sa couche d’abstraction. De plus, très peu de produits
d’automatismes intègrent aujourd’hui des piles de compatibilité avec ces protocoles, pour des rai-
sons de coût, de puissance de calcul ou d’utilité. Mais à travers cette génération l’ensemble des pro-
duits compatibles avec l’intergiciel se verrait offrir gratuitement une publication dans l’ensemble
des protocoles de haut niveau déployés sur la passerelle à laquelle ils sont rattachés. De même,
il serait possible de définir facilement son propre langage d’interaction avec ses équipements aux
travers de son logiciel de messagerie instantanée.
EnTiMid propose donc d’utiliser les mécanismes de l’Ingénierie Dirigée par les Modèles pour
générer les couches de communication dédiées à ces protocoles de haut niveau depuis notre modèle
de communication.
Chargement de configuration à chaud La mise à disposition de nouveaux services et la prise
en charge de nouveaux protocoles tout en maintenant la disponibilité de certains services essentiels
qui ne doivent pas être affectés passe nécessairement par la présence d’un mécanisme permettant
l’ajout, le retrait ou la modification à chaud de composants logiciels. La fiabilisation de l’installa-
tion peut également profiter de ce type de mécanisme. En effet, elle peut se faire au travers d’une
adaptation de celle-ci à son contexte d’exécution interne (panne d’un composant logiciel) et externe
(panne d’un dispositif matériel ou logiciel partenaire). Le système doit pour cela se doter de méca-
nismes pour d’une part détecter les problèmes et d’autre part calculer et adopter une configuration
maintenant un maximum de fonctionnalités critiques en état de marche. Prenons l’exemple d’un
système d’alerte par téléphone ; si des travaux sur la ligne occasionnent une coupure, le système
doit alors en cas d’alerte après détection de cette coupure trouver une solution alternative (émis-
sion d’un SMS par exemple) pour acheminer le message à tout prix. Ceci implique de mobiliser
de nouveaux services et donc une capacité à se reconfigurer dynamiquement. Le chargement de
la configuration tel qu’il est fait actuellement n’est pas qu’un simple chargement des produits à
associer de pair à pair ou à inclure dans un scénario. Bien entendu, tout ceci y est défini, mais une
partie du travail consiste à télécharger, installer et démarrer l’ensemble des composants logiciels,
ainsi que leurs dépendances, nécessaires à la mise en place effective de cette configuration. Ex-
porté dans un format tel que XMI, le fichier de configuration aurait la capacité de passer un très
grand nombre de filtres de l’Internet ; un avantage dans le cadre d’un déploiement de configuration
à distance. Prenons l’exemple d’une société gérant les services déployés dans le domicile d’une
personne âgée ; le déploiement d’une nouvelle configuration se résume à réaliser la configuration
en local, puis à télécharger ce fichier de configuration sur la passerelle à travers l’interface HTTP.
EnTiMid prendrait alors en compte et déploierait la configuration dans l’instant, sans coupure de
service, ni redémarrage.
EnTiMid propose donc, d’une part, un mécanisme d’adaptation à chaud et, d’autre part, un
langage de description d’architectures pour sa (re-)configuration dynamique.
4 Détails sur la mise en œuvre de l’intergiciel EnTiMid
Fondée sur OSGi L’intergiciel EnTiMid a été conçu au dessus de la plate-forme dynamique de
services OSGi ( OSGi; Alliance (2007)). Dans ce type d’architecture orientée services, on impose
la prise en compte, dès le début des développements, du fait qu’un service peut à tout moment
EnTiMid: le middleware de la maison
(a) Extensibilité (b) Couche d’abstraction
FIG. 1 – Vue générale d’EnTiMid
être ajouté ou retiré à chaud. En conséquence, chaque composant logiciel (appelé bundle dans
le jargon OSGi) est prévu pour être déployé même si l’ensemble des services, nécessaires à la
réalisation de ce pourquoi il a été mis en place, ne sont pas déployés. Par ailleurs, OSGi offre
de façon native un mécanisme de gestion du cycle de vie des composants, qui prend en compte
l’installation (respectivement la désinstallation) le démarrage ou la mise à jour de composants
sans nécessiter un redémarrage du logiciel ou de la plateforme. L’exploitation de ces propriétés
d’OSGi permet à EnTiMid de répondre aux problématiques d’évolutivité à travers, d’une part,
l’architecture à base de composants et, d’autre part, de la prise en compte des modifications à
chaud. La figure 1(a) qui manifeste l’architecture logique de notre intergiciel illustre le fait que les
bundles sont faiblement couplés, facilitant ainsi la gestion des cycles de vie ; elle met également en
valeur la forte modularité de l’application, et ses capacités d’extension.
L’implantation de la couche d’abstraction Sur la figure 1(b) sont représentées différentes pas-
serelles, de différentes technologies, permettant un contrôle des produits par un acteur extérieur à la
technologie. La communication avec ces dernières peut se faire à de multiples niveaux du modèle
OSI ; à travers une interface RS232 pour la passerelle A, à l’aide d’une interface HTTP pour la pas-
serelle B ou enfin, un mélange de l’ensemble des possibilités (comme modélisé pour la passerelle
C).
Le framework fourni par EnTiMid offre un ensemble d’interfaces et de classes génériques.
C’est donc à travers le portage des différents moyens d’accès aux technologies, au niveau de ce
framework, que le niveau d’abstraction nécessaire à une utilisation transparente de ces passerelles
est atteint. Pour présenter l’organisation structurelle des différents types de bundles présents autour
du framework, nous nous appuyons sur un modèle en couches que la figure 1(a) illustre. Cette
figure constitue, en fait, un zoom sur le composant "Framework - EnTiMid" de la figure 1(b).
Le modèle de données représentant la couche d’abstraction est présenté dans la figure 3. Ce
modèle permet de décrire les différents équipements comme des capteurs/actionneurs permettant
de déclencher ou d’écouter des HouseActions. Un patron de conception composite permet de voir
les scènes comme une succession ordonnée d’actions élémentaires.
La couche basse est composée par les bundles pilotes. A l’image des pilotes de périphériques
d’un ordinateur, ces bundles sont en charge de la communication entre EnTiMid et les différentes
passerelles technologiques présentes dans l’installation. Un bundle pilote est chargé de répercuter
les actions générées sur le réseau physique en messages sur EnTiMid, ainsi que de transmettre une
G. Nain et O. Barais et R. Fleurquin et J-M. Jézéquel
demande circulant au sein d’EnTiMid vers les périphériques de la technologie dont il est traducteur,
au travers de la passerelle pour laquelle il réalise les transformations nécessaires.
Au dessus de cette couche, intervient la couche dite "neutre" qui est simplement composée
du bundle EnTiMid : c’est la couche d’abstraction. Dès cette couche atteinte, les messages, peu
importe leur provenance ou leur destination, sont tous au même format. Définis par un type et
des données, leur uniformisation permet un traitement des informations métier, sans se soucier des
spécificités du réseau émetteur ou destinataire.
Se dessine ensuite la couche de "haut niveau", regroupant l’ensemble des bundles développés
au dessus de la couche neutre. Profitant des messages uniformisés, ces bundles déploient leurs
efforts pour proposer des actions de gestion, locale ou distante, complètement automatisées ou non,
ainsi que des actions de présentation. C’est dans cette couche, et au delà, que seront développés
les services de demain, apportant dans la maison, des systèmes de gestion plus fine des énergies
électriques, thermiques, solaires, mais aussi des outils de surveillance des intrusions, de contrôle
d’accès ou d’aide au maintien à domicile de personnes dépendantes.
FIG. 2 – Mécanisme de publication/souscription
Mécanisme de publication/souscription La problématique posée par le fort asynchronisme des
évènements est résolue en utilisant un système de publication/souscription (figure 2). Ainsi, les
modules qui le souhaitent peuvent se mettre en écoute, souscrire à un certain type d’évènement. Ils
seront alors informés à chaque fois qu’un message sera publié. Le nombre de souscriptions n’est
jamais connu à l’avance, et des bundles, et donc les services qu’ils exposent, peuvent se mettre à
l’écoute ou se retirer à n’importe quel moment. Ainsi les messages ne sont propagés que vers les
bundles à l’écoute, évitant ainsi d’envoyer des messages vers des services désinstallés par exemple.
Il existe cependant deux méthodes offrant chacune des avantages et des inconvénients.
La première méthode consiste à s’abonner, aux évènements d’enregistrement et de résiliation
des services, auprès de la base (à l’image du Bundle 12 sur la figure 2). Il est ainsi possible de
répertorier l’ensemble des services nécessaires disponibles de façon complètement passive. Le gain
de temps est alors évident, puisqu’une simple consultation d’un booléen permet de dire si la tâche
peut ou non s’exécuter. Mais avec cette méthode, il n’est pas impossible qu’un message se perde
ou arrive en retard, et qu’un service disponible au moment du test ne le soit plus à l’exécution de
la tâche.
La seconde méthode, que nous avons adoptée dans EnTiMid, consiste à rechercher dans la base
d’enregistrement des services, ceux nécessaires à l’exécution de la tâche ; et cela, à chaque fois
EnTiMid: le middleware de la maison
que la tâche est appelée (cf : Bundle 8). On assure ainsi qu’avant chaque exécution de la tâche,
l’ensemble des services nécessaires sont présents. S’il manque un service, la tâche est abandonnée
ou mémorisée pour exécution ultérieure. Bien entendu, le revers de la médaille est un accroissement
du temps de contrôle par rapport au temps de calcul réel.
FIG. 3 – Modèle de la couche d’abstraction
Ingéniérie des modèles et dépôts de bundles La grande dynamicité nécessaire à l’application a
imposé la mise en place d’un système de configuration (enregistrement et chargement) assez com-
plexe. La structure des fichiers de configuration, et le code logiciel nécessaire à leur utilisation, ont
été définis et générés au moyen des techniques de modélisation EMF. L’enregistrement de la confi-
guration liste l’ensemble des périphériques installés par constructeurs, en traitant dans un premier
temps les actionneurs, puis les capteurs, et traite enfin les configurations pair à pair, de zones et de
scènes. Cette partie plus spécifique de l’utilisation de l’Ingénierie Dirigée par les Modèles pour la
génération des traducteurs vers les couches hautes est présentée en détail dans Nain et al. (2008).
C’est au chargement que les efforts sont les plus importants. Premièrement, car il est nécessaire
de vérifier que l’ensemble des composants logiciels nécessaires au chargement de la configuration,
sont installés et disponibles sur le système. Le cas échéant, le système se tourne vers les dépôts
de bundles à sa disposition pour télécharger et déployer les bundles nécessaires et suffisants. C’est
alors que la configuration est déployée dans le même ordre qu’elle a été conçue (actionneurs en
premier, puis capteurs). L’ordre est important, car la configuration ne sauvegarde pas le message
à transmettre, mais seulement une référence vers le produit cible, et le type d’action à réaliser. A
chaque chargement, les messages sont donc recréés, et cette création nécessite que l’actionneur
cible soit installé avant que le capteur lié ne soit configuré.
5 Cas d’utilisation et d’étude
L’intergiciel développé est actuellement déployé au sein du laboratoire de domotique de l’Uni-
versité de Rennes 1. Bien que de nombreux développements soient nécessaires pour que des fonc-
tionnalités plus poussées puissent être mises en œuvre (voir la Figure 4 pour une description claire
de ce qui est fait, en cours ou à faire), EnTiMid est d’ores et déjà utilisé pour la simulation de cas
concrets.
G. Nain et O. Barais et R. Fleurquin et J-M. Jézéquel
FIG. 4 – Vue globale de l’état de la mise en œuvre
Le laboratoire est avant tout un espace de simulation, c’est pourquoi il est divisé en plusieurs
pièces : cuisine, salon, bureau et chambre. Chacune de ces pièces est équipée d’une technologie
prédominante différente. Le salon est équipé de luminaires Legrand, pilotés au moyen du protocole
IOBL (InOne By Legrand) via des interrupteurs Sagane 84520, ainsi que d’une commande de
volets roulants Sagane 84526. De leur côté, le bureau et la cuisine sont tous deux équipés de la
technologie Delta Dore : plafonniers (TYXIA 442), récepteur pour volets roulants et chauffage,
le tout piloté en X2D radio et courant porteur. Enfin la chambre est équipée d’un store géré par
une commande radio TR221, de plafonniers et de prises commandables de technologie Konnex
contrôlés par un module TX223.
Chacune de ces technologies, et chacun de ces constructeurs, permet de créer des scénarios (par
exemple "un départ" ou "une arrivée" dans un habitat). Prenons l’exemple d’un scénario de départ.
Dans notre laboratoire, il était nécessaire de déclencher le départ pour la technologie Konnex, en
appuyant sur le bouton 3 d’une télécommande TU204, puis pour Legrand, grâce aux boutons d’un
interrupteur Sagane 84425 et enfin pour X2D le déclenchement se faisait via une passerelle HTTP.
Du fait qu’EnTiMid permet d’interagir d’un réseau à un autre, la mise en exploitation au sein du
laboratoire de ce scénario a pu être réalisé de manière globale : un appui sur le bouton 3 de la
télécommande Konnex TU204 génère un évènement qui déclenche en cascade les scénarios de
départ de Legrand et Delta Dore.
Cet exemple reste un cas élémentaire mais néanmoins concret d’utilisation de la plateforme. A
une échelle plus intéressante, imaginons un ensemble de maisons ou un quartier résidentiel pour
personnes âgées. Chacune de ces maisons est équipée par une technologie répondant au plus juste,
aux besoins de ses occupants. Il est probable que l’on userait dans ce quartier de plusieurs construc-
teurs ou technologies. Le gardien, chargé de vérifier qu’à 21h toutes les portes sont closes, les
volets baissés et les lumières éteintes, devrait se connecter aux différentes maisons à travers diffé-
rentes passerelles d’accès (donc différentes interfaces), ayant chacune leur mode de fonctionnement
propre, pour faire son travail. EnTiMid, du fait de son aptitude à communiquer avec différentes
technologies, pourrait être déployé dans chacune de ces habitations. Il servirait alors de "passerelle
EnTiMid: le middleware de la maison
universelle". Le gardien se verrait proposer un mode unique de connexion et une méthode unique
d’action, indépendamment de la technologie de la maison. Mieux encore, il deviendrait possible
de déployer des solutions technologiques sur chacune des passerelles pour que ces vérifications
puissent se faire de façon automatique, et qu’une alerte remonte au gardien en cas d’anomalie.
Au cours de leur formation, les étudiants inscrits en licence professionnelle "Services et Pro-
duits pour l’Habitat" doivent apprendre à évaluer, utiliser et configurer les matériels dans le do-
maine des bâtiments. Dans ce cadre, ils sont amenés à réfléchir sur la mise en place de solutions
techniques pour répondre à des besoins de développements de nouveaux services à la personne.
Limités dans un premier temps à la mise en place de solutions mono-technologie, pour des pro-
blèmes de compatibilité des produits en termes de communication, l’intégration de notre intergiciel
leur a permis de réfléchir à des solutions multi-fournisseurs, ouvrant ainsi le champ des possibles,
et permettant des réponses techniques plus précises aux problèmes. De la même manière, les étu-
diants du Master 2 "Domotique, Immotique et Réseaux Intérieurs" intègrent cet intergiciel dans
leurs réflexions sur de nouvelles solutions techniques pour le développement de nouveaux services
aux personnes et aux entreprises ; tels que des gestions techniques du bâtiment plus fines, des pro-
positions d’aide aux économies d’énergies pour les particuliers ou le développement de solutions
globales d’aide au maintien à domicile de personnes dépendantes.
6 Travaux connexes
6.1 Les intergiciels pour la domotique
Li et Zhang (2004) ont développé une passerelle de services domestiques, dont le but est de
permettre la communication entre des systèmes "dans la maison" et des systèmes "hors de la mai-
son", autorisant les utilisateurs à se connecter à leur passerelle à travers un portail centralisé "hors
de la maison". L’interface HTTP permet de contrôler les périphériques de la maison utilisant le
protocole LonWorks, grâce à la création, à la demande, d’un réseau privé virtuel entre la maison
et le serveur extérieur. La plateforme "dans la maison" est développée au dessus d’une passerelle
OSGi, et implémente des algorithmes offrant à la passerelle des capacitées Plug& Play. Bien que
des travaux futurs soient annoncés pour développer des profils UPnP, il semble que l’évolutivité de
la plateforme soit limitée. Comparé à cette solution, EnTiMid facilite l’interopérabilité des équi-
pements, et offre de grandes possibilités d’évolution grâce à sa couche d’abstraction, explicite et
accessible pour des traducteurs ad hoc.
Valtchev et Ivailo Frankov (2002) ont développé une passerelle de contrôle de "maison intelli-
gente". Cette passerelle offre une couche d’abstraction des protocoles utilisés pour communiquer
avec les équipements physiques. La solution proposée est construite pour s’intégrer et interagir
avec de multiples passerelles de services. Bien que les besoins de s’intégrer dans une telle architec-
ture dans l’avenir soient déjà identifiés, nous avons choisi de passer outre cette contrainte dans un
premier temps, et donc, cette solution devenait trop lourde. Par ailleurs, il n’était pas prévu d’offrir
de protocoles de plus haut niveau pour cette solution.
Dans la même lignée, SStreaMWare Gurgen et al. (2008), est un intergiciel qui adopte une
approche orientée-services. Les fonctionnalités de récupération des données auprès des capteurs
sont fournies en termes de services afin de cacher l’hétérogénéité de ceux-ci. Ces services implé-
mentent des modèles de données et de requêtes, qui permettent d’évaluer des requêtes complexes
sur les flux de données issues des capteurs. A l’image d’EnTiMid l’arrivée, le départ, la modifi-
cation des capteurs et des services sont pris en compte de manière dynamique dans SStreaMWare.
Les mécanismes de requêtes élaborés sur des données, disponibles dans SStreaMWare, ou sur les
événements d’une application, comme ce que l’on trouve dans Wildcat (David et Ledoux (2005)),
G. Nain et O. Barais et R. Fleurquin et J-M. Jézéquel
sont des éléments qui restent à intégrer dans EnTiMid afin de permettre une description simple de
scénarios de haut niveau.
Bottaro et al. ont développé une passerelle orientée services (André Bottaro et Gérodolle
(2008)) pour offrir des abstractions comme DPWS aux protocoles de communication des équi-
pements. Dans leur plateforme, chaque équipement doit s’enregistrer auprès du contexte OSGi
pour chaque protocole de haut niveau qu’il veut supporter. Par conséquent, chaque équipement
doit implémenter toutes les fonctions (interfaces) demandées par chaque protocole d’abstraction,
pour pouvoir s’enregistrer. Lors de l’exécution, les gestionnaires de protocoles de haut niveau ré-
cupèrent tous les équipements enregistrés comme étant compatibles avec leur technologie, et les
publient sur le réseau qu’ils gèrent. L’approche générative d’EnTiMid permet d’exporter native-
ment les équipements présents dans le système sans impact sur l’implémentation des différents
équipements.
Les travaux les plus proches d’EnTiMid sont sans doute les travaux de Didier Donsez (Don-
sez et al. (2007)) sur la définition d’une passerelle orientée multi protocoles pour contrôler les
équipements de la maison. Si les constats sont les mêmes, un certain nombre de choix diffèrent :
l’utilisation d’un intergiciel à base de messages, la possibilité de spécifier des traducteurs de haut
niveau, le support des protocoles IOBL et X2D sont autant de caractéristiques qui diffèrent entre
les travaux.
De cette étude des plateformes orientées domotique, il ressort que le problème de l’interopé-
rabilité est souvent pris en compte. L’utilisation d’OSGi permet d’imaginer, quand cela n’est pas
encore le cas, le support de la dynamique des services. Cependant, EnTiMid se différencie en pro-
posant une architecture en couches avec une explicitation du modèle d’abstraction et une approche
générative pour le support des protocoles de haut niveau. D’un point de vue du domaine, le support
d’X2D et d’IOBL est une caractéristique rarement offerte par les passerelles précédemment citées.
6.2 Interopérabilité entre protocoles ou entre intergiciels
La problématique levée par l’hétérogénéité des protocoles de communications entre équipe-
ments ou entre intergiciels a été explorée et a donné lieu à de nombreux résultats ces dernières
années.
PolyORB (Vergnaud et al. (2004)) constitue le premier intergiciel configurable, personnali-
sable et schizophrène. Un intergiciel schizophrène généralise le concept d’intergiciel en permettant
d’instancier simultanément plusieurs personnalités interagissantes. PolyORB tend donc à faciliter
la construction de passerelles dynamiques entre différents environnements de répartition. Poly-
ORB intègre une personnalité pour CORBA et SOAP. Fortement inspiré par ces travaux, EnTiMid
transpose cette approche pour la construction de la couche de communication avec les protocoles
comme SOAP, DPWS ou UPnP afin d’offrir plusieurs personnalités.
Parmi les travaux récents, la thèse de David Bromberg (Bromberg (2006)) vise à résoudre cette
problématique d’interopérabilité des protocoles. De manière identique à ce travail, nous avons
mis en place dans EnTiMid une architecture dynamique permettant d’adapter l’intergiciel de fa-
çon transparente aux nouveaux équipements présents. Sur la partie couche basse d’EnTiMid, nous
nous plaçons clairement dans une approche de substitution de protocole, à l’aide de bundles qui
assurent la traduction de notre représentation abstraite vers les protocoles des différents équipe-
ments. Comme dans cette thèse, la substitution de protocoles requiert l’implémentation de nou-
veaux bundles pour chaque nouveau protocole, afin que ceux déjà présents puissent s’adapter
dynamiquement aux équipements disponibles ou aux besoins des utilisateurs. La conception de
nouveaux intergiciels nécessitant de ré-implémenter en conséquence les clients/services existants,
signifie que l’interopérabilité est non transparente pour les couches basses. La partie couche haute
d’EnTiMid se différencie de ces travaux. Nous nous plaçons clairement dans un cadre de traduction
EnTiMid: le middleware de la maison
automatique de protocole, comme défini dans cette thèse, mais notre approche diffère par l’utili-
sation de l’Ingénierie Dirigée par les Modèles pour la traduction. L’IDM apporte des langages
pour spécifier cette traduction (transformation) et des outils pour générer les bundles de traduction
vers UPnP ou DPWS. L’utilisation de l’IDM pour construire des intergiciels adaptables à base de
composants a été proposée par Rouvoy et Merle (2004).
7 Conclusion
Cet article propose un retour d’expérience sur la construction d’un intergiciel pour les équipe-
ments domotiques, offrant les bases pour construire de nouvelles applications au dessus de cette
première couche d’abstraction des technologies de la maison. Il offre trois caractéristiques intéres-
santes :
Dynamicité La possibilité de modifier à l’exécution les paramètres du logiciel, de démarrer, d’ar-
rêter certains services, de bouleverser la configuration des périphériques, sans avoir la nécessité de
redémarrer le système est un très gros avantage. Ceci évite que le système ne réponde pas à un
ordre important (alarme incendie par exemple) à cause d’un redémarrage ; ou encore, cela facilite
son utilisation par des personnes non férues de technologies, qui trouvent une réalisation effective
de leurs actions sans manipulation supplémentaire. Il nous reste cependant à définir plus précisé-
ment les mécanismes de reconfiguration.
Évolutivité Du fait de sa conception, et de sa neutralité, EnTiMid se veut être une plateforme
évolutive, dans le sens où de nouvelles technologies, ainsi que de nouveaux protocoles de "haut
niveau", peuvent être développés sans avoir à modifier les développements précédents. Mieux en-
core, de nouveaux services non prévus au départ pourront être intégrés de façon aisée, simplement
en ajoutant les classes nécessaires au framework. Ainsi, sans toucher aux implémentations, il est
possible de créer de nouveaux services et de nouvelles interconnexions.
Multi personnalités Tant sur le plan des technologies que de la présentation des données, En-
TiMid propose diverses personnalités. Capable aujourd’hui de communiquer avec un nombre res-
treint de technologies (X2D, IOBL, X10, KNX, UPnP, DPWS, SOAP), il sera possible demain de
communiquer avec l’ensemble des technologies domotiques, dès que les développements seront
réalisés. Dans les perspectives de ces travaux, nous prévoyons d’intégrer des outils de description
de scénarios en intégrant des outils de monitoring avancés, comme la nouvelle version de wildcat
(David et Ledoux (2005)) qui offre une intégration d’ESPER 1 (un outil de gestion des évène-
ments), ou des descriptions à base de logique floue, fortement utilisée dans l’univers du contrôle
(Chauvel et al. (2008)). Le travail sur la sécurité, crucial dans ce domaine, est encore à explorer
en profondeur. D’un point de vue expérimentation, EnTiMid va être intégré dans un appartement
prototype. En effet, face au manque de place croissant en centres d’hébergement pour des per-
sonnes dont l’indépendance diminue (âgées ou handicapées), et face à leur volonté de rester à leur
domicile le plus longtemps possible, l’ASSAD du pays de Rennes a initié un projet de "Maintien
à domicile et habitat évolutif", avec le soutien du Conseil de développement de l’agglomération
Rennaise (CODESPAR). Après avoir identifié les besoins, un cahier des charges fonctionnel a été
livré. Pour répondre à ce cahier des charges, les solutions des différents constructeurs et partenaires
du projet ont été étudiées dans le but de définir un carnet de route. Comptant parmi les solutions
1http ://esper.codehaus.org/
G. Nain et O. Barais et R. Fleurquin et J-M. Jézéquel
retenues, EnTiMid sera prochainement intégré dans un appartement prototype en tant que point
d’accès privilégié de la maison, et outil d’interconnexion des réseaux domestiques.
Acknowledgments
The research leading to these results has received funding from the European Community’s Seventh Fra-
mework Programme FP7/2007-2013 under grant agreement 215483 (S-Cube). (http ://www.s-cube-network.eu).
Références
Alliance, T. O. (2007). Osgi service platform core specification, release 4.
André Bottaro, Eric Simon, S. S. et A. Gérodolle (2008). Dynamic web services on a home service platform.
In 22nd International Conference on Advanced Information Networking and Applications, pp. 378–385.
Bromberg, Y.-D. (2006). Résolution de l’hétérogénéité des intergiciels d’un environnement ubiquitaire. Ph.
D. thesis, Université de Versailles Saint Quentin en Yvelines, Versailles, (France).
Chauvel, F., O. Barais, N. Plouzeau, I. Borne, et J.-M. Jézéquel (2008). Expression qualitative de politiques
d’adaptation pour fractal. In Langage Modèles et Objets LMO’08, Montréal, Quebec.
David, P.-C. et T. Ledoux (2005). Wildcat : a generic framework for context-aware applications. In MPAC
’05 : Proceedings of the 3rd international workshop on Middleware for pervasive and ad-hoc computing,
New York, NY, USA, pp. 1–7. ACM.
Donsez, D., J. Bourcier, C. Escoffier, P. Lalanda, et A. Bottaro (2007). A multi-protocol service-oriented
platform for home control applications. Consumer Communications and Networking Conference, 2007.
CCNC 2007. 4th IEEE, 1174–1175.
Gurgen, L., C. Roncancio, C. Labbé, A. Bottaro, V. Olive, et D. Donsez (2008). Sstreamware : a service
oriented middleware for heterogeneous sensor data management. In ICPS ’08 : Proceedings of the 5th
international conference on Pervasive services, New York, NY, USA, pp. 121–130. ACM.
Jammes, F., A. Mensch, et H. Smit (2005). Service-oriented device communications using the devices pro-
file for web services. In MPAC ’05 : Proceedings of the 3rd international workshop on Middleware for
pervasive and ad-hoc computing, New York, NY, USA, pp. 1–8. ACM.
Li, X. et W. Zhang (2004). The design and implementation of home network system using osgi compliant
middleware. IEEE Transactions on Consumer Electronics 50.
Nain, G., E. Daubert, O. Barais, et J.-M. Jézéquel (2008). Using mde to build a schizophrenic middleware for
home/building automation. In P. Mähönen, K. Pohl, et T. Priol (Eds.), Towards a Service-Based Internet,
pp. 49–61. Springer.
OSGi. Osgi alliance. http ://www.osgi.org/About/HomePage.
Rouvoy, R. et P. Merle (2004). Towards a model-driven approach to build component-based adaptable midd-
leware. In ARM ’04 : Proceedings of the 3rd workshop on Adaptive and reflective middleware, New York,
NY, USA, pp. 195–200. ACM.
UPNP. The UPnP Forum. http ://www.upnp.org.
Valtchev, D. et P. S. A. Ivailo Frankov (2002). Service gateway architecture for a smart home. IEEE Commu-
nications Magazine 40, 126–132.
Vergnaud, T., J. Hugues, L. Pautet, et F. Kordon (2004). Polyorb : A schizophrenic middleware to build
versatile reliable distributed applications. LNCS 3063, 106–119.
EnTiMid: le middleware de la maison
Summary
One of the society challenges of tomorrow is the aging population. Often pointed as a possible solution for
this issue, house automation can help elderly people stay at home as long as possible, and ease the coordination
of the domain actors. In this context, this paper lists the requirements of such a system, showing that today’s
commercial solutions are not flexible enough to reach the necessary functional richness. According to these
requirements, a set of properties a middleware should offer in order to be deployed at a city scale is identified.
Then this paper describes the software architecture of a suitable middleware built over OSGi, respecting the
listed properties. After that, an experience report of the deployment of this middleware, in the laboratory of
the Université de Rennes 1 highlights the relevance of the proposed solution.
