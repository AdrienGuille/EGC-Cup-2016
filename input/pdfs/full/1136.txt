© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
38© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
39© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
40© Revue MODULAD, 2007 Numéro 36
EUROPEAN WORKSHOP ON DATA STREAM ANALYSIS • March, 14-16, 2007 • Caserta, Italy
41© Revue MODULAD, 2007 Numéro 36
1Mining Frequent 
Itemsets in a Stream
Toon Calders, TU/e
(joint work with Bart Goethals and 
Nele Dexters, UAntwerpen)
Outline
| Motivation
| Max-Frequency
| Algorithm 
z for one itemset
zmining all Frequent Itemsets
| Experiments
| Conclusion
2Motivation
| Model:
z Every timestamp an itemset arrives
| Goal:
z Find sets of items that frequently 
occur together
z Take into account history,
z Yet, recognize sudden bursts quickly
Motivation
| Most definitions of frequency rely 
heavily on the correct parameter 
settings
z Sliding window length
z Decay factor
z…
| Correct parameter setting is hard
z Can be different for different items 
(not to mention sets!)
3Outline
| Motivation
| Max-Frequency
| Algorithm 
z for one itemset
zmining all Frequent Itemsets
| Experiments
| Conclusion
4Therefore, a new frequency measure:
Frequency is measured in the window 
where it is maximal.
Itemset gets the benefit of the doubt …
Max-Frequency
mfreq(I, S) := max(freq(I, last(k, S)))
k=1..|S|
Example
mfreq( a, ac  abc ab ac  ab bc )
ac  bc ab ac  ab bc 0
ac  bc ab ac  ab bc 1/2
ac  bc ab ac  ab bc 2/3
ac  bc ab ac  ab bc 3/4
ac  bc ab ac  ab bc 3/5
ac  bc ab ac  ab bc 4/6
5Properties of Max-Freq
+ Detects sudden bursts
+ Takes into account the past
- When target itemset arrives: sudden
jump to a frequency of 1
+ Solution: minimal window length
6Outline
| Motivation
| Max-Frequency
| Algorithm
z for one itemset
zmining all Frequent Itemsets
| Experiments
| Conclusion
Algorithm
1. How to do it for one itemset?
2. How to do it for a frequent itemset?
3. How to do it for all frequent itemsets?
Maintain a summary of the stream that
allows to find the frequencies immediately.
7Properties (one itemset)
Checking all possible windows to find the
maximal one: infeasible 
BUT: not every point needs to be checked
↓
Only some special points = the borders
aa a a b b b a b b a b a b a b a b b b b|a a b a b b
138
27211timestamp
# targets
How to find a border?
ab ac bc ac bc abc  a b
| Target set  a
| Is the marked position a border?
8How to find a border?
ab ac bc ac bc abc  a b
| Target set  a
| Is the marked position a border?
2/3          1/3
How to find a border?
ab ac bc ac bc abc  a b
| Target set  a
| Is the marked position a border?
2/3          1/3
NO
9How to find a border?
ab ac bc ac bc abc  a b
| Target set  a
| Is the marked position a border?
2/3          1/3
NO > 2/3
How to find a border?
ab ac bc ac bc abc  a b
| Target set  a
| Is the marked position a border?
2/3          1/3
NO > 2/3
even bigger
10
How to find the borders?
a1
l1 l2
a2
p
If a1/l1 ≥ a2/l2, position p is never the border again!
Very powerful pruning criterion!
| This is true in general:
The summary
| Summary only keeps counts for the
borders.
ab ac bc ac bc abc  a b 1 6
3 2
11
The summary
| Summary only keeps counts for the
borders.
| Frequencies always increasing
z Thus: max-frequency in last cell
| Block with largest frequency before
border pi = always block from pi-1
ab ac bc ac bc abc  a b 1 6
3 2
Updating the Summary
ab ac bc ac bc abc  a b T
|When a new itemset arrives, the summary is
updated.
z borders need to be checked again
12
Updating the Summary
ab ac bc ac bc abc  a b T
|When a new itemset arrives, the summary is
updated.
z borders need to be checked again
z no new « before » - blocks
z only one new « after » - block
zmaximal block before: always previous border
Updating the Summary
ab ac bc ac bc abc  a b T
|When a new itemset arrives, the summary is
updated.
z borders need to be checked again
z no new « before » - blocks
z only one new « after » - block
zmaximal block before: always previous border
13
Updating the Summary
| The new position is a border if and
only if it contains the target itemset.
ab ac bc ac bc abc  a b 1 6
3 2
ab ac bc ac bc abc  a b 1 6
3 2
ab
b
9
1
5
Summary: the Summary
| Only keep entries for borders
| Get Max-frequency = access last cell only
| Update summary:
z if target: add new entry
z if non-target: check borders
• only one check required: still in ascending order?
• most recent border always drops first
• no need to check at every timestamp
14
Mining Frequent Itemsets
| Only interested in itemsets that are 
frequent.
|We can throw away any border with a 
frequency lower than the minimal 
frequency.
ab ac bc ac bc abc  a b 1 6
3 2
ab 9
1
minfeq = 2/3
Mining All Frequent Itemsets
| We only need to maintain the summaries for 
the frequent itemsets
| Can still be a lot, though …
z every subset of the most recent transaction 
…
z minimal window length reduces this problem
| FUTURE WORK: reduce this number; rely, 
e.g., on approximate counts
15
Outline
| Motivation
| Max-Frequency
| Algorithm 
z for one itemset
zmining all Frequent Itemsets
| Experiments
| Conclusion
Experiments
| Size of the summaries
z number of borders for random data
z average, maximal number of borders
in real-life data
| Theoretical worst case
16
Experiments
Twin Peaks distribution Uniform Distribution
17
Outline
| Motivation
| Max-Frequency
| Algorithm 
z for one itemset
zmining all Frequent Itemsets
| Experiments
| Conclusion
Conclusions
| New frequency measure
| Summary for one itemset
z small
z easy to maintain
z only few updates
| Mining all frequent itemsets
z only need summary for frequent
itemsets
18
