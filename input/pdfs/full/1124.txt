   
Méthode, Modèle et Outil Ardans  
de capitalisation des connaissances 
 
Pierre Mariot*, Christine Golbreich** ***, JPierre Cotton*, François Vexler*, Alain Berger* 
*Ardans, 2 rue Hélène Boucher, « Le Cristal » 78286 Guyancourt 
{pmariot, jpcotton, fvexler, aberger}@ardans.fr 
** Université de Versailles, 45 avenue des Etats-Unis - 78035 Versailles 
*** LIRMM UMR CNRS 5506, 161 rue Ada 34392 Montpellier Cedex 5  
Christine.Golbreich@uvsq.fr 
 
Résumé. La méthode de modélisation et l’outil Ardans ont pour vocation la 
capitalisation d’un patrimoine de savoir-faire, sa structuration, sa 
formalisation, sa diffusion, sa valorisation dans le travail quotidien des acteurs 
de l’organisation, ainsi que sa mise à jour et son évolution. Ils supportent ainsi 
tout son cycle de vie. Cet article présente les grands principes qui sous-tendent 
la méthode, les principales primitives de modélisation, l’outil Ardans et ses 
perspectives de connexion à OWL. 
1 Introduction 
La méthode de modélisation et l’outil Ardans ont pour vocation la capitalisation d’un 
patrimoine de savoir-faire, sa structuration, sa formalisation, sa diffusion, sa valorisation 
dans le travail quotidien des acteurs de l’organisation, ainsi que sa mise à jour et son 
évolution. Ils supportent ainsi tout son cycle de vie. Ardans est destiné d’une part aux 
ingénieurs de la connaissance pour « initier » ce patrimoine, puis aux utilisateurs pour 
l’exploiter. Ces travaux sont issus d’une pratique de plus de 20 années à la fois de réalisation 
de nombreux systèmes experts, d’actions de capitalisation des connaissances et de mise en 
place de serveurs de connaissances, essentiellement dans le monde industriel, et aussi dans le 
monde de la santé. L’outil Ardans a été conçu pour servir de support à la mémoire collective 
d’une organisation. L’expérience a conduit à différents choix fondamentaux pour atteindre 
cet objectif. En premier, les utilisateurs et leurs besoins sont au centre du processus.  
Ainsi Ardans ne s’intéresse pas à une mémoire globale et universelle d’un domaine en 
général, indépendamment de son usage par les utilisateurs ou de sa pertinence pour une 
application, mais adresse la mémoire collective d’une organisation autour d’un métier donné. 
L’entrepôt de connaissances est défini et organisé au travers du (des) métier(s) et des 
connaissances que partagent les utilisateurs du (des) métier(s). Ce point a été déterminant 
dans la définition des principes méthodologiques et des fonctionnalités de l’outil. 
Notamment, Ardans ne s’intéresse pas aux questions suivantes : 
Ardans ne vise pas à rendre facilement accessible un ensemble ouvert (non défini) de 
documents et d’informations portant sur des sujets variés. Ardans s’intéresse au contraire à 
un ensemble limité de documents, informations, propres au métier retenu et à son mode de 
fonctionnement. Les utilisateurs visés ont un métier et une culture commune. 
Ardans ne s’intéresse pas non plus à la création d’une dynamique collective 
indépendamment du sujet retenu, comme les « chat » internet qui peuvent aborder tous les 
Capitalisation des connaissances avec Ardans  
   
sujets. Dans Ardans, la dynamique collective est toujours adressée au travers du métier et de 
la culture commune et portée par la mise à plat de la mémoire commune. 
Ardans ne cherche pas à fournir une décision intelligente automatique à l’aide d’un 
système expert. Ardans s’intéresse par contre à la mise à disposition intelligente de 
l’information et/ou de la connaissance utile à la prise de décision en contexte. Ardans a un 
rôle de support de la mémoire, et c’est donc toujours l’utilisateur qui décide au final. 
L’objectif d’Ardans est de mettre à disposition et de faciliter à l’utilisateur l’accès à la bonne 
connaissance pour construire cette décision. 
Ardans n’est pas un forum, qui n’aborde que les points traités dans les questions des 
participants. Ardans est systématique dans sa couverture d’un domaine spécifique. Ardans 
peut toutefois incorporer des fonctions d’échange qui ressemblent à celles d’un forum, ou 
d’enrichissement qui ressemblent à celles d’un Wiki. 
La section 2 présente d’abord les grands principes qui sous-tendent la méthode Ardans. 
Puis la section 3 décrit les principales primitives de modélisation et l’outil Ardans.  
2 Principes sous-tendant la méthode Ardans  
Ardans repose sur un certain nombre de principes fondamentaux destinés à supporter la 
mémoire collective d’une organisation. Ces principes résultent de deux volontés principales : 
d’une part prendre en compte les besoins de l’utilisateur (§2.1) et d’autre part, répondre à 
certains besoins liés à la gestion et la structuration des connaissances (§ 2.2). 
2.1 Besoins utilisateurs 
Privilégier les connaissances, enjeu clé de la prise de décision  
La gestion du temps, est le nerf de la guerre pour les entreprises. De nouvelles méthodes 
pour augmenter la productivité et gagner du temps existent et sont efficaces. Aujourd’hui, la 
prise de décision n’est plus seulement une question d’accès aux données mais également 
d’accès aux connaissances pertinentes. Désormais, les serveurs d’informations ne suffisent 
plus. L’avancée fulgurante des technologies de l’information et communication, l’explosion 
des connaissances accessibles aux entreprises par le réseau (Intranet ou Web) placent le 
développement de serveurs de connaissances au premier plan. La denrée la plus chère pour 
un opérationnel est le temps. L’aide à la décision qui lui est fournie doit donc en faire gagner. 
Là où l’utilisateur aurait passé beaucoup de temps à rechercher les informations dont il a 
besoin pour décider, le système lui fournit les connaissances déjà connues dans ce contexte. 
Beaucoup de temps gaspillé à « réinventer » des solutions déjà connues ou des solutions dont 
on sait qu’elles ne fonctionnent pas est ainsi épargné. La perte de temps peut avoir de 
multiples origines :  
• temps passé à rechercher l’information, lire des sources multiples d’intérêt varié 
pour le problème à résoudre, puis temps passé à en faire la synthèse pour décider ; 
• temps passé à finaliser une solution déjà connue ; 
• temps passé à réinventer une solution déjà connue, ce temps de réinvention peut être 
très long si derrière il faut engager des développements pour finaliser l’invention ; 
• temps passé à réinventer une solution dont on sait déjà qu’elle ne fonctionne pas.  
P.  Mariot et al. 
. 
Il est donc important de fournir les solutions connues et leurs modalités de mise en 
œuvre. Toutefois, chaque nouveau cas est particulier.  
Présenter les solutions existantes avec leurs justifications  
L’utilisateur doit pouvoir comprendre ce qui lui est proposé. Le système ne peut se 
contenter de « donner » la solution. L’utilisateur n’a alors pas les moyens de remettre en 
cause le choix qui lui est imposé ni de comprendre pourquoi il lui est proposé, ni d’envisager 
des alternatives. C’est pourquoi, le système doit proposer les justifications associées aux 
choix qu’il propose. De même il doit illustrer ces choix par des retours d’expériences de mise 
en œuvre par d’autres. L’utilisateur peut ainsi s’approprier la solution qui lui est proposée. Il 
pourra, si besoin joindre les autres interlocuteurs qui ont déjà mis en œuvre la solution et 
donné leur retour d’expérience.  
Considérer la prise de décision dans une boucle d’apprentissage  
La prise de décision s’inscrit dans une boucle d’apprentissage. Nous apprenons en 
travaillant. L’être humain souhaite comprendre pourquoi il prend une décision. L’objectif de 
l’outil de mémoire collective est donc d’établir un dialogue entre l’utilisateur et le système. 
Le système fournit les informations et les connaissances qui sont pertinentes dans le contexte 
pour aider à prendre la décision. L’utilisateur choisit les connaissances qu’il va utiliser pour 
prendre la décision. L’utilisateur apprend tout en prenant sa décision grâce aux 
connaissances fournies par le système. 
Distinguer différents types de connaissances 
Pour décider, nous faisons appel à plusieurs catégories de connaissances (FIG. 1).  
• Les connaissances de référence : fournissant le savoir-faire et les solutions 
répertoriées et à appliquer.  
• Les connaissances issues de l’expérience : les « cas » rencontrés dans le passé. 
• Les connaissances externes utiles à l’innovation.  
Définir le contexte d’une décision  
Une décision se prend dans un contexte de travail lié à une activité particulière. Ce 
contexte est plus ou moins détaillé. Par exemple, s’il s’agit de conception, le contexte sera 
constitué : de l’activité de conception, du produit à concevoir, des fonctions concernées, des 
technologies à utiliser. S’il s’agit de diagnostic médical, le contexte comporte par exemple, 
des plaintes du patient, des résultats des examens complémentaires déjà effectués, des 
traitements en cours etc. Ce contexte définit les éléments de connaissances dont l’utilisateur 
a besoin pour décider, ce sont ceux qui prennent sens dans ce contexte. Ces contextes, sont à 
n dimensions. Ils croisent simultanément différents « points de vue » du domaine de 
l’utilisateur.  
Pour décider, l’utilisateur doit accéder aux trois catégories de connaissances qui sont 
pertinentes dans son contexte de travail. Par exemple dans le cadre d’une activité de 
conception de machine de dialyse (la dialyse permet l’épuration du sang par une machine 
pour les personnes atteintes d’une insuffisance rénale), où un ingénieur conçoit le module 
d’épuration du sang de la machine, le contexte de travail sera :  
• activité : développement 
• fonctions : assurer la dialyse 
Capitalisation des connaissances avec Ardans  
   
• technologies : mécanique des fluides 
• contrainte : coût 
FIG. 1 Différentes catégories de connaissances fournies en contexte 
L’utilisateur a alors un accès simple aux 3 types de connaissances valides dans ce 
contexte de travail : aux solutions de référence, aux retours d’expériences, à des sources 
diverses comme par exemple des solutions retenues par la concurrence (FIG. 1). 
Offrir un environnement conceptuel familier à l’utilisateur 
Les points de vue doivent impérativement correspondre aux pratiques métier habituelles 
des utilisateurs. C’est précisément parce que Ardans ne s’intéresse qu’à un domaine métier 
défini, qu’il est possible de définir ces points de vue en accord avec une pratique réelle.  
L’utilisateur peut instantanément et sans ambiguïté comprendre le sens des termes 
utilisés pour désigner ces points de vue. Ces points de vue sont élaborés selon deux 
principes :  
• ils sont construits avec les utilisateurs, de façon à garantir leur adéquation à la 
pratique métier ; 
P.  Mariot et al. 
. 
• ils sont pré-structurés à partir des méthodologies en vigueur dans le domaine métier 
concerné. Par exemple en médecine, ils seront basés sur les notions de signe 
clinique, d’examen complémentaire, de diagnostic, de traitement. En conception, ils 
seront basés sur les activités de conception, les produits, les fonctions, les 
technologies qui sont des éléments de structuration utilisés dans les méthodologies 
d’ingénierie. Toutefois, le dernier mot revient toujours aux utilisateurs, l’objectif 
étant d’avoir des points de vue en parfaite adéquation avec leur pratique métier 
réelle. 
2.2 Besoins liés à la gestion des connaissances 
L’unicité de la connaissance 
Dans les systèmes traditionnels, la connaissance est dupliquée autant de fois que 
d’usages de cette connaissance. Dans notre exemple, la solution type retenue pour le module 
d’épuration du sang, va apparaître dans:  
• le guide de conception, 
• le guide de maintenance, 
• les spécifications, 
• la documentation de mise en œuvre, 
• pour les performances de la solution, dans des fichiers Excel synthétisant 
l’ensemble des valeurs de performance, 
et ce pour toutes les versions de ces différents documents. 
Cette duplication est un obstacle majeur à l’accès à une connaissance à jour pour l’utilisateur. 
Il est en effet, en pratique, quasiment impossible, de maintenir à jour autant de versions de la 
même connaissance. Le principe Ardans qui en découle, consiste à rendre la connaissance 
unique mais exportable pour autant d’usages que nécessaire. Comme nous l’avons vu, les 
usages en terme d’accès selon le contexte de travail, sont déjà adressés par l’indexation 
multi-points de vue. Les usages sous forme de documents sont adressés par les fonctions 
Ardans d’export Word, Excel et XML des fiches connaissances. Ces fonctions sont les 
suivantes :  
• export d’un ensemble de fiches organisé dans un document Word ou dans un tableur 
Excel ; 
• maintien du lien entre le document Word et les fiches qui le constituent de façon à 
ce qu’à la modification d’une de ces fiches se répercute dans le ou les documents 
Word qui l’utilisent ; 
• export XML pour l’usage par d’autres applications ; 
• accès au contenu depuis d’autres applications par des requêtes sous forme d’URLs. 
Ainsi les documents à produire dans un projet ne sont plus des documents autonomes mais 
des vues sur le contenu de la base de connaissances.  
L’utilisateur a ainsi la garantie d’avoir accès à la dernière information mise à jour et valide. 
L’évolutivité des structures 
Par structures des connaissances, nous entendons les Points de vues et les types de 
connaissances avec leurs Modèles et leurs Rubriques. 
Capitalisation des connaissances avec Ardans  
   
Deux sources d’évolution majeures sont présentes pour toute réalisation de base de 
connaissances.  
La première source d’évolution, lors de la constitution de la base de connaissance, 
l’évolution est liée à l’inévitable adaptation progressive de la structure de description des 
connaissances à la réalité des connaissances effectivement utilisées par les acteurs 
opérationnels. 
Dans beaucoup de domaines, les experts n’ont pas la capacité de définir clairement les 
connaissances qu’ils utilisent pour travailler. Il est possible de proposer une première 
cartographie sous forme des Points de vue et de Modèles, mais l’expérience montre que cette 
cartographie va évoluer lorsque l’on va effectivement formaliser le savoir-faire lié au 
domaine métier ciblé. Des points de vue non envisagés seront à créer. Dans notre exemple, la 
base a été initialisée sans point de vue sur les procédés de fabrication du module. Or le 
travail avec les experts du domaine, va peut être montrer que le procédé de fabrication a une 
influence majeure sur tous les choix de conception. Il faudra alors ajouter ce point de vue. 
Inversement, un point de vue retenu au départ peut s’avérer inutile, voire perturbant 
ultérieurement. Par exemple, le point de vue Fonctions, peut n’avoir dans la réalité aucun 
intérêt parce que dans les faits, les fonctions du module d’épuration sont toujours les mêmes 
et que les utilisateurs n’utilisent jamais ce mode de raisonnement pour la conception.  
La seconde évolution va porter sur les Modèles associés aux types de connaissances. De 
nouveaux sont souvent à créer. Dans notre exemple, où le procédé de fabrication du module 
apparaît secondairement comme important, l’ingénieur de la connaissance sera amené à créer 
un Modèle « Procédé de fabrication » qui décrit les différents procédés de fabrications 
utilisables avec leurs caractéristiques. A l’inverse, certains Modèles envisagés peuvent 
s’avérer inutiles. L’évolution peut porter sur les Rubriques associées à un Modèle. Par 
exemple, dans le Modèle « Description de solution », le travail sur la connaissance peut 
montrer, qu’il faut ajouter une rubrique « exemples de mise en œuvre de la solution », ou une 
rubrique « paramètres influents sur la solution ». Enfin L’évolution peut concerner la fusion 
de plusieurs Modèles en un seul. Par exemple, prendre conscience secondairement que 
l’utilisation de 6 Modèles différents pour décrire le type de connaissance « Source » est trop 
complexe pour l’utilisateur et décider de n’en faire plus qu’un seul appelé « Source 
externe ».  
Ces évolutions sont systématiques dans la phase de construction de la base de 
connaissances. Une fois mise en opération, les évolutions sont plus rares mais existent 
toujours pour tenir compte de l’évolution des besoins des utilisateurs et de l’évolution du 
métier. Pour tenir compte de ce besoin d’évolution, Ardans permet de réaliser ces évolutions 
de structure à tout utilisateur qui en a les droits. Ces évolutions affectent les connaissances 
existantes tout en les conservant. Un point de vue peut changer d’étiquette ou être déplacé, 
les fiches qui y sont accrochées le restent. L’ajout d’une rubrique à un Modèle affecte toutes 
les fiches déjà créées avec ce Modèle. Le changement de nom ou le changement de place 
d’une Rubrique conserve les valeurs qui lui sont associées dans les fiches existantes.  
Unicité du Modèle pour une nature de connaissance donnée 
L’utilisateur en ouvrant une fiche de nature « Description de solution » par exemple, 
doit savoir à l’avance quelle nature d’information il va y trouver et comment elle est 
P.  Mariot et al. 
. 
organisée. La « Description de solution » doit se décrire toujours de la même façon pour le 
métier ciblé. Il en est de même de tous les Modèles.  
Ce principe permet aux utilisateurs de partager progressivement une même 
représentation de leur métier. Ils apprennent aussi par l’exemple à pouvoir eux-mêmes 
rédiger de façon pertinente des fiches selon le modèle retenu.  
C’est pourquoi les fonctions d’évolution des Modèles dont nous avons parlé affectent toutes 
les fiches existantes, de façon à garder une présentation unique d’une nature de connaissance 
donnée.  
En conséquence, Ardans a choisi de séparer deux sortes d’entités qui vont cohabiter :  
• les points de vue qui permettent de décrire le contexte de travail de l’utilisateur.  
• les connaissances, organisées en trois catégories, qui transmettent le savoir-faire 
existant en contexte.  
Ce choix diffère de beaucoup de systèmes qui construisent automatiquement les points de 
vue d’accès ou les mots-clés d’accès à partir du contenu. Ardans n’a pas retenu cette option 
pour privilégier une représentation des points de vues qui soit : (1) complète, décrivant la 
totalité du métier ciblé, (2) adaptée à la pratique réelle des utilisateurs (3) construite avec 
eux, (4) facilement modifiable et évolutive, pour suivre les modifications en phase 
d’élaboration, puis s’adapter facilement aux inéluctables évolutions du métier ciblé, (5) 
rapide à réaliser pour rendre aux utilisateurs une image du futur système rapidement. 
3 Modèle conceptuel et outil Ardans 
Ces principes ont déterminé les principales primitives du modèle conceptuel des 
connaissances et de l’outil Ardans. Les notions de base du modèle conceptuel des 
connaissances de Ardans sont les concepts de « Vue », et de « Modèle de Fiche ».  
3.1 Points de vue  
Les points de vue sont organisés en une hiérarchie. Les vues servent à indexer et 
rechercher les connaissances qui sont décrites par des fiches. Les vues sont structurées en 
arborescences qui traduisent autant de points de vue possibles sur les connaissances. Les 
vues sont organisées en termes d’Activité, Objet, Moyen, Projet. 
3.2 Connaissances  
Dans Ardans, les connaissances sont organisées en une hiérarchie de fiches. Trois 
catégories de fiches sont distinguées selon la nature des connaissances qu’elles contiennent : 
Source Externe, Expérience, Référence ou Connaissance 
consolidée. Chaque catégorie regroupe un ensemble de classes de fiches appelées 
« Modèles de fiches ou Modèles ». Chaque Modèle est caractérisé par une liste de rubriques 
(propriétés) propres. Le modèle conceptuel des connaissances Ardans comprend ainsi une 
hiérarchie principale dont la racine est le concept Fiche, qui représente toutes les 
connaissances, organisées en termes de Source Externe, Expérience, 
Références. Chaque Modèle propose des rubriques prédéfinies a priori, mais qui sont 
parfaitement re-configurables et adaptables aux besoins de l’application. 
Capitalisation des connaissances avec Ardans  
   
3.2.1 Catégories de connaissances 
Catégorie Source Externe : ce sont les connaissances externes utiles à l’innovation. 
Lorsque ni connaissance de référence, ni expérience ne sont disponibles, la recherche dans de 
multiples sources va inspirer l’élaboration de la solution. Il est alors intéressant de garder la 
trace des sources à l’origine de la solution retenue. Différents Modèles de fiches sont 
utilisables pour décrire des Sources externes, par exemple les modèles et fiches présentés ci-
dessous: Réglementation, Solution concurrente, Contact, etc. : 
Le modèle Réglementation comporte les rubriques:  
 Référence : Référence, Intitulé 
 Thème d’intérêt : description des principaux thèmes de cette 
réglementation d’intérêt pour l’organisation  
 Où la trouver : lien pour la télécharger ou lieu de 
stockage 
 
FIG. 2 : Exemple de fiche selon le Modèle : Réglementation 
Le modèle Solution concurrente comporte usuellement les rubriques :  
 Titre : indique le thème abordé 
 Contexte : rappel le contexte de recherche de cette information 
 Description de la solution : décrit la (les) solution concurrente 
P.  Mariot et al. 
. 
 Pourquoi le concurrent utilise cette solution : 
justification du choix du concurrent 
 Commentaires : autres notes de l’auteur 
Le modèle Contact comporte les rubriques:  
 Nom – Organisation – Compétence principale 
 Coordonnées : coordonnées de l’organisation 
 Compétences : description des compétences 
 Historique : historique des relations avec l’organisation 
 
FIG. 3 Exemple de fiche selon le Modèle : Expérience 
Catégorie Expérience : ces fiches correspondent aux « retours d’expérience »  
Le modèle Expérience comporte usuellement les rubriques :   
 Nom du projet – Thème: nom du projet, thème principal du retour 
d’expérience 
 Contexte : phase du projet, fonction concernée, organe concerné, … 
 Description : description du problème rencontré 
 Cause : analyse du problème 
 Solutions mises en œuvre : mesures prises lors du projet 
 Recommandations : recommandations pour l’avenir 
 
Capitalisation des connaissances avec Ardans  
   
Catégorie Référence : ces fiches correspondent aux connaissances de « référence » 
applicables dans l’organisation. Elles correspondent schématiquement aux bonnes pratiques.  
Le modèle Solution comporte usuellement les rubriques :  
 Intitulé du choix : nomme de façon non ambiguë l’organe ou la fonction 
concerné 
 Source : indique d’où provient l’information de façon à accroître sa fiabilité dans 
l’esprit du lecteur 
 Contexte du choix de la solution : rappel du contexte dans lequel a 
été conçue cette solution 
 Besoins et exigences auxquels répond la solution : cahier 
des charges de la solution 
 Description de la solution : la solution avec ses valeurs et ses 
caractéristiques 
 Justifications des choix : indique les essais, les documents qui 
justifient les choix faits 
 Alternatives envisagées et raisons d'abandon : très 
importantes pour éviter de les explorer à nouveau inutilement 
 Pistes pour l'avenir : afin de ne pas oublier les idées d’amélioration 
 Impacts : incité à ne pas oublier de prendre en compte les impacts d’une 
amélioration sur les délais, les coûts, la fiabilité. 
 
FIG. 4 : Exemple de fiche selon le Modèle : Description de solution 
P.  Mariot et al. 
. 
Il est souvent nécessaire de faire appel à d’autres modèles de fiches pour décrire la 
connaissance de référence. Les modèles les plus fréquemment utilisés sont les modèles:  
 Procédure : procédure qui décrit la séquence des étapes à suivre pour réaliser une 
tâche 
 Règle métier : règles qui décrivent les prescriptions à respecter dans le métier 
 Diagnostic type : qui décrivent pour chaque organe avec le défaut qui le 
touche, les symptômes types, les examens à réaliser, les traitements à prescrire.  
3.2.2 Modèles de Fiche  
Les connaissances du domaine cible sont représentées à l’aide de classes de fiches plus 
spécifiques ou Modèle de Fiche spécialisant les catégories générales Source 
Externe, Expérience, Référence. Par exemple le modèle Description de 
Solution est une spécialisation de Référence. Un Modèle est caractérisé par une liste de 
rubriques propres à la classe de fiches. Il rassemble toutes les fiches de la classe. Par 
exemple, le modèle Description de Solution liste toutes les Solutions utilisables 
pour la conception d’une nouvelle machine.  
 
FIG. 5 – Modèle de Fiche Description de Solution 
Capitalisation des connaissances avec Ardans  
   
3.2.3 Fiches  
Les connaissances du domaine cible sont décrites par des fiches en utilisant le modèle de 
fiche approprié. Chaque Fiche est « accrochée » aux Points de vues qui la concerne.  
Dans l’exemple (Fig. 6) la fiche de type Description de Solution « Caractéristiques de la 
motorisation de la pompe » est accrochée aux Point de vue respectifs ci-dessous comme suit: 
 Activités : à l’activité Recherche et à l’activité Développement, 
 Fonctions : aux 2 fonctions Assurer la dialyse, Mettre en route la dialyse, 
 Technologie : à la technologie : Mécanique et Mécanique des fluides, 
 Exigences : à l’exigence Coût. 
L’utilisateur retrouvera ainsi cette fiche dans différents contextes de travail. Dans chacun 
de ces contextes de travail, Ardans lui propose toutes les fiches de « Référence », 
d’« Expérience », « Sources ». Il accède aux fiches dont il a besoin : des fiches « Référence » 
pour retrouver une connaissance fiable et applicable, des fiches « Expérience » pour 
s’inspirer de solutions mises en œuvres par d’autres, des fiches « Sources » pour concevoir 
de nouvelles solutions. 
 
 
FIG. 6 : Accrochage aux Points de vues de la fiche : « Caractéristiques de la 
motorisation de la pompe » 
P.  Mariot et al. 
. 
4 Comparaison et évaluation 
A notre connaissance, il n’existe pas d’autres outils plaçant les éléments de 
connaissances, leur structuration, utilisation, évolution de contenu et structure, au cœur d’un 
système d’information. Ces caractéristiques sont issues d’une expérience approfondie de la 
pratique de l’ingénierie des connaissances en entreprise. Les autres outils de gestion des 
connaissances ont d’autres origines et donc d’autres caractéristiques, notamment : 
Les outils de Gestion Electronique de Documents, e.g.; LiveLink de Opentext, gèrent des 
documents via des fiches bibliographiques. La recherche repose sur un moteur de recherche 
complétée par des catégorisations multi-points de vue. Dans ces outils, la connaissance est 
décrite dans les documents et non dans les fiches qui ne servent qu’à les référencer. Les 
points de vues sont utilisés comme un moyen de recherche, mais pas comme une « Vue » 
structurante du métier et des connaissances de l’entreprise. 
Les outils d’aide à la Veille ou à l’Intelligence économique, e.g.; Exalead Corporate de 
Exalead, sont centrés sur les fonctions d’acquisition et de traitement automatique 
d’informations de sources multiples. Ils sont peu adaptés à la gestion du savoir-faire métier 
de l’entreprise. 
Les outils dédiés à un type de métier, e.g ;  Catia V5 de Dassault System, incorporent 
parfois des fonctions de gestion des connaissances. Ce sont par exemple, certains outils de 
Conception Assistée par Ordinateur, des outils de Gestion de la Relation Client (CRM), des 
outils de support de la relation téléphonique (Help Desk). Dans ces outils, les types de 
connaissances, leur structure et leur utilisation sont figés dans les fonctionnalités de l’outil 
comme le sont les autres fonctionnalités métier.  
Les générateurs de systèmes experts ou systèmes permettant de raisonner sur un domaine 
sont bien adaptés à la modélisation fine des connaissances d’un domaine et à leurs relations 
en vue d’automatiser le raisonnement. Ils sont peu adaptés à la représentation d’un savoir-
faire semi-structuré en vue de son transfert, partage et utilisation par des humains en contexte 
de travail. 
 
La méthode présentée ici s’inspire des descriptions d’Activités SADT mais en l'étendant 
par la définition d’une typologie des connaissances liées aux Activités. Toutefois, l’outil est 
au départ vide et n’impose pas l’utilisation de cette représentation. L’utilisateur peut mettre 
en œuvre la méthode de son choix. La méthode de travail que le client mettra en œuvre 
réellement dans son entreprise (Modèles de connaissances, Points de vue, Cycle de vie de ces 
connaissances) n’est pas considérée comme fixée a priori et figée mais est construite 
incrémentalement en interaction avec les utilisateurs et évolutive. 
 
A ce jour la méthode et l’outil Ardans n’ont pas été évalués selon les pratiques d’une 
évaluation scientifique classique et systématique. A ce stade de son développement, comme 
pour toutes les petites entreprises, Ardans évalue la pertinence de l’approche proposée par 
ses "success story" et la confiance que lui témoignent ses clients, confiance se traduisant 
pour Ardans par des contrats qui lui permettant de se développer et d'évoluer. 
 
Voici certaines réalisations de Ardans pour de grandes entreprises de l’industrie (Berger 
et al., 2006), (Coppens et al. 2006), (SisQual 2006) : 
 
Capitalisation des connaissances avec Ardans  
   
Chez un constructeur automobile, la direction de définition de la logistique a pour 
mission d’étudier et mettre en œuvre l’ensemble des moyens logistiques du flux véhicules et 
du flux constituants des usines terminales. La solution mise en place a permis de refondre le 
référentiel existant constitué de documents stockés dans l’intranet, de capitaliser de nouvelles 
connaissances liées à des départs en retraite d’experts, d’intégrer dans le système 
d’information l’ensemble du patrimoine de connaissances avec l’outil Ardans, de définir et 
mettre en place la nouvelle organisation afin d’obtenir l’adhésion des personnels. 
Chez un industriel important du domaine de la santé, la filiale en charge des machines a 
pour mission la R&D, la conception et la production de ces instruments. La solution mise en 
place a permis d’ancrer une nouvelle pratique au quotidien visant à faire émerger un métier, 
organisé, structuré et maîtrisé au travers d’une mémoire collective partagée. Après une 
première réalisation sur un domaine pilote, la base de connaissances a été étendue 
progressivement sur les différentes gammes de machines, l’organisation du patrimoine de 
connaissances a été confortée. Les missions des acteurs ont été complétées pour assurer une 
intégration aux projets de la vie de la base de connaissances. 
 
Et dans le domaine de la santé (Mariot et al., 2006), (Mehrenberger et al., 2006) : 
 
Dans un organisme de santé s’occupant de la prise en charge, de l’éducation, du suivi de 
patients en dialyse chronique, suite à la première visite d’accréditation sans réserves ni 
recommandations, les enjeux pour la direction sont : la continuité de la démarche de 
certification (accréditation) définie par la Haute Autorité de Santé conformément à la loi du 
24 avril 1996 et plus particulièrement sur l’Évaluation des Pratiques Professionnelles (EPP), 
de rendre la démarche accessible à tous les professionnels de l’établissement. Le projet a 
permis de capitaliser le savoir-faire métier pour diffuser les bonnes pratiques et ne pas 
réitérer les erreurs du passé, d’intégrer l’utilisation et la mise à jour de ce capital de 
connaissances à la vie opérationnelle quotidienne, de faire vivre ce capital avec les 
événements (fiches d’améliorations) et les retours d’expériences. Une Approche du 
diagnostic anatomoclinique des glomérulopathies a été également proposée (Mehrenberger et 
al., 2006). 
5 Perspectives  
La perspective actuelle d'Ardans est de proposer une suite logicielle utilisant la 
méthodologie et l’environnement d’ingénierie des connaissances Ardans pour la phase amont 
de recueil d’un patrimoine de savoir-faire et sa spécification sous forme d’un modèle semi-
structuré, puis le langage standard d’ontologie OWL pour sa représentation formelle. 
L’objectif visé est de bénéficier à la fois des atouts de Ardans pour l’acquisition et le recueil 
des connaissances, et de l’interopérabilité ainsi que des services de raisonnement puissants 
associés à OWL. 
Le passage du modèle semi-structuré d'une base de connaissances spécifié en Ardans vers 
une représentation en OWL a plusieurs motivations. Ardans est bien adapté pour constituer 
et faire évoluer facilement une base de connaissances d'un domaine. OWL est bien adapté 
pour l'utilisation de cette base pour raisonner, pour assurer la consistance de la base de 
connaissances notamment au cours de ses évolutions, pour justifier un outil de travail et de 
décision, pour des recherches de type Web Sémantique, pour l'intégration de la base avec des 
P.  Mariot et al. 
. 
bases de données, ou d'autres bases de connaissances et outils existants de l'entreprise. A 
l’inverse, il pourrait être intéressant d'utiliser l’outil Ardans pour capitaliser, justifier et gérer 
les connaissances semi-structurées associées à une base de connaissances OWL déjà 
constituée. 
5.1 OWL 
OWL (Ontology Web Language) est un langage d’ontologie basé sur les logiques de 
description. Les logiques de description (DL) sont une famille de formalismes de 
représentation des connaissances reposant sur la logique. Issues des Réseaux Sémantiques et 
des Frames, en particulier de KL-ONE (Brachman, 1985), elles décrivent un domaine selon 
le paradigme objet en terme d’individus, de concepts et de rôles. Ce qui les différentie 
principalement de leurs précurseurs est leur sémantique formelle (théorie des modèles) et 
d’être des fragments décidables de la logique du premier ordre. De ce fait, elles offrent des 
services d’inférence puissants. Des procédures de décision sont connues pour les problèmes 
clé d’inférence (satisfiabilité et subsomption) et des systèmes implémentés hautement 
optimisés sont disponibles.  
Le groupe de travail WebOnt du W3C a développé le langage OWL, dédié à la 
modélisation d’ontologies – conceptualisation d’un domaine partagé par une communauté 
d’utilisateurs. Le but était de dépasser la simple “présentation” d’informations sur le Web et 
les limites d’expressivité des propositions initiales RDF et RDF Schema, pour aller vers 
l’interopérabilité, la sémantique et le raisonnement sur ces informations. Successeur de OIL 
et DAML+OIL, OWL est aujourd’hui une recommandation du W3C, c’est à dire un 
standard, pour la représentation des ontologies. OWL doit ses primitives de modélisation 
intuitives aux frames, sa syntaxe à XML et RDF, sa sémantique formelle et ses mécanismes 
de raisonnement aux logiques de description. D’un point de vue formel OWL est basé sur la 
logique de description expressive SHOIN étendue de types de données, dont il offre une 
syntaxe “Web-conviviale” (Horrocks et al., 2003). Exploitant les résultats de plus de 15 ans 
de recherche sur les DL, OWL a une sémantique bien définie (à partir de la théorie des 
modèles), des propriétés formelles bien comprises (complexité, décidabilité), des algorithmes 
de raisonnement connus; et des raisonneurs implémentés hautement optimisés. OWL fournit 
trois sous-langages d’expressivité croissante : OWL Lite, OWL DL et OWL Full. OWL Lite 
est le moins expressif, (en particulier n’offre ni la disjonction ni la négation). Plus expressif, 
les constructeurs de OWL DL ont été choisis de façon à garantir la complétude et la 
décidabilité (au détriment d’une complexité supérieure). Ainsi pour OWL DL les principales 
tâches sont décidables, en particulier la satisfiabilité (est-ce qu’il existe des instances de C?); 
la vérification d’instances (est-ce que a est une instance de C?), la subsomption (est-ce que C 
est plus général que D?). OWL Full est le langage le plus général, n’imposant aucune 
restriction sur le vocabulaire (par exemple un même terme peut à la fois désigner une classe 
et une instance), ce qui le rend complètement compatible à RDF. Mais OWL Full est 
indécidable, et à notre connaissance, il n’existe pas à ce jour d’implémentation complète de 
OWL Full.  
Les notions de base de OWL (issues des logiques de description) sont les notions de  
Concepts (classes) : prédicats unaires ou formules à une variable libre. Un concept C peut-
être atomique e.g.; Personne, Mecanique, Dialyse, ou une expression anonyme 
construite en utilisant les constructeurs autorisés (FIG. 7) e.g.; Docteur unionsq  Infirmier, ou 
Capitalisation des connaissances avec Ardans  
   
le concept suivant qui représente les personnes dont les enfants sont Docteurs ou ont un 
enfant qui est un Docteur: Person   ∀aEnfant . (Docteur unionsq ∃aEnfant.Docteur). 
• Roles (relations) : prédicats binaires ou formules à deux variables libres e.g. ; 
aEnfant, epouxDe , aFrere ◦ aFille 
• Individus : constantes, e.g., Jean, Marie, Italie, MaVoiture 
• Constructeurs : opérateurs permettant de construire des concepts et des rôles.  
 
 
 
 
 
 
 
FIG. 7 : Constructeurs OWL de classes (gauche) et axiomes (droite) 
Une classe est dite ‘définie’ (notée par le mot clé ‘complete’ dans la syntaxe abstraite) si 
elle est décrite par des conditions nécessaires et suffisantes d’appartenance à la classe par 
exemple la classe ParentHeureux ≡ Personne  ∀ aEnfant.(Docteur unionsq 
∃aEnfant.Docteur) est une classe définie. Les classes pour lesquelles il n’y a que des 
conditions nécessaires sont dites ‘primitive’ (notée par le mot clé “partial”).  
La sémantique formelle est définie à partir de la théorie des modèles standard de la 
logique du premier ordre en terme d’une  interpretation  I = (∆I .I). ∆I est un ensemble non 
vide, dit le domaine d’interpretation. La fonction I fonction d’interpretation, fait 
correspondre à un individu un élément de ∆I, à un concept un sous-ensemble de ∆I, à un rôle 
un sous-ensemble de ∆I * ∆I.  La relation de subsomption correspond à l’inclusion 
d’ensembles : C est une sous-classe de D est interprété par CI  ⊆  DI.  
Une base de connaissances OWL est constituée d’une TBox et d’une ABox. La TBox est 
un ensemble d’axiomes (formules vraies) e.g.; {Docteur  Personne, ParentHeureux 
≡ Personne  ∀ aEnfant.(Docteur unionsq  ∃ aEnfant.Docteur). La ABox est un 
ensemble de données ou ‘faits’, e.g.; {Jean: ParentHeureux, Jean aEnfant Marie}. 
 
La standardisation de OWL s’est accompagnée du déploiement (ou de l’adaptation) de 
nombreux outils, à la fois d’éditeurs comme Protégé1 ou SWOOP2 mais surtout de 
raisonneurs puissants comme Racer, Fact++, Pellet3. Ces moteurs permettent de classer 
automatiquement les concepts d’une ontologie, et donc de construire dynamiquement la 
hiérarchie de concepts d’un domaine inférée à partir des axiomes portant sur ces concepts et 
leurs relations4, ainsi que de détecter automatiquement les incohérences de l’ontologie.  
                                               
1
 http://protege.stanford.edu 
2
 http://www.mindswap.org/2004/SWOOP/ 
3
 Une liste plus complète est disponible à http://www.cs.man.ac.uk/~sattler/reasoners.html 
4
 le raisonneur ne peut classer des classes que sous des classes définies (sauf exception liée au 
domaine d’une propriété)  
 
 
P.  Mariot et al. 
. 
 
Depuis sa standardisation en 2004 OWL a été appliqué avec succès pour de nombreuses 
applications de domaines variés. Cette pratique a révélé le besoin de certaines évolutions 
d’expressivité, de syntaxe ainsi que d’extensions du langage. Une révision de OWL est en 
cours. A l’occasion de OWLED 2007 une nouvelle spécification nommée OWL1.1 a été 
acceptée comme W3C soumission5. OWL1.1 apporte une plus grande expressivité, 
permettant notamment d'exprimer des restrictions de cardinalités qualifiées et des 
enchaînements de rôle, des types de données plus riches, une certaine forme de 
métamodélisation, des annotations non seulement des entités mais aussi des axiomes, ainsi 
que la possibilité de déclarations. OWL1.1 définit aussi un métamodèle de OWL spécifié en 
UML, et introduit des changements importants de syntaxe (Cuenca Grau et al., 2006). A 
l’heure actuelle OWL1.1 est en train d’évoluer vers un nouveau standard du W3C appelé 
OWL 2. Un certain nombre de sujets sont ouverts et en cours d’élaboration dans le cadre du 
nouveau OWL W3C Working Group6 crée ainsi que de task forces7 soit théoriques soit plutôt  
dédiées aux utilisateurs (User Requirements task force http://code.google.com/p/owl1-
1/wiki/UserRequirements)  auxquelles il est possible de participer pour guider le travail futur 
de standardisation.  
 
5.2 De Ardans à OWL 
La correspondance entre les concepts et les structures de données Ardans et celles de 
OWL n'est pas triviale, et soulève encore de nombreuses questions, en raison à la fois de 
l'approche "non standard" et de certaines points du modèle Ardans qui restent à préciser et 
des changements récents liés à OWL1.1, encore en cours de discussion. Au stade actuel, 
seules différentes hypothèses peuvent être évoquées et une étude plus approfondie est 
nécessaire pour définir une correspondance rigoureuse de Ardans vers OWL.  
La vocation usuelle d'une ontologie OWL est l'indexation et la recherche conceptuelle de 
documents (Web) à partir de metadonnées. L'ontologie fournit habituellement le vocabulaire 
(concepts et propriétés) servant à décrire le contenu des documents sur un domaine par des 
metadonnées, généralement en termes d'instances et à utiliser pour les requêtes (Golbreich, 
2006). Dans notre cas la situation est un peu plus compliquée parce que la modélisation avec 
Ardans combine différents types et niveaux de connaissances: classes, instances, 
métadonnées, métaconnaissances, documents décrivant les connaissances sous forme de 
texte libre et les choix de correspondance en OWL ne sont pas toujours évidents. 
Ainsi, on pourrait par exemple, dans une première hypothèse, considérer que les Modèles 
de fiches correspondent a priori à des classes OWL organisées en une hiérarchie de modèles, 
que leurs rubriques correspondraient à des propriétés OWL (owl:DataTypeProperty ou owl: 
ObjectProperty), et les différentes fiches d'un modèle à des instances de ces classes. Par 
exemple la fiche FIG. 2 pourrait être vue comme une instance d'une classe OWL 
Réglementation qui aurait été définie avec certaines restrictions sur les propriétés 
Référence, Thème d’intérêt, Où la trouver. La nature de ces restrictions  
                                                                                                                         
 
5
 http://www.w3.org/2007/06/OWLCharter 
6
 http://www.w3.org/2007/OWL/wiki/OWL_Working_Group  
7
 http://webont.org/owled/taskforces/ 
Capitalisation des connaissances avec Ardans  
   
par exemple existentielles, universelles etc.), de même que le type des axiomes (conditions 
nécessaires ou nécessaires et suffisantes) nécessitent d'être éclaircies.  
Dans une autre approche, on pourrait préférer considérer qu'un Modèle de Fiche, e.g.; 
Description de solutions (FIG. 5) correspondrait plutôt à une metaclasse 
spécifiant des classes de fiches toutes d'un même type et non des fiches individuelles. Par 
exemple, le Modèle de fiche Description de solutions (FIG. 5) serait représenté 
par une métaclasse OWL spécifiant les informations propres à chaque classe et les rubriques 
communes de toutes les classes de la famille Description de solution c'est-à-dire 
pour des classes telles que celle présentée FIG. 4 (ou les classes Réglementation FIG. 2 
et Expérience FIG. 3), les instances de cette classe étant les individus particuliers 
instanciant cette solution. 
De même les Catégories de connaissances, Source Externe, Expérience, 
Référence, pourraient être représentées par des classes et sous-classe OWL ou des 
métaclasses et spécialisations de ces métaclasses. 
Enfin chaque Fiche est ‘accrochée’ aux Points de vues qui la concernent. Les Vues 
servant à indexer et rechercher les connaissances correspondraient a priori à une autre 
ontologie de classes OWL. La façon de représenter l'accrochage des fiches aux vues est 
également une question ouverte. Différentes possibilités pourront être étudiées : l'utilisation 
de restrictions ou d'annotations OWL. L'apport d'une certaine forme de métamodélisation 
avec OWL1.1 pourrait être une piste intéressante qui permettrait de représenter l'accrochage 
de vues aux  fiches à l'aide d'annotations OWL associant aux fiches des métadonnées (les 
classes représentant les vues), et la recherche par des requêtes sur les metadonnées. Toutefois 
ceci est encore prématuré, la métamodélistion et les annotations OWL étant actuellement en 
discussion au sein d’une task force, seront sûrement l’objet d’évolutions prochaines. 
Motivées par l'intérêt de plusieurs partenaires (Mariot et al., 2007), ces questions pour 
définir une correspondance rigoureuse de Ardans vers OWL restent d’actualité. Elles passent 
inévitablement par une spécification précise des primitives de Ardans sous forme de 
grammaire BNF ou de diagrammes UML et d'une analyse fine des besoins d'utilisation de 
OWL de ses utilisateurs. 
6 Conclusion 
La démarche et l’outil Ardans s’inscrivent dans une logique originale ‘d’intelligence 
collective’. La formalisation et le partage des connaissances par chacun, leur validation en 
groupe dynamisent les réunions de progrès en lien avec les démarches qualité. Les actions 
d’amélioration sont valorisées par l’intégration de leurs résultats à la vie opérationnelle des 
acteurs. Cette interaction favorise l’émergence d’un renouvellement du plaisir pour le travail 
par la reconnaissance et l’implication qu’elle apporte à chacun. Cette façon collaborative de 
travailler renouvelle la place du management qui devient partie prenante du dispositif tout en 
obtenant une visibilité sans précédent sur son patrimoine de connaissances et de compétences 
en lien avec les objectifs opérationnels de l’entité. Une perspective future de Ardans est 
d’étudier la migration possible d’un patrimoine de savoir-faire recueilli avec Ardans à sa 
représentation à l’aide de langages standards du Web, en particulier OWL 2, ainsi que les 
bénéfices possibles. 
 
 
P.  Mariot et al. 
. 
 
 
 
Références  
R.J. Brachman and J. Schmolze. An Overview of the KL-ONE Knowledge Representation 
System", Cognitive Sci 9(2), 1985. 
B. Cuenca Grau, I. Horrocks, B. Parsia, P. Patel-Schneider and U. Sattler. Next Steps for 
OWL, In Proceedings of the OWLED*06 Workshop on OWL: Experiences and 
Directions Athens, Georgia (USA) November 10-11, 2006. 
http://sunsite.informatik.rwth-aachen.de/Publications/CEUR-WS//Vol-216 
Ian Horrocks, Peter F. Patel-Schneider, and Frank van Harmelen. From SHIQ and RDF to 
OWL: The making of a web ontology language. J. of Web Semantics, 1(1):7-26, 2003. 
A. Berger, P. Mariot, C. Coppens, J. Laroque Malbert, & Jean-Pierre Cotton. Faire vivre un 
référentiel métier dans l'industrie : de la théorie à la pratique, Actes EGC 2006 Lille - 18 
janvier 2006 
C. Coppens, J. Laroque Malbert, A. Berger, P. Mariot & Jean-Pierre Cotton. La capitalisation 
des connaissances dans l'industrie : Implanter un référentiel métier et le déployer : 
l'exemple d'Icare , Actes SdC 2006 - Semaine de la Connaissance, Nantes - 30 juin 2006 
A Mariot, A. Caillette, Baudoin,, J. Chanliau, , P. Mariot, A. Berger, F. Vexler, L’efficience 
des organisations de santé :La bascule dans la gestion des connaissances, Actes SdC 2006 
- Semaine de la Connaissance, Nantes - 30 juin 2006 
M. Mehrenberger. Approche du diagnostic anatomoclinique des glomérulopathies à l'aide 
d'un logiciel de gestion des connaissances, 8ème Réunion Commune de la Société de 
Néphrologie et de la Société Francophone de Dialyse « Club De Pathologie Rénale » 
Lille - 5 octobre 2006  
SisQual 2006 Workshop KM « Basculer dans une gestion des connaissances » 
http://www.doucetconseil.fr/SISQUAL2006/KM.htm  Paris La Défense - 16 novembre 
2006 
C. Golbreich, Combining content-based retrieval and description logics reasoning SWAMM 
2006, collocated with WWW 2006, Edinburgh, Scotland http://www.ea3888.univ-
rennes1.fr/lim/doc_142.pdf 
P. Mariot, JP. Cotton, C Golbreich, A. Berger, F Vexler, Querying multiple sources with 
OWL ontologies: an exploratory study in an automotive company, OWLED 2007, 
Insbrück, Austria, CEUR Workshop Proceedings, ISSN 1613-0073, online CEUR-
WS.org//Vol-258/. 
 
