Extraction métaheuristique d’une architecture à base de
composants à partir d’un système orienté objet
Sylvain Chardigny∗, Abdelhak Seriai∗
Mourad Oussalah∗∗, and Dalila Tamzalit∗∗
∗ Ecole des Mines de Douai, 941 rue Charles Bourseul, 59508 Douai France
∗∗ LINA, université de Nantes, 2 rue de la Houssinière, 44322 Nantes France
Résumé. La modélisation et la représentation des architectures logicielles sont
devenues une des phases principales du processus de développement de sys-
tèmes complexes. En effet, la représentation de l’architecture fournit de nom-
breux avantages pendant tout le cycle de vie du logiciel. Cependant pour beau-
coup de systèmes existants, aucune représentation fiable de leurs architectures
n’est disponible. Afin de pallier cette absence, source de nombreuses difficultés,
nous proposons, dans cet article une approche, appelée ROMANTIC, visant à
extraire une architecture à base de composants à partir d’un système orienté ob-
jet existant. L’idée première de cette approche est de proposer un processus quasi
automatique d’identification d’architecture en formulant le problème comme un
problème d’optimisation et en le résolvant au moyen de métaheuristiques. Ces
dernières explorent l’espace composé des architectures pouvant être abstraites
du système.
1 Introduction
La modélisation et la représentation de l’architecture logicielle des systèmes complexes
sont devenues une phase importante dans leur processus de développement (Bertolino et al.
(2005)). L’architecture d’un système décrit sa structure à un haut niveau d’abstraction, en terme
de composants et de connecteurs. Cette abstraction offre de nombreux avantages tout au long
du cycle de vie du logiciel (Shaw et Garlan (1996)). En effet, disposer d’une représentation de
l’architecture facilite les échanges entre les concepteurs et les programmeurs. Ensuite, pendant
les phases de maintenance et d’évolution, cette représentation permet de localiser les défauts du
logiciel et réduit les risques lors de l’ajout d’une nouvelle fonctionnalité. De plus, la distinction
entre les composants et les connecteurs rend explicite la séparation entre les aspects métiers
et communications et facilite la compréhension et l’évolution du système. Enfin, l’architecture
à base de composants favorise la réutilisation de certaines parties du système représentées par
les composants.
Cependant, force est de constater, que beaucoup de systèmes existants ne disposent pas
d’une représentation fidèle de leur architecture. En effet, le système peut avoir été conçu sans
représentation de son architecture, comme dans le cas de certains systèmes patrimoniaux. Pour
d’autres systèmes, la représentation disponible peut être décalée par rapport à l’implémentation
