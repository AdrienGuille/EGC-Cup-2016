Synthèse d’observateurs à partir d’exigences temporelles 
 
Benjamin Fontan*, Pierre de Saqui-Sannes*, Ludovic Apvrille**
 
* Université de Toulouse ; ISAE ; LAAS-CNRS 
10 avenue Edouard Belin, BP 5402, Toulouse Cedex 04, France 
bfontan@isae.fr, pdss@isae.fr 
 
** GET/ENST, Laboratoire System-on-Chip 
2229 route des Crêtes, B.P. 193, 06904 Sophia-Antipolis Cedex, France 
ludovic.apvrille@telecom-paris.fr 
 
Résumé. A contrario des normes UML 2.1 et SysML, le profil UML TURTLE 
(Timed UML and RT-LOTOS Environment) dispose d’une sémantique 
formelle et d’une méthodologie. Avec les systèmes temps réel pour cible, cette 
méthodologie met l’accent sur la vérification formelle du comportement des 
objets. Le profil TURTLE est doté d’un langage graphique et formalisé 
d’expression d’exigences temporelles. La contribution de cet article réside 
dans la présentation d’algorithmes de génération d’observateurs à partir 
d’exigences temporelles exprimées dans ce langage. Ces observateurs sont 
destinés à guider la vérification formelle et en particulier à confronter le 
comportement des objets aux exigences temporelles tout en traçant ces 
dernières au long de la trajectoire de conception du système en cours d’étude. 
Un dispositif de charge d’une batterie de véhicule hybride sert d’étude de cas. 
1 Introduction 
La notation UML (Unified Modeling Language) (OMG, 2007) normalisée par l’Object 
Management Group est un langage de modélisation à large spectre dédié aux systèmes à 
logiciel prépondérant. Le concept de « profil UML » permet de personnaliser la notation de 
l’OMG pour les besoins d’un domaine d’application particulier. Un profil se doit de doter 
UML d’une sémantique et d’une méthodologie supportée par des outils. 
Les profils « UML temps réel » (Garbi et al, 2006) apportent ainsi des réponses aux 
besoins spécifiques des concepteurs de systèmes temps réel. Ils enrichissent UML par des 
constructions (ports de communication par exemple) aptes à traiter le caractère réactif des 
systèmes temps réel et prennent en compte l’assujettissement de ces systèmes à des 
exigences temporelles. Les techniques généralement associées à ces profils sont d’une part, 
les générateurs de code exécutable et, d’autre part, les techniques de vérification formelle. 
Ces derniers permettent de confronter une conception UML à un ensemble d’exigences et ce, 
en préalable à toute exécution sur une cible réelle.  
La pratique de la vérification formelle fait ressentir le besoin d’intégrer les exigences au 
modèle de conception. Or, sur ce point, la notation UML pêche par l’absence de diagramme 
dédié aux exigences. Une solution possible est d’emprunter au langage SysML (SysML, 
2006) la notion de diagramme d’exigences. C’est la solution retenue dans le cadre du profil 
UML temps réel TURTLE (Timed UML and RT-LOTOS Environment) et qui motive le 
travail présenté dans cet article. 
