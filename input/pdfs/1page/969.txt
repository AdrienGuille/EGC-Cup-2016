AlkoWeb: Un outil pour modéliser l’architecture des
applications Web riches
Reda Kadri∗, Chouki Tibermacine∗∗
Régis Fleurquin, Salah Sadou, François Marciol∗∗∗
∗Alkante SAS 31A rue des Landelles 35510 Cesson-Sévigné
r.kadri@alkante.com,
http://www.alkante.com
∗∗UMR 5506 161 rue Ada 34392 Montpellier Cedex 5 - France
tibermacin@lirmm.fr
http://www.lirmm.fr
∗∗∗VALORIA - Université de Bretagne Sud, Campus de Tohannic
Bât. Yves Coppens, BP 573, 56017 Vannes Cedex
sadou,fleurquin,merciol@univ-ubs.fr
Résumé. La couche présentation des architectures n-tiers a besoin d’être conçue
avec des modules correctement structurés et réutilisables. Dans ce article, nous
présentons unmodèle de composants hiérarchiques qui permet aux développeurs
de modéliser, de générer du code et de réutiliser ce niveau logiciel des applica-
tions Web riches. Dans ce modèle, les composants peuvent être inter-connectés
via leurs interfaces pour construire des composants plus complexes. Ces mo-
dèles peuvent être réutilisés avec leur code grâce à un mécanisme d’association.
Comme nous le montrons dans cet article, ceci est une propriété intéressante
pour assister les développeurs pour naviguer dans le code source et les modèles
de leurs applications. Ceci permet par ailleurs de maintenir une cohérence entre
les artefacts de ces deux étapes du processus de développement (conception et
implémentation).
1 Introduction
De nos jours, les systèmes d’information sont de plus en plus distribués et déployés sur
Internet. Le Web représente actuellement la plate-forme standard pour l’hébergement de tels
systèmes. Dans ce contexte, l’utilisation d’une architecture multi-tiers est souvent la meilleure
décision de conception qui satisfasse les objectifs de qualité comme le passage à l’échelle,
la maintenabilité et la fiabilité. Un gros travail a été fait pour améliorer les parties traitement
et données des applications multi tiers. La partie cliente (présentation) a souvent été, quant à
elle, assimilée à un navigateur Web. Or, ces dernières années celle-ci est devenue de plus en
plus complexe. C’est l’article publié par James Garett( Garrett (2005)), co-fondateur d’Active
Path, qui semble avoir suscité la prise de conscience et l’intérêt des développeurs vis-à-vis
