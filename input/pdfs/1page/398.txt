Construction automatique d’applications de visualisation
scientifique interactive fortement cohérentes
Sébastien Limet∗, Sophie Robert∗, Ahmed Turki∗ 1
∗Laboratoire d’Informatique Fondamentale d’Orléans,
Batiment IIIA, Rue Léonard de Vinci, 45067 ORLEANS
{sebastien.limet | sophie.robert | ahmed.turki}@univ-orleans.fr
Résumé. Cet article traite de l’usage de la programmation par composants pour
la conception d’applications de visualisation scientifique interactive temps-réel.
Notre but est d’automatiser cette conception grâce à une méthode pour construire
un réseau de connexion entre les différents composants qui constituent une telle
application à partir des contraintes fournies par l’utilisateur. Ce type d’applica-
tions doit fonctionner le plus rapidement possible tout en préservant la précision
de ses résultats. Ces deux aspects sont souvent en conflit, par exemple lorsqu’il
s’agit d’autoriser la perte de messages ou pas. Notre approche vise à trouver
automatiquement le meilleur compromis entre ces deux critères au moment de
construire l’application.
1 Introduction
La visualisation interactive de simulations aide les scientifiques à mieux comprendre les
phénomènes qu’ils étudient. Par exemple, les biochimistes Delalande et al. (2010) décrivent
comment elle peut révéler des interactions entre des structures moléculaires complexes. L’ob-
servateur, en devenant acteur de l’application, peut non seulement naviguer dans la visualisa-
tion mais également appliquer des forces sur les atomes, forces qui agissent directement sur
la simulation en cours. Il peut ainsi pousser ou tirer des atomes et constater directement l’im-
plication de ses actions au niveau moléculaire. D’autres interfaces (sonores, haptiques, etc.)
peuvent compléter le dispositif. Comme l’a montré McAdam (2010), la force et le retour de
force peuvent ainsi être utiles pour comprendre les lois qui régissent un système dynamique.
C’est la raison pour laquelle permettre aux scientifiques de développer leurs simulations
puis de les intégrer dans des applications de visualisation interactive est de plus en plus im-
portant. Cependant, la complexité de la mise en œuvre de telles applications est un vrai frein
à leur développement. Les spécialistes du calcul scientifique sont rarement experts à la fois en
rendu graphique, en interaction et en couplage de codes. La programmation par composants
-ou orientée composant (POC)- est une solution puisqu’elle permet à chaque spécialiste de
développer indépendamment les fonctionnalités pour lesquelles il est compétent. L’application
composite (ou modulaire) est alors constituée d’un ensemble de composants ou modules in-
dépendants mais qui communiquent entre eux selon un protocole. Le choix d’une architecture
1. Ce travail est financé par le projet ANR “FvNano”.
