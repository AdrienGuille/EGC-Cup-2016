MUSETTE: a Framework for Knowledge  
Capture from Experience 
 
Pierre Antoine Champin, Yannick Prié, Alain Mille 
 
LIRIS - Bât Nautibus - UFR Informatique  
Université Claude Bernard Lyon 1 / F-69622 Villeurbanne Cedex 
prenom.nom@liris.cnrs.fr 
http://liris.cnrs.fr/prenom.nom 
 
Résumé. Nous présentons dans cet article une nouvelle approche de 
modélisation de l’expérience d’utilisation d’un système informatique, avec 
pour objectif de réutiliser cette expérience en contexte pour assister 
l’utilisateur à effectuer sa tâche. Quatre scénarios illustrent cette approche. 
 
1. Introduction 
 
It is a triteness to say that computers are widely used, for more and more various and 
numerous tasks, which mainly rely on “information management”: information organization, 
storage, communication, retrieval, sharing… Furthermore, information management 
environments get increasingly customisable, in order to get closer to users’ practices, usages 
and, more generally, to their needs of handling information whatever its form. For example, 
we could consider that an environment composed of a/ the web as a resource provider 
(documents, data) and b/ a tool for viewing and editing HTML documents, is adapted to any 
task involving information gathering and publication. The spectrum of computer-mediated 
tasks becomes wider, and tools for performing these tasks become more versatile and 
customisable. Since, on the other hand, they have more and more (often inexperienced) 
users, there is a increasing need for assisting the latter in their tasks while using tools or sets 
of tools. As a consequence, there is a need to design software agents as assistants, which 
would take advantage of knowledge describing the task at hand. Indeed it becomes necessary 
to take into account user’s tasks in order to be able to interpret, in their context, the traces left 
by the use of the computer environment. Of course, in many situations of user assistance, 
there can be a wide variety of questions that can be formulated, depending on the context of 
use. Let us stress the fact that this notion of “context” has nothing to do with what is 
commonly addressed in the so-called “contextual help”: the latter is exclusively considering 
the computer environment context (e.g., selected item, current menu) while we are focusing 
on the user’s context, in particular the task he or she is willing to perform.  
More precisely, we do consider two kinds of tasks. First, we consider tasks that are well 
identified, for which assistance would rely on knowledge described in carefully designed 
ontologies. But it is also important to consider a second kind of tasks, which are hard to 
anticipate, and should be recognized from their manifestations and defined on the fly, 
considering actual experience of use of the system. We would like to address these tasks, so 
our main question is: how is it possible to model and capture experience in using a system, 
so that it can be reused as knowledge for user assistance? Moreover, how could it be that the 
assistance itself could evolve with concrete experience?  
