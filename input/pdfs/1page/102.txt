Test de conformité basé sur l’architecture logicielle
Elena Leroux∗, Flavio Oquendo∗ et Qin Xiong∗
∗IRISA, Université de Bretagne-Sud, Vannes, France
{elena.leroux | flavio.oquendo | qin.xiong}@irisa.fr
Résumé. Au cours des deux dernières décennies, l’architecture logicielle
a joué un rôle central dans le développement des systèmes logiciels. Il four-
nit une description de haut niveau pour les systèmes complexes de grande
taille en utilisant des abstractions appropriées pour les composants du
système et pour leurs interactions. Dans notre travail, l’architecture lo-
gicielle est décrite en utilisant un langage de description architecturale
(Architecture Description Language ou ADL) formel appelé pi-ADL-C&C.
L’un des objectifs de cet ADL est de permettre la validation formelle
d’un système implémenté, par rapport à son modèle architectural. Dans
l’article, nous proposons une approche fondée sur le test de conformité
pour valider l’implémentation du système par rapport à son architecture.
Les tests architecturaux sont dérivés à partir d’un système de transitions,
représentant la structure de l’architecture d’un système et de ses com-
portements, et sont exécutés sur le système sous test. Pour illustrer notre
approche, nous utilisons l’exemple de la machine à café.
1 Introduction
Au cours des dernières années, une croissance continue, en taille et en complexité,
des systèmes logiciels et matériels a été observée. Les problèmes, liés à l’écriture du code
lors du développement d’un système, qui étaient importants dans le passé, par exemple
le choix de la structure de données et des algorithmes, sont devenus moins importants
que ceux liés à la conception du système. Cela est dû, non seulement à la quantité accrue
de code, mais aussi à la nécessité de distribuer différents composants du système et de
les faire interagir de manière complexe. Pour faire face à ces problèmes et passer au
niveau d’abstraction supérieur pour concevoir et développer un système logiciel, la
notion d’architecture logicielle est apparue. L’architecture logicielle a rapidement été
considérée comme une sous-discipline importante du génie logiciel, voir Shaw et Garlan
(1996), car elle a permis aux développeurs de systèmes logiciels : (1) d’abstraire les
détails des différents composants du système, (2) de représenter le système comme un
ensemble de composants avec des connecteurs associés qui décrivent les interactions (a)
entre les composants et (b) entre les composants et l’environnement, et (3) de guider
la conception du système et son évolution. Afin de décrire l’architecture logicielle d’un
système, un ensemble de langages formels et semi-formels a été proposé, voir Malavolta
et al. (2013); Medvidovic et Taylor (2000). Ces langages de description architecturale
- 51 -
