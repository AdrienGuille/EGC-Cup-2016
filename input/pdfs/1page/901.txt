Génération de transformation de modèles par application de
l’ARC sur des exemples
Xavier Dolques∗, Marianne Huchard∗, Clémentine Nebut∗
∗LIRMM, Univ Montpellier 2 et CNRS
161 rue Ada 34392 MONTPELLIER CEDEX 5
{dolques, huchard, nebut}@lirmm.fr,
Résumé. Les transformations de modèles sont au cœur de l’ingénierie dirigée
par les modèles. Elles sont habituellement développées par des programmeurs
spécialisés et leur code doit être remis à jour lors de toute variation des besoins
ou des métamodèles impliqués. Pour faciliter le développement de ces transfor-
mations, une approche possible consiste à générer des règles de transformation à
partir d’exemples de transformation. L’avantage des exemples est qu’ils peuvent
être d’une part écrits dans une syntaxe concrète, plus accessible pour l’utilisa-
teur qu’un langage de transformation et d’autre part plus faciles à définir que
les règles elles-mêmes. Dans cet article, nous spécifions une méthode qui uti-
lise l’analyse relationnelle de concepts pour capturer et organiser par spéciali-
sation les schémas récurrents qui apparaissent dans les exemples de transforma-
tion. Ces schémas récurrents peuvent ensuite être exploités pour la production
de règles de transformation.
1 Introduction
L’ingénierie dirigée par les modèles place le modèle au centre du processus de développe-
ment, ainsi les différentes étapes du développement se traduisent par une succession de trans-
formations de modèles. Ces transformations sont automatisées autant que possible par le biais
de programmes de transformation, qui sont dans la plupart des cas développés dans des lan-
gages généralistes (par exemple Java) ou dédiés (par exemple ATL (Jouault et Kurtev, 2005),
Kermeta, QVT (OMG, 2008)).
Beaucoup de ces transformations sont assez simples à appréhender, puisqu’elles consistent
à associer un motif du modèle source à un motif du modèle cible, notamment dans le cas d’un
changement de méta-modèle pour la représentation d’un même domaine (par exemple une
transformation d’UML vers un modèle Entité-Relation, ou d’UML vers Java).
Mais la programmation d’une transformation de modèles nécessite la maîtrise d’un langage
de transformation ainsi qu’une connaissance suffisante des méta-modèles des modèles sur les-
quels s’applique la transformation. Une approche par l’exemple permet de s’affranchir d’une
partie de ces connaissances, en ne manipulant que des modèles dans leur syntaxe concrète.
Nous proposons dans ce papier la spécification d’une méthode de génération de transforma-
tions à partir d’exemples. Cette méthode s’appuie sur une technique de découverte d’abstrac-
tions à base de treillis.
