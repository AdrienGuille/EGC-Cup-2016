Architecture des IHM
Nicolas Ferry*, Jean-Bernard Crampes**
Salah Sadou*
*Valoria Lab
salah.sadou@univ-ubs.fr
nicolas.ferry@univ-ubs.fr
http://www-valoria.univ-ubs.fr/Salah.Sadou/
**IRIT Toulouse
jbcrampes@gmail.com
http://www.jbcc.fr
Résumé. Pour les sociétés de services en informatique (SSII),  les phases de 
capture des exigences et de conception utilisent couramment l'ingénierie des 
modèles pour avoir une représentation de l'architecture de la solution. Malheu-
reusement,  l'architecture  des  interfaces  homme-machine  (IHM) est  très  peu 
étudiée dans ces phases et bien souvent l'architecture des interfaces est laissée 
à  la  responsabilité  des  développeurs  qui  n'ont  généralement  pas  eu  de  ré-
flexions avec le client et les utilisateurs finaux. Nous proposons un langage de 
description de l'architecture des IHM appelé SNI (Schéma Navigationnel des 
Interfaces) qui cherche à faciliter le dialogue avec les clients et définir l'archi-
tecture globale des interfaces. Dans ce cadre, nous présentons un outil qui per-
met de réaliser ce type de diagrammes et qui permet in fine de générer des ma-
quettes afin d'obtenir un retour des utilisateurs finaux.
1 Introduction
Le nouveau standard de qualité industriel CMMi (Capability Maturity Model Integration) 
définit cinq niveaux d'industrialisation pour le processus de conception logiciels des sociétés 
de services en informatique (SSII). Durant toute la réalisation, une entente mutuelle basée sur 
des compromis est essentielle pour l'aboutissement des projets. Pour cela, il est recommandé 
de réaliser des ateliers participatifs afin d'échanger avec le client et les utilisateurs finaux sur 
la solution pour comprendre les besoins et les exigences.
Il existe plusieurs approches dont notamment la modélisation qui, avec l'ingénierie diri-
gée par les modèles (IDM), représente les informations dans une vue standardisée simplifiant 
la communication des intervenants. Les architectes en informatique utilisent régulièrement 
des diagrammes comme UML pour concevoir différents aspects du logiciel. Cependant, nous 
avons conduit une série d'interviews (Ferry, 2008) auprès de chefs de projets d'une grande 
société de services et nous avons remarqué que bien souvent les interfaces homme-machine 
(IHM) d'une application sont laissées uniquement à la responsabilité des développeurs. Hor-
