Caractérisation des transitions temporisées dans les logs de
conversation de services Web
Didier Devaurs, Fabien De Marchi, Mohand-Saïd Hacid
LIRIS, UMR 5205, CNRS / Université Claude Bernard Lyon 1
Bâtiment Nautibus, 8 boulevard Niels Bohr, F-69622 Villeurbanne, France
didier.devaurs@irisa.fr, {fabien.demarchi, mohand-said.hacid}@liris.cnrs.fr
Résumé. La connaissance du protocole de conversation d’un service Web est
importante pour les utilisateurs et les fournisseurs, car il en modélise le compor-
tement externe ; mais, il n’est souvent pas spécifié lors de la conception. Notre
travail s’inscrit dans une thématique d’extraction du protocole de conversation
d’un service existant à partir de ses données d’exécution. Nous en étudions un
sous-problème important qui est la découverte des transitions temporisées (i.e.
les changements d’état liés à des contraintes temporelles). Nous proposons un
cadre formel aboutissant à la définition des expirations propres, qui représentent
un équivalent dans les logs des transitions temporisées. A notre connaissance,
ceci représente la première contribution à la résolution de ce problème.
1 Introduction
Les services Web constituent la nouvelle génération des technologies du Web pour l’inté-
gration d’applications. Ce sont des composants logiciels mis à disposition par des fournisseurs,
invocables sur Internet par des clients (des utilisateurs ou d’autres services), et communiquant
de façon asynchrone, par le biais de messages. Ils permettent de réaliser une intégration à faible
couplage et à moindre coût, du fait qu’ils utilisent des standards généralistes fortement répan-
dus (XML, HTTP). Toutefois, cette souplesse d’intégration n’est possible que si les utilisateurs
d’un service savent comment interagir avec celui-ci. A un service doivent donc être associées
des descriptions assez riches pour permettre de comprendre sa sémantique d’exécution.
Le langage WSDL, par exemple, spécifie l’interface d’un service : les opérations, les types
de messages, le format des entrées-sorties. Cependant, Benatallah et al. (2004) ont montré que
ceci était insuffisant dans l’optique d’une utilisation automatique des services Web, et ont dé-
fini le protocole de conversation, qui permet de spécifier quelles sont les séquences ordonnées
de messages (appelées conversations) qu’un service peut émettre ou recevoir. Benatallah et al.
(2005a,b) ont ensuite ajouté des contraintes temporelles à leur modèle, rebaptisé protocole
de conversation temporisé. Son utilisation offre de nombreuses applications, pour la vérifica-
tion automatique de bon fonctionnement, de compatibilité, etc. Néanmoins, en pratique, de
nombreux services ne possèdent pas une telle spécification. Il est donc légitime de chercher à
obtenir le protocole de conversation d’un service s’il n’a pas été défini lors de la conception.
Fournir le protocole d’un service à ses partenaires et clients est bien sûr l’application la plus
directe de ce problème de découverte ; mais il possède un intérêt bien plus grand pour l’ingé-
