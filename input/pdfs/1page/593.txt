Graph grammar-based transformation for context-aware
architectures supporting group communication
Ismael Bouassida Rodriguez∗,∗∗, Christophe Chassot∗,∗∗, Mohamed Jmaiel∗∗∗
∗CNRS; LAAS; 7 avenue du colonel Roche, F-31077 Toulouse, France
∗∗Université de Toulouse; UPS, INSA, INP, ISAE; LAAS; F-31077 Toulouse, France
bouassida@laas.fr,chassot@laas.fr
∗∗∗Uiversity of Sfax, ReDCAD Research Unit, B.P. 1173, 3038 Sfax, Tunisia
mohamed.jmaiel@rnu.enis.tn
Abstract. Handling context-aware dynamically adaptable architectures con-
tributes to the design of self-configuring software systems. This kind of problem
for communicating systems is even more challenging since adaptation should
address simultaneously the different levels. This is necessary for handling both
changes in the low level constraints and evolutions in the high level require-
ments. In this paper, we address this problem by providing a model-based,
rule-oriented approach that supports the adaptation process based on a run-time
transformation of the system architecture. Such architecture may represent the
different possible service compositions and the associated architectural configu-
rations. We consider the multi-level models of the communicating system archi-
tecture and the intra-level architecture transformations as the elementary adap-
tation actions. We handle consistently the related inter-level adaptation actions
by considering additional architectural relationships viewing the lower level ar-
chitecture as a refinement of the upper level.We provide the algorithms char-
acterizing the multi-level architecture-based adaptation process. We then de-
velop a rule-oriented implementation using graph grammar and handling archi-
tectural transformations as graph transformation rules. We consider Emergency
Response and Crisis Management Systems (ERCMS) as a case study from the
more general group communication systems to which our results apply.
1 Introduction
Designing and implementing self-adaptive communicating systems is a complex task,
which may be addressed via model-based design approaches associated with automated man-
agement techniques for dynamic architectural adaptability. In self-adaptable applications,
components are created and connected, or removed and disconnected during the execution.
The architectural changes respond to constraints of the communication and resources exe-
cution capacities variations. Providing solutions for distributed software systems supporting
group communication requires managing dynamically evolving group membership and dy-
namically connecting deployment nodes.
