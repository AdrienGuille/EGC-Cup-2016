Génération automatique d’algorithmes de détection des
défauts de conception
Naouel Moha∗, Foutse Khomh∗, Yann-Gaël Guéhéneuc∗
Laurence Duchien∗∗, Anne-Françoise Le Meur∗∗
∗Équipe PTIDEJ– GEODES
Département d’informatique et de recherche opérationnelle, Université de Montréal
CP 6128 succ. Centre Ville, Montréal, Québec, H3C 3J7, Canada
{mohanaou, foutsekh, guehene}@iro.umontreal.ca
∗∗ Équipe Adam – INRIA Futurs
Université des Sciences et Technologies de Lille – LIFL - UMR CNRS 8022
Cité Scientifique, 59655 Villeneuve d’Ascq Cedex, France
{Laurence.Duchien, Anne-Françoise.LeMeur}@lifl.fr
Résumé. Les défauts de conception sont des problèmes récurrents de concep-
tion qui diminuent la qualité des programmes. Plusieurs approches outillées de
détection des défauts ont été proposées dans la littérature mais, à notre connais-
sance, elles utilisent toutes des algorithmes de détection ad-hoc, ce qui rend
difficile leur généralisation à d’autres défauts. De plus, elles sont basées prin-
cipalement sur des métriques, qui ne rendent pas compte de certaines caracté-
ristiques importantes des systèmes analysés, telles que leur architecture. Dans
cet article, nous développons notre approche basée sur un méta-modèle des dé-
fauts de conception en présentant une génération automatique des algorithmes
de détection à partir de gabarits. Nous présentons aussi les performances de la
génération et évaluons les algorithmes générés en terme de précision et de rap-
pel. Nous fournissons ainsi des moyens concrets pour automatiser la génération
des algorithmes de détection et donc détecter de nouveaux défauts tout en pre-
nant en compte toutes les caractéristiques des systèmes.
1 Introduction
Avec l’omniprésence des systèmes logiciels dans nos sociétés, la qualité est devenue vitale
aussi bien pour assurer le fonctionnement adéquat des systèmes que pour diminuer leurs coûts
de développement et de maintenance. Celle-ci est évaluée et améliorée principalement pendant
les revues techniques et formelles, dont l’objectif est de détecter au plus tôt les erreurs ou les
défauts de conception, avant que ces erreurs et défauts ne puissent être transmis à la prochaine
étape du développement ou de la maintenance ou, pire, au client (Travassos et al., 1999).
Les défauts de conception sont de mauvaises solutions à des problèmes récurrents de
conception, dont l’origine sont de mauvaises pratiques de conception (Perry et Wolf, 1992).
Ils sont à l’opposé des patrons de conception (Gamma et al., 1994) et aussi différents des
