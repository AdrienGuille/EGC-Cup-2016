Vers une architecture MVSOA pour la mise en œuvre des 
composants multivue 
 
Bouchra El Asri, Adil Kenzi, Mahmoud Nassar, Abdelaziz Kriouile 
Laboratoire SI2M, ENSIAS, Rabat, Maroc 
elasri@ensias.ma, adil.kenzi@gmail.com, {nassar, krouile}@ensias.ma 
 
Résumé. L’objectif de cet article est de proposer un processus de mise œuvre 
des systèmes à base de composants multivue selon une architecture orientée 
services multivue (MVSOA : MultiView SOA). Cette architecture repose sur 
une extension du standard WSDL appelée MVWSDL (MultiView Web 
Service Description Language) et sur un ensemble d'adaptateurs pour la 
publication et la sélection des services multivue. Dans cet article, nous 
présentons en premier lieu un modèle métier à base de composants multivue. 
Ensuite, et via des règles de transformations, ce dernier sera transformé vers 
une plateforme services web selon l’architecture MVSOA. Pour ce faire, nous 
avons défini deux transformations : La première consiste en la définition des 
règles de transformation pour générer la description d’un composant multivue 
selon le format MVWSDL. La deuxième transformation cible la plateforme 
J2EE en se basant sur le méta-modèle J2EE pour générer l’implémentation du 
composant correspondant. 
Mots clés : Architecture orientée service multivue, composant multivue,  
MDA/MDE, Web Service, MVWSDL.  
1 Introduction  
Dans l’objectif de répondre à des problèmes récurrents en informatique tels que  la 
réutilisation, la maintenance, l’évolution et l’intégration des systèmes, l’ingénierie logicielle 
n’a cessé de produire de nouvelles approches et de nouveaux paradigmes. Ainsi, l’ingénierie 
logicielle à base de composants se positionne récemment comme une approche prometteuse 
pour faire face à ces types de problèmes. Dans ce contexte, plusieurs approches à base de 
composants ont vu le jour. En effet, des  approches CUP (Component Unified Process) 
(Renaux 2004), Catalysis (D'Souzaet al. 1999), Fractal (Bruneton et al. 2003) et d’autres 
pour le développement des systèmes à base de composants ont été proposées. Ces différentes 
approches visent une meilleure réutilisation des modèles à base de composants. En revanche 
la complexité inhérente aux besoins croissants des utilisateurs et à la maintenabilité des 
systèmes reste un champ d’investigation pour les chercheurs. En effet, les composants 
identifiés lors du cycle de vie sont, en général, des entités qui regroupent les différents rôles 
joués par ces composants dans les différentes collaborations. Aucune trace des besoins 
fonctionnels identifiés à la phase d’analyse n’est gardée le long du cycle de développement 
de logiciel. 
Par conséquent, des approches permettant la séparation des préoccupations fonctionnelles 
ont été proposées dans le but de capitaliser les besoins fonctionnels dans des entités 
modulaires. Dans cette perspective, nous proposons une approche à base de composant 
