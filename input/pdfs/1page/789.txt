Extension  d’ABAReL par les Propriétés d’Exécution 
 
Malika Benammar*, Faiza Belala** 
Kamel Barkaoui***, Nadira Benlahrache** 
 
*Département d’Informatique, Université de  Batna, Algérie 
m_benammar@ekit.com 
**Département d’Informatique, Université Mentouri de  Constantine, Algérie 
belalafaiza@hotmail.com   
***CEDRIC-CNAM, 292, Rue Saint-Martin, Paris 75003, France 
barkaoui@cnam.fr 
 
 
Résumé.  Dans un travail antérieur, nous avons proposé une annexe comporte-
mentale ABAReL (AADL Behavioral Annex based on generalized Rewriting 
Logic), basée sur la logique de réécriture révisée,  décrivant le composant 
"thread AADL" tout en préservant sa syntaxe initiale. Un modèle mathématique 
représenté par une théorie de réécriture  décrivant son comportement simplifié, 
a été alors validé et implémenté sous l'environnement Maude. L'objectif de cet 
article est de raffiner l'annexe ABAReL et l'enrichir  par d'autres constructions 
formelles de la logique de réécriture, à travers une extension de son langage 
Maude qui est RT-Maude (Real Time Maude). Cet enrichissement permettra de 
décrire les modes et les propriétés  relatives au temps d'exécution théorique (la 
période, la politique d’expédition, etc.), déclarées dans le composant  thread et 
leur prise en compte lors de  son exécution.  L'approche de formalisation propo-
sée offre un cadre sémantique général, approprié pour raisonner sur le compor-
tement de ces unités d’exécution concurrentes et pour pouvoir ensuite les analy-
ser en tirant profit des outils existant autour de Maude.   
1 Introduction 
Face à la complexité des systèmes embarqués, souvent composés de multiples sous-
systèmes ou unités fonctionnelles, il est nécessaire d’adopter la description architecturale dans 
leur processus de développement afin d’exprimer la structure haut niveau de tels systèmes et 
de raisonner sur leurs propriétés. AADL (Architecture Analysis and Design Language) est un 
langage de description d’architecture basé sur le langage MetaH qui décrit un système embar-
qué comme une collection de composants matériels et logiciels en interaction liée à une plate-
forme d’exécution. Ce langage se focalise sur les aspects architecturaux et permet la descrip-
tion des dimensions des composants et leurs connexions, mais ne traite  pas directement de 
leur implantation comportementale, ni de la sémantique des données manipulées. Ces aspects 
peuvent être ajoutés au moyen d’annexes, ou en associant des descriptions externes à l’aide 
des propriétés.  
Ces propriétés permettent d’exprimer les différentes caractéristiques des composants 
AADL telles que: le temps d’exécution théorique, la période d’un thread, le protocole de file 
d’attente utilisé pour un port d’événement/donnée, etc. Elles font partie intégrante de la syn-
taxe AADL, et sont plus adaptées pour décrire les caractéristiques des architectures. 
