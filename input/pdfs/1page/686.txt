KGRAM: une machine abstraite de graphes de connaissance
Olivier Corby∗, Catherine Faron-Zucker∗∗
∗INRIA
2004 route des lucioles - BP 93 - FR-06902 Sophia Antipolis cedex
olivier.corby@sophia.inria.fr
∗∗I3S, UNS, CNRS
930 route des Colles - BP 145 - FR-06903 Sophia Antipolis cedex
catherine.faron-zucker@unice.fr
Résumé. Cet article présente la machine abstraite de graphes de connaissance
KGRAM qui unifie les notions d’homomorphisme de graphe et de calcul de re-
quêtes telles que celles du langage SPARQL sur des données RDF. KGRAM
implémente un ensemble extensible d’expressions qui définissent une famille de
langages abstraits d’interrogation de graphes, GRAAL. Nous décrivons la sé-
mantique dynamique de GRAAL en Sémantique Naturelle et nous présentons la
machine abstraite KGRAM conçue comme l’interprète de GRAAL, qui implé-
mente les règles de sémantique naturelle du langage.
1 Introduction
Dans cet article nous présentons la machine abstraite de graphes de connaissance KGRAM
(acronyme pour Knowledge Graph Abstract Machine) qui unifie les notions d’homomorphisme
de graphe et de calcul de requêtes telles que celles du langage SPARQL sur des données
RDF/S. KGRAM implémente un ensemble extensible d’expressions qui définissent une famille
de langages abstraits d’interrogation de graphes de connaissance quelconques, que nous appe-
lons GRAAL (acronyme pour GRAph Abstract query Languages). Ce travail d’abstraction que
nous avons mené pour définir GRAAL a été alimenté par les résultats du projet GRIWES (Ba-
get et al., 2008) auquel nous avons participé. Nous définissons ici GRAAL par sa sémantique
dynamique en Sémantique Naturelle et nous définissons KGRAM comme l’implémentation
des règles de sémantique naturelle de GRAAL.
Quant à la machine KGRAM proprement dite, nous montrons le haut niveau d’abstraction
de son implémentation qui ne manipule que des interfaces, aussi bien pour ses structures de
données que pour ses opérations de graphes. Ainsi, différents gestionnaires de graphes et éva-
luateurs de contraintes peuvent être connectés — en implémentant les APIs de KGRAM. Nous
montrons l’interopérabilité de KGRAM en la connectant indifféremment aux gestionnaires de
graphes des moteurs sémantiques Corese 1 (Corby et al., 2004) et Jena 2 et à l’évaluateur de
contraintes de Corese.
La partie 2 suivante présente le langage GRAAL et la partie 3 la machine KGRAM.
1. http ://www-sop.inria.fr/edelweiss/software/corese/
2. http ://jena.sourceforge.net/
RNTI-E-19- 423 -
