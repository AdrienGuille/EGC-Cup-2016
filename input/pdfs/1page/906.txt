Réflexions autour de la construction dirigée par les modèles
d’un atelier de composition d’orchestrations
Sébastien Mosser, Mireille Blay–Fornarino
Université de Nice – Sophia Antipolis
Laboratoire I3S (CNRS - UNSA), Équipe Rainbow
Bâtiment Polytech’Sophia – Dept. SI, 930 route des Colles
B.P. 145, F-06903 Sophia Antipolis Cedex
{mosser,blay}@polytech.unice.fr
Résumé. Il est aujourd’hui courant d’utiliser une approche «orientée service»
pour définir des applications complexes. Dans ce cadre, les services constituent
les unités de base, assemblés par des mécanismes de plus haut niveau comme
les orchestrations. Nous présentons ici un atelier logiciel construit dans une dé-
marche dirigée par les modèles permettant la composition d’orchestrations de
services, et discutons les choix effectués ainsi que les difficultés rencontrées lors
de sa mise en œuvre.
1 Introduction
L’ingénierie dirigée par les modèles (IDM) appliquée aux architectures logicielles vise à
répondre aux besoins d’intégration des applications et d’adaptation à l’évolution des techno-
logies (Richard Soley, 2000). Avec pour objectif la rapidité de développement, nous avons
appliqué cette démarche au développement d’un atelier de composition d’orchestrations.
Dans le domaine des architecture orientée services SOA (Papazoglou et Heuvel, 2006), les
fonctionnalités élémentaires des applications sont identifiées par des services et les processus
métiers inhérents à l’entreprise sont construits par des assemblages de services. Une des tech-
nologies de mise en œuvre usuelle est l’utilisation deWeb Services pour implémenter les unités
de base et la définition d’orchestrations pour les assembler. Une orchestration se présente donc
schématiquement comme un ensemble d’activités décrivant le flot des appels aux différents
services qu’elle assemble. Un langage «standard» de définition des orchestrations est BPEL (et
ses dérivés) (OASIS, 2007), où la définition d’un assemblage se présente sous la forme d’un
document XML difficile à manipuler par un humain. Des environnements de programmation
des orchestrations ont donc été définis (ECLIPSE BPEL DESIGNER, NETBEANS SOA SUITE,
. . .), et permettent une manipulation graphique des assemblages.
En complément aux travaux sur les orchestrations, visant à assurer la correction des codes
(Pourraz, 2007) ou à améliorer l’abstraction de l’expressivité (White, 2006), nous nous in-
téressons à valider et optimiser la composition d’orchestrations. En effet la composition et
l’évolution des orchestrations ne sont pas réduites à l’assemblage ou à la modification des
enchaînements des activités. Elles consistent également à éliminer ou regrouper les appels à
