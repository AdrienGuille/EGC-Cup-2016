Vers l’Intégration des Propriétés non Fonctionnelles dans le 
Langage SADL 
 
Faiza BELALA*, Fateh LATRECHE*, Malika BENAMMAR** 
*Département d’Informatique, Université Mentouri de  Constantine, Algeria 
belalafaiza@hotmail.com 
**Département d’Informatique, Université de  Batna, Algeria 
 
Résumé. La notion d’architecture logicielle est apparue aux alentours des 
années 1990 et est maintenant présentée comme le cœur d’une discipline à part 
entière. De nombreux langages de description d’architecture (ADLs) ont été 
proposés dans la littérature. Ils offrent des capacités complémentaires pour le 
développement et l’analyse architecturale d’un système logiciel. Comme 
l’objectif principal d’un ADL est de fournir les moyens pour une spécification 
explicite, plusieurs caractéristiques pour les composants et les connecteurs sont 
souhaitables. Parmi ces caractéristiques, les propriétés non fonctionnelles 
spécifiant les besoins des utilisateurs, sont très importantes et favorisent une 
implantation correcte du logiciel. SADL est un langage de description 
d’architecture dont la vocation n’étant pas l’analyse, nous l’avons alors étendu 
pour prendre en compte les spécifications non fonctionnelles des systèmes 
architecturaux. Nous proposons dans cet article, un cadre formel, basé logique 
de réécriture, permettant la description des propriétés non fonctionnelles des 
composants et des connecteurs du langage SADL ainsi que l’analyse d’une 
application architecturale garantissant ces propriétés.   
Mots clés. Langage de Description d’Architecture, Approches Formelles pour 
la  Validation des Architectures Logicielles, Logique de réécriture, Le langage 
Maude. 
1 Introduction 
Face à la croissance de la taille et de la complexité des systèmes logiciels, il est devenu 
de plus en plus nécessaire l’adoption de la description architecturale dans leur processus de 
développement. La description architecturale a joué toujours un rôle important dans le 
développement de logiciels complexes et maintenables à moindre coût et avec respect des 
délais. Elle permet de prendre en compte les descriptions haut niveau de systèmes complexes 
et de raisonner sur leurs propriétés. Elle repose généralement sur les modèles à base de 
composants, de connecteurs et de configurations architecturales. Les ADLs, ou encore 
langages de description d’architectures sont des notations qui servent à définir et à exprimer 
la structure haut niveau de l’architecture du logiciel en termes d’une collection de 
composants et de connecteurs et de leur structure d’interconnexion globale (Medvidovic et 
Taylor (2000)). Ils fournissent un modèle abstrait indépendant des détails d’implémentation 
permettant au développeur de raisonner correctement sur les propriétés du logiciel. 
Les travaux menés jusqu’à présent sur le développement centré architecture de logiciels 
portent essentiellement sur la spécification formelle des architectures. La vérification et 
l’analyse des architectures logicielles restent un point ouvert de recherche. En effet, il est 
indispensable d’associer à une architecture logicielle des spécifications précises tant 
