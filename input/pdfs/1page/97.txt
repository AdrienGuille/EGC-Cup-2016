IMOCA : une architecture à base de modes
de fonctionnement pour les systèmes de contrôle de processus
Goulven Guillou ∗, Jean-Philippe Babau ∗
∗Lab-STICC/UMR 6285, UBO, UEB
20 Avenue Le Gorgeu
29200 Brest, France
goulven.guillou@univ-brest.fr
jean-philippe.babau@univ-brest.fr
Résumé. Les systèmes de contrôle de processus s’appuient sur plusieurs modes
de fonctionnement dépendants du contexte. Dans un environnement naturel for-
tement perturbé, il est alors nécessaire de répondre aux trois questions :
1. Quels sont les modes pertinents ?
2. Comment enchaîner plusieurs modes ?
3. Comment paramétrer les modes ?
Pour répondre à ces questions, IMOCA propose une architecture logicielle et
une méthodologie épaulées par des outils de simulation et de mise au point. Le
choix des modes et leur enchaînement reposent sur une expertise métier. L’ar-
chitecture assure la mise en relation des modes et des contextes (données), la
gestion de l’enchaînement des modes par un automate et la mise au point du pa-
ramétrage des modes. L’architecture, indépendante des technologies de capteurs
et d’actionneurs, s’appuie sur trois contrôleurs dits réactif, expert et adaptatif
fonctionnant de manière parallèle et asynchrone.
IMOCA est appliquée au problème du pilotage automatique d’un voilier.
1 Introduction
Les systèmes de contrôle de processus sont de plus en plus utilisés pour assister l’activité
humaine, y compris dans des environnements incertains. Un système de contrôle utilise des
capteurs pour obtenir des informations sur le processus à contrôler et sur son environnement
physique (voir figure 1). A partir de ces informations, des commandes sont déterminées par le
système de contrôle puis appliquées au processus via des actionneurs. De tels systèmes sont
souvent spécifiques à chaque domaine, voire à chaque processus à cause des contraintes liées
à l’environnement. Les engins spatiaux, les véhicules terrestres ou lunaires, les bateaux ou
encore les drones sont des exemples typiques de processus visés par l’étude.
De par les spécificités des processus à contrôler, les systèmes sont souvent développés au
cas par cas, ce qui pose des problèmes de maîtrise, de mise au point du logiciel et au final
de déploiement. Dans ce contexte, disposer d’outils logiciels d’aide au développement et des
- 147 -
