 
 
Méta-modélisation de la transformation de modèles 
 par l'exemple : approche par méta-heuristiques 
 
Marouane Kessentini*, Houari Sahraoui*, Mounir Boukadoum** 
 
* Département d’informatique et de recherche opérationnelle, Université de Montréal 
CP 6128 succ. Centre Ville, Montréal, Québec, H3C 3J7, Canada,  
{kessentm, sahraouh}@iro.umontreal.ca  
** Département d’informatique, Université du Québec à Montréal 
CP 8888, succursale Centre-ville, Montréal QC H3C 3P, Canada   
mounir.boukadoum@uqam.ca 
 
Résumé. La plupart des contributions en transformation de modèles sont con-
cernées par la définition de langages pour exprimer des règles de transforma-
tion. La définition de ces règles est une tâche difficile, car de nombreux pro-
blèmes, liés à l’écriture/génération des règles, doivent être anticipés surtout 
dans le cas des formalismes source/cible qui ne sont pas largement utilisés. 
Dans cet article, nous proposons de considérer le problème de transformation 
comme un problème d'optimisation combinatoire où un modèle cible peut être 
automatiquement généré à partir d'un nombre réduit d'exemples de transforma-
tions. Nous proposons en particulier, une méta-modélisation de notre approche 
MOTOE, basée sur la méta-heuristique recuit simulé, qui combine un en-
semble de solutions de transformation pour converger vers une solution opti-
male tenant compte de la cohérence entre les transformations. Les résultats de 
la validation sur des données industrielles montrent que les modèles obtenus 
sont comparables à ceux proposés par les experts de notre partenaire industriel. 
1 Introduction 
Dans le cadre de l’ingénierie du logiciel dirigée par les modèles, la transformation de 
modèles est une activité qui prend une place de plus en plus importante dans le cycle de 
développement : génération de code, maintenance, optimisation de code, composition 
d’aspects, rétro-ingénierie, etc.. Ainsi, les langages de transformation de modèles représen-
tent des composantes de premier ordre d’un environnement de développement. L'objet de 
base de ces langages est le modèle qui requiert la définition de nouveaux opérateurs, entre 
autres, de construction, navigation, composition, comparaison et évaluation.  
Malgré de nombreuses contributions importantes telles que celles décrites dans (OMG, 
2003), le problème de la transformation de modèles est loin d’être résolu. La principale diffi-
culté est de définir ou d’exprimer des règles de transformation, en particulier pour les forma-
lismes qui ne sont pas largement utilisés. La plupart des contributions en transformation de 
modèles sont concernées par la définition de formalismes pour exprimer des règles de trans-
formation. Ces règles pourraient être mises en œuvre en utilisant différents types de lan-
