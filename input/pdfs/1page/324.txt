Antipattern Detection in Web Ontologies: an Experiment
using SPARQL Queries
Catherine Roussey∗, Oscar Corcho∗∗, Ondrˇej Šváb-Zamazal∗∗∗, François Scharffe∗∗∗∗,
Stephan Bernard∗
∗Irstea/Cemagref, 24 Av. des Landais, BP 50085, Aubiére, France
∗∗Ontology Engineering Group, Universidad Politécnica de Madrid, Spain
∗∗∗Knowledge Engineering Group, University of Economics Prague, Czech Republic
∗∗∗∗LIRMM, Université de Montpellier, France
Abstract. Ontology antipatterns are structures that reflect ontology modelling
problems because they lead to inconsistencies, bad reasoning performance or
bad formalisation of domain knowledge. We propose four methods for the de-
tection of antipatterns using SPARQL queries. We conduct some experiments to
detect antipattern in a corpus of OWL ontologies.
1 Introduction
The concept of knowledge modelling pattern or ontology design pattern is used to refer
to modelling solutions that allow solving recurrent knowledge modelling or ontology design
problems, Presutti et al. (2008). Antipatterns are patterns that are ineffective or far from op-
timal in practice, representing worst practices about how to structure and design an ontology.
There are several tools that can be used for the detection of antipatterns. Pellint 1 focuses on
the detection and repair of antipatterns to improve ontology reasoning performance. Tools like
Explanation Workbench described in Horridge et al. (2008), or SWOOP described in Kalyan-
pur et al. (2005), provide justifications of inconsistencies in ontologies based on the outputs of
DL reasoners. However, all these contributions need a reasoner to provide their justifications.
Our antipattern detection methods implement a more general approach, that can work on
any antipattern and can be applied without the use of a reasoner, something that is very useful
with large ontologies and when the number of errors in an ontology is so large that the previous
justification systems are not able to handle them properly, providing timeouts. To detect the se-
lected antipattern, we have transformed it into sets of SPARQL queries. In general, antipatterns
correspond to several queries, because they are abstract structures that can have several logical
forms when expressed in Description Logics (DL). Moreover we have proposed several de-
tection methods. We can switch on or off inferences before running SPARQL queries. We can
also transform the original ontologies into a form where simpler SPARQL queries can be run.
This paper is structured as follows. Section 2 briefly describes the antipattern that will
be used to run our experiments. Section 3 will describe the methods we have followed in
order to run the experiments. Section 4 describes the experiment setup and the results of the
1. http://pellet.owldl.com/pellint
- 263 -
